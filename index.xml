<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal</title>
    <link>/</link>
    <description>Recent content on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A post</title>
      <link>/posts/deep-research-on-preterism/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/deep-research-on-preterism/</guid>
      <description>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020250227111402.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is some deep research on a hot topic that is always being debated at my small group.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll conduct a deep research study comparing Preterism and Futurism/Dispensationalism, focusing on biblical evidence, historical development, theological arguments, and scholarly perspectives. I&amp;rsquo;ll analyze key scriptural passages (e.g., Revelation, Daniel, Matthew 24) and how they are interpreted by each view. Additionally, I&amp;rsquo;ll explore how historical events are used to support or challenge these perspectives and highlight relevant theological debates. I&amp;rsquo;ll get back to you with a comprehensive analysis soon.&lt;/p&gt;</description>
      <content>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020250227111402.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is some deep research on a hot topic that is always being debated at my small group.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll conduct a deep research study comparing Preterism and Futurism/Dispensationalism, focusing on biblical evidence, historical development, theological arguments, and scholarly perspectives. I&amp;rsquo;ll analyze key scriptural passages (e.g., Revelation, Daniel, Matthew 24) and how they are interpreted by each view. Additionally, I&amp;rsquo;ll explore how historical events are used to support or challenge these perspectives and highlight relevant theological debates. I&amp;rsquo;ll get back to you with a comprehensive analysis soon.&lt;/p&gt;
&lt;h1 id=&#34;preterism-vs-futurismdispensationalism-an-in-depth-comparison&#34;&gt;Preterism vs. Futurism/Dispensationalism: An In-Depth Comparison&lt;/h1&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Preterism&lt;/strong&gt; and &lt;strong&gt;Futurism/Dispensationalism&lt;/strong&gt; represent two major approaches to biblical eschatology (end-times interpretation). Preterism (from Latin &lt;em&gt;praeter&lt;/em&gt;, &amp;ldquo;past&amp;rdquo;) holds that many or all end-time prophecies in Scripture have already been fulfilled in the past, especially in events of the first few centuries A.D. (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Preterism%20is%20a%20Christian%20eschatological,of%20Jerusalem%20in%20AD%2070&#34;&gt;Preterism - Wikipedia&lt;/a&gt;). In contrast, Futurism expects that most of these prophetic events are yet to occur in the future, often in a climactic period just before the second coming of Christ (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Futurism%20is%20the%20view%20that,actually%20a%20form%20of%20futurism&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;) (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Futurism%20arose%20first,somewhere%20between%201581%20and%201593&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). Dispensationalism is a modern form of Futurism that divides history into distinct “dispensations” or eras of God’s plan, maintaining a future role for national Israel separate from the Church (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=There%20are%20two%20forms%20of,Christ%20returns%20in&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). This study will compare these viewpoints by examining their biblical evidence, historical development, theological arguments, and perspectives from scholars. Key scriptures – including the &lt;strong&gt;Olivet Discourse&lt;/strong&gt; of Matthew 24, the prophecies of &lt;strong&gt;Daniel&lt;/strong&gt;, and the Book of &lt;strong&gt;Revelation&lt;/strong&gt; – will be analyzed in light of each interpretation. We will also note historical events each side cites as fulfillments or foreshadowings, and highlight modern debates and scholarly consensus where applicable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(For clarity, we will focus primarily on “partial” preterism (which allows for some future events) versus dispensational futurism, since &lt;strong&gt;full preterism&lt;/strong&gt; – the view that &lt;em&gt;all&lt;/em&gt; prophecy and even Christ’s return occurred in the first century – is considered outside mainstream Christian theology (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,the%20realm%20of%20Christian%20orthodoxy&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=outside%20of%20orthodoxy,%E2%80%9CExtreme&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;).)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;understanding-preterism&#34;&gt;Understanding Preterism&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Preterism&lt;/strong&gt; is the view that the major prophetic portions of Scripture – especially passages like Matthew 24 (the Olivet Discourse) and most of Revelation – were fulfilled in the events surrounding the fall of Jerusalem in A.D. 70 and related first-century events (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,Jerusalem&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Preterists point to Jesus’ own words &lt;em&gt;“this generation will not pass away until all these things take place”&lt;/em&gt; (Matt. 24:34) as a timing indicator that forces a first-century fulfillment for the bulk of end-time prophecy (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Discourse%20and%20the%20Book%20of,century%2C%20they%20believe%20they%20are&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). They also note Revelation’s repeated statements that Christ’s coming was “soon” or “at hand” (e.g. Rev. 1:1, 22:6–10), suggesting the events it describes were imminent for its original audience (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Discourse%20and%20the%20Book%20of,Jerusalem&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). In light of these claims of nearness, preterists interpret the apocalyptic imagery of prophecy as referring to the &lt;strong&gt;Roman-Jewish War&lt;/strong&gt; and the destruction of the Jerusalem Temple in 70 A.D., rather than to a distant future apocalypse.&lt;/p&gt;
&lt;h3 id=&#34;partial-vs-full-preterism&#34;&gt;Partial vs. Full Preterism&lt;/h3&gt;
&lt;p&gt;Within preterism there are varying degrees. &lt;strong&gt;Partial (or moderate) preterists&lt;/strong&gt; believe most end-times prophecies (tribulation, Antichrist, etc.) were fulfilled by A.D. 70, but still expect a future literal second coming of Christ, a bodily resurrection of the dead, and final judgment at the end of history (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,coming%2C%20they%20say%2C%20the%20Bible&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=passages%20still%20teach%20a%20yet,the%20realm%20of%20Christian%20orthodoxy&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). They hold that passages like Acts 1:11 or 1 Corinthians 15, which clearly predict a visible return of Jesus and the resurrection, await future fulfillment. In contrast, &lt;strong&gt;full preterists&lt;/strong&gt; (sometimes called “consistent” or extreme preterists) assert that &lt;em&gt;all&lt;/em&gt; biblical prophecy was fulfilled by 70 A.D., including Christ’s second coming and the resurrection – but they interpret those events spiritually (for example, saying Jesus “came” in judgment on Israel in 70 A.D. and that the resurrection is spiritual) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,the%20realm%20of%20Christian%20orthodoxy&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=70%20in%20conjunction%20with%20the,and%20new%20earth%20of%20Revelation&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Full preterism thus concludes we are already living in the promised age of the New Heavens and New Earth &lt;strong&gt;now&lt;/strong&gt;, with no future consummation to come (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=70%20in%20conjunction%20with%20the,and%20new%20earth%20of%20Revelation&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). This view is considered heterodox by almost all churches, since it effectively negates key future Christian hopes (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=outside%20of%20orthodoxy,%E2%80%9CExtreme&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Partial preterism, on the other hand, is considered an orthodox option and has been adopted by some conservative theologians.&lt;/p&gt;
&lt;h3 id=&#34;biblical-basis-for-preterism&#34;&gt;Biblical Basis for Preterism&lt;/h3&gt;
&lt;p&gt;Preterists build their case on several key scriptural observations. First, as noted, Jesus’ statement &lt;em&gt;“this generation will certainly not pass away until all these things have happened”&lt;/em&gt; (Matt. 24:34) is taken at face value to mean the generation of Jesus’ contemporaries would see the fulfillment of the Olivet Discourse (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Discourse%20and%20the%20Book%20of,century%2C%20they%20believe%20they%20are&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Indeed, the apostles had asked Jesus when the Temple would be destroyed and what sign would signal “the end of the age” (Matt. 24:3), and Jesus gave a series of signs (wars, famines, false messiahs, etc.) that, in the preterist view, correspond to events that occurred in the 30s–60s A.D., leading up to the siege of Jerusalem. Preterists cite historical records (e.g. the Jewish historian Josephus) showing that prior to 70 A.D. there were false messianic claimants, numerous wars and rebellions in the Roman Empire, earthquakes, and famine – just as Jesus predicted (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,the%20beginning%20of%20birth%20pains&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=of%20wars%20and%20rumors%20of,the%20beginning%20of%20birth%20pains&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). They point out that Christians in Jerusalem did “flee to the mountains” (Matt. 24:16–20) when the Roman armies approached, heeding Jesus’ warning – according to early church historians, the Jerusalem church escaped to Pella before the final destruction (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Preterism%20is%20the%20view%20that,concerning%20the%20destruction%20of%20Jerusalem&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). Preterists also argue that the “&lt;strong&gt;great tribulation&lt;/strong&gt;” Jesus described, &lt;em&gt;“unequaled from the beginning of the world until now”&lt;/em&gt; (Matt. 24:21), was fulfilled in the unparalleled horrors of the Jewish War and the siege of Jerusalem, in which up to a million Jews perished and the Temple was completely destroyed (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,never%20to%20be%20equaled%20again&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In Luke’s version of the Olivet Discourse, Jesus says, &lt;em&gt;“When you see Jerusalem surrounded by armies, then know that its desolation is near”&lt;/em&gt; (Luke 21:20) – a clear reference to the Roman army encircling the city in 70 A.D. Preterists see this as solid biblical evidence that the discourse was meant to warn about &lt;strong&gt;first-century events&lt;/strong&gt;. Even the cosmic signs (sun and moon darkened, etc.) in Matthew 24:29 can be understood as typical prophetic symbolism for national judgment (drawing on Old Testament imagery) rather than literal astronomical events. Thus, the &lt;strong&gt;“coming of the Son of Man on the clouds”&lt;/strong&gt; (Matt. 24:30) is taken to refer not to Jesus’ final return at the end of time, but to a coming in judgment &lt;em&gt;within&lt;/em&gt; history – specifically, His vindication and judgment upon unbelieving Israel via the Roman invasion (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=%3E%20,David%20Chilton%20%28Preterist&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=C,others%20is%20known%20as%20Preterism&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;). Preterists note that similar cloud-coming imagery was used in the Old Testament for God’s coming in judgment on nations (e.g. Isaiah 19:1 describes the Lord “coming on a swift cloud” to judge Egypt). In this reading, Christ’s “coming” in 70 A.D. was a &lt;strong&gt;providential act of judgment&lt;/strong&gt; rather than His final personal appearance.&lt;/p&gt;
&lt;p&gt;The Book of &lt;strong&gt;Revelation&lt;/strong&gt; is likewise seen as largely (or entirely) fulfilled in the early centuries. Preterists often hold that Revelation was written before 70 A.D. (during Nero’s reign, c. 65–68 A.D.) so that it would be a genuine prophecy of the imminent turmoil. They point to internal clues: for example, John is told to measure the Temple in Revelation 11, suggesting the Temple was still standing at the time of writing. They identify the &lt;strong&gt;Beast&lt;/strong&gt; of Revelation with Emperor &lt;strong&gt;Nero&lt;/strong&gt; (who reigned 54–68 A.D.), noting that the infamous “number of the beast – 666” can correspond to “Nero Caesar” when spelled in Hebrew letters (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=,the%20Protestant%20movement%2C%20although%20in&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;). Early preterist interpreters (including the 17th-century Jesuit Luis de Alcázar, see below) taught that &lt;em&gt;“Antichrist refers to Nero and…the prophecies were fulfilled long before… the medieval church”&lt;/em&gt; (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=,the%20Protestant%20movement%2C%20although%20in&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;). Some also see the “seven kings” in Revelation 17:10 as a coded reference to the line of Roman emperors, with &lt;em&gt;“five…fallen, one is, and one is to come for a short time”&lt;/em&gt; – by one reckoning, at the time of the Jewish War five emperors (Augustus through Claudius) had died, the “one [that] is” would be Nero (the sixth, reigning during the war), and the next to come (“for a little while”) could be Galba or one of the short-lived emperors of 69 A.D. This kind of analysis leads preterists to see Revelation’s vivid judgments as depicting God’s wrath on &lt;strong&gt;apostate Jerusalem&lt;/strong&gt; (the “harlot Babylon” drunk with the blood of prophets and saints, see Rev. 17–18) and on &lt;strong&gt;pagan Rome&lt;/strong&gt;, rather than on the whole globe (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=%E2%80%9CPreterists%20hold%20that%20the%20major,of%20the%20saints%2C%20in%20the&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). In fact, one strain of preterism holds that the first half of Revelation focuses on the fall of Jerusalem (AD 70) and the second half on the fall of imperial Rome (fulfilled by the 5th century) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=%E2%80%9CPreterists%20hold%20that%20the%20major,of%20the%20saints%2C%20in%20the&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). In either case, the events were &lt;em&gt;“soon to take place”&lt;/em&gt; for John’s readers (Rev. 1:1, 22:10), not millennia distant. Preterists often interpret the &lt;strong&gt;“New Heavens and New Earth”&lt;/strong&gt; (Rev. 21–22) as a description of the &lt;strong&gt;New Covenant era&lt;/strong&gt; that followed the passing of the old covenant order in 70 A.D. – in other words, we are now spiritually living in the inaugurated new heavens and earth in Christ’s kingdom (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=justified%20in%20making%20the%20rest,them%20mild%2C%20moderate%2C%20and%20extreme&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,coming%2C%20they%20say%2C%20the%20Bible&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). (Partial preterists would add that there will be a final &lt;em&gt;consummation&lt;/em&gt; of that kingdom when Jesus literally returns in the future, even if most of Revelation’s storyline is past.)&lt;/p&gt;
&lt;h3 id=&#34;historical-development-of-preterism&#34;&gt;Historical Development of Preterism&lt;/h3&gt;
&lt;p&gt;Historically, the &lt;strong&gt;preterist interpretation&lt;/strong&gt; as a systematic approach first emerged in the wake of the Protestant Reformation. For centuries, &lt;strong&gt;historicist&lt;/strong&gt; readings dominated Protestant thought – Reformers like Luther and Calvin viewed the Antichrist and beast imagery of Daniel and Revelation as fulfilled in the ongoing history of the Church (especially in the medieval papacy or oppressive regimes) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,the%20last%20150%20years%2C%20within&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). In response, scholars of the Counter-Reformation sought alternative explanations that would steer prophetic interpretation away from identifying the Roman Church with the Antichrist. In &lt;strong&gt;1614&lt;/strong&gt;, a Spanish Jesuit named &lt;strong&gt;Luis de Alcázar&lt;/strong&gt; (Alcazar) published &lt;em&gt;Vestigatio arcani sensus in Apocalypsi&lt;/em&gt; (“Investigation of the Hidden Sense of the Apocalypse”), the first comprehensive preterist exposition of Revelation (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Historically%2C%20preterists%20and%20non,Reformation.%5B%202&#34;&gt;Preterism - Wikipedia&lt;/a&gt;) (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=But%20the%20Catholic%20church%20is,the%20early%20years%20after%20Christ&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). Alcázar proposed that Revelation dealt not with the end of the world, but with events in the &lt;em&gt;early&lt;/em&gt; centuries: the triumph of Christianity over its Jewish and pagan foes in antiquity (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=One%20of%20the%20arguments%20used,The%20Historical%20Development%20of%20Prophetic&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;) (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=which%20%E2%80%9Che%20proposed%20that%20all,Cited%20in%20LeRoy%20Edwin%20Froom&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;). One summary of Alcázar’s preterist thesis says: &lt;em&gt;“The Revelation [was] explained by the fall of Jerusalem or by the fall of pagan Rome in 410 A.D.… [it] deals with events in the Pagan Roman Empire, that Antichrist refers to Nero and… the prophecies were fulfilled long before… the medieval church”&lt;/em&gt; (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=the%20first%20six%20centuries%20of,2%3A488&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;) (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=,the%20Protestant%20movement%2C%20although%20in&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;). This interpretation conveniently exonerated the contemporary Catholic Church from Revelation’s dire judgments, by locating those prophecies in the past.&lt;/p&gt;
&lt;p&gt;Outside Catholic circles, preterism spread gradually. It was “first promulgated in completeness by the Jesuit Alcasar” and later adopted in part by some Protestants like Dutch theologian &lt;strong&gt;Hugo Grotius (1583–1645)&lt;/strong&gt; (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=%3E%20Preterism%20,Testament%20for%20English%20Readers%2C%201872&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). Grotius, eager to find common ground with Catholics, applied many prophecies to the fall of Jerusalem and the Roman Empire (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=persecuting%20apostasy.&#34;&gt;Preterism - Wikipedia&lt;/a&gt;). Over time, other interpreters such as the French Catholic Bishop &lt;strong&gt;Jacques Bossuet (1627–1704)&lt;/strong&gt; also advocated preterist views (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=%3E%20Preterism%20,Testament%20for%20English%20Readers%2C%201872&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). Still, until the 19th–20th centuries, preterism remained relatively marginal in Protestant theology (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=But%20the%20Catholic%20church%20is,the%20early%20years%20after%20Christ&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;) (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=antagonist%20of%20Protestantism.,Testament%20for%20English%20Readers%2C%201872&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). The dominant Protestant view through the 1800s was historicist (especially among historic churches and groups like Seventh-day Adventists) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=Idealism%2C%20as%20an%20approach%20to,the%20last%20150%20years%2C%20within&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=current%20evangelical%20debate%20over%20when,At%20the&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;), while &lt;strong&gt;futurism&lt;/strong&gt; began gaining ground in the 1800s (see below).&lt;/p&gt;
&lt;p&gt;In the late 20th century, &lt;strong&gt;preterism saw a surge of interest&lt;/strong&gt; among some evangelical scholars and Reformed theologians. Notably, Dr. &lt;strong&gt;R.C. Sproul&lt;/strong&gt; (1939–2017), a respected Reformed teacher, embraced partial preterism and helped popularize it in his 1998 book &lt;em&gt;The Last Days According to Jesus&lt;/em&gt;. This marked a significant entry of preterist ideas into mainstream conservative Christianity (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=evangelicalism%2C%20futurism%20has%20grown%20to,Scripture%20such%20as%20the%20Olivet&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=the%20ranks%20of%20preterism%2C%20from,24%3A34%20and%20its%20parallel%20passages&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). One observer in 1999 noted that the rise of “evangelical Preterism” was an attempt to challenge the long-dominant futurist scenario, and in a span of a few years, the number of preterist adherents grew from mere hundreds to many thousands (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=evangelicalism%2C%20futurism%20has%20grown%20to,Scripture%20such%20as%20the%20Olivet&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=the%20ranks%20of%20preterism%2C%20from,24%3A34%20and%20its%20parallel%20passages&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Today, &lt;strong&gt;partial preterism&lt;/strong&gt; is espoused by a number of scholars, particularly in Reformed and postmillennial circles (e.g. Kenneth Gentry, Gary DeMar). However, &lt;strong&gt;full preterism&lt;/strong&gt; is rejected by virtually all academic and church authorities; even many partial preterists vigorously oppose full preterism as it conflicts with creedal Christian doctrines of a future bodily return of Christ and resurrection of the dead (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=outside%20of%20orthodoxy,%E2%80%9CExtreme&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=Whatever%20disagreements%20in%20detail%20they,we%20can%20only%20highlight%20here&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;understanding-futurism-and-dispensationalism&#34;&gt;Understanding Futurism and Dispensationalism&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Futurism&lt;/strong&gt; is the approach that treats most prophetic events in books like Daniel and Revelation, as well as passages like Matthew 24, as future realities still awaiting fulfillment. In a futurist reading, prophecies about a time of great tribulation, a sinister Antichrist figure, worldwide plagues, the return of Christ, and the resurrection and judgment are interpreted &lt;strong&gt;literally&lt;/strong&gt; and placed at the end of the present age, just before and including Christ’s second coming (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Futurism%20is%20the%20view%20that,actually%20a%20form%20of%20futurism&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=The%20futurist%20generally%20believes%20that,79&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). While futurists acknowledge that some predictions (such as the destruction of Jerusalem in 70 A.D.) have past fulfillments, they maintain that the ultimate referent of New Testament eschatology is the &lt;em&gt;end of the age&lt;/em&gt; and the consummation of history, not the first-century events alone. As one summary puts it, &lt;em&gt;“the futurist generally believes that all of the visions from Revelation 4:1 to the end of the book are yet to be fulfilled in the period immediately preceding and following the Second Advent of Christ.”&lt;/em&gt; (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=The%20futurist%20generally%20believes%20that,79&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dispensationalism&lt;/strong&gt; is a specific framework within futurism that became very influential in the last two centuries. Dispensational theology, founded by &lt;strong&gt;John Nelson Darby&lt;/strong&gt; in the 19th century, divides God’s dealings with humanity into distinct eras or “dispensations” and emphasizes a distinction between &lt;strong&gt;Israel&lt;/strong&gt; and the &lt;strong&gt;Church&lt;/strong&gt; in prophecy (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=recent%20past%20which%20have%20championed,78%20As&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=and%20promises%20involving%20Israel%2C%20and,way%20that%20most%20unbiased%20readers&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Dispensationalists are always futurists, as they believe the prophetic clock for Israel paused with Christ’s first coming and the Church Age, and will resume in the end-times. All dispensationalists anticipate a coming seven-year &lt;strong&gt;Tribulation&lt;/strong&gt; period (often understood as Daniel’s 70th week) in which many end-time prophecies will unfold, followed by Jesus’ second coming to establish a &lt;strong&gt;literal 1,000-year Millennium&lt;/strong&gt; on earth (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=Futurists%20see%20eschatological%20passages%20being,%E2%80%9D80&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=There%20are%20two%20forms%20of,Christ%20returns%20in&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). A hallmark of classic dispensationalism is the belief in a &lt;strong&gt;pre-tribulation rapture&lt;/strong&gt; of the Church – Christ snatching away believers to heaven &lt;em&gt;before&lt;/em&gt; the Tribulation begins – allowing God to focus again on Israel during those final seven years (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=There%20are%20two%20forms%20of,Christ%20returns%20in&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=parenthesis%20in%20this%20plan%2C%20as,31&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). (Not all futurists hold to a pre-trib rapture; some are &lt;strong&gt;historic premillennialists&lt;/strong&gt; who expect the Church to endure the Tribulation and Christ to return &lt;em&gt;after&lt;/em&gt; it (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=%E2%80%9Cgreat%20tribulation%E2%80%9D%20,82&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). In other words, all dispensationalists are futurists, but not all futurists are dispensationalists (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=Futurists%20see%20eschatological%20passages%20being,%E2%80%9D80&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;).)&lt;/p&gt;
&lt;h3 id=&#34;biblical-basis-for-futurism&#34;&gt;Biblical Basis for Futurism&lt;/h3&gt;
&lt;p&gt;Futurists argue that while certain prophecies had preliminary fulfillments in the past, many biblical predictions clearly await a &lt;strong&gt;future, global, and climactic&lt;/strong&gt; fulfillment. They point to the plain meaning of texts that describe the visible, bodily &lt;strong&gt;return of Jesus&lt;/strong&gt; and the resurrection of the dead as obviously not having occurred yet in history. For example, Jesus said His coming would be as openly manifest as lightning flashing across the sky (Matt. 24:27) and that &lt;em&gt;“all the peoples of the earth… will see the Son of Man coming on the clouds of heaven with power and great glory”&lt;/em&gt; (Matt. 24:30). Such an event, futurists note, did &lt;strong&gt;not&lt;/strong&gt; occur in 70 A.D.; that year, the Roman armies came, not Christ himself visibly in glory. They also highlight that Jesus’ coming is linked with the &lt;strong&gt;judgment of all nations&lt;/strong&gt; and the &lt;strong&gt;gathering of the elect&lt;/strong&gt; by angels (Matt. 24:31), and insist this did not happen in the first century (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,distress%20of%20those%20days&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Thus, however one interprets “this generation” in Matthew 24:34, the &lt;strong&gt;ultimate&lt;/strong&gt; fulfillment of the Olivet Discourse prophecies must be future. Some futurists concede that Luke 21’s version of the discourse mixes near and far events (with 70 A.D. as a foreshadowing of the end), but they see in Matthew 24:21 an &lt;em&gt;open-ended&lt;/em&gt; description: &lt;em&gt;“then there will be great distress, unequaled from the beginning of the world until now – and never to be equaled again”&lt;/em&gt;. They argue that the horrors of 70 A.D., while terrible, do not match the scale of uniqueness implied here (for instance, later events like the Black Death or World Wars caused far more worldwide devastation) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,never%20to%20be%20equaled%20again&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Therefore, Jesus must have been looking beyond the first-century to an even greater future tribulation that will immediately precede his Second Coming.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Pauline epistles&lt;/strong&gt; and other New Testament writings are also cited in support of futurism. Paul expected a future &lt;strong&gt;“man of lawlessness”&lt;/strong&gt; who would exalt himself in God’s temple and perform false miracles, only to be destroyed by Christ’s coming (2 Thess. 2:3–8). Futurists identify this figure with the final Antichrist, not seeing any first-century person who completely fits that description (some preterists suggest Nero or another emperor, but Nero did not literally sit in the Jerusalem Temple or get slain by Christ’s arrival) – thus they place this “lawless one” in a future context. Likewise, the book of Revelation describes apocalyptic plagues (e.g. a third of humanity killed, Rev. 9:15–18) and other catastrophes that, according to futurists, have &lt;strong&gt;no documented equivalent in past events&lt;/strong&gt;, certainly not confined to 70 A.D. or the Roman Empire. These are taken as &lt;strong&gt;literal future judgments&lt;/strong&gt; God will pour out on a wicked world in the end-times. The &lt;strong&gt;mark of the beast&lt;/strong&gt; system (Rev. 13:16–17), which controls buying and selling, also has no known fulfillment in antiquity – futurists often speculate it points to a future global economic control, perhaps via technology. In summary, &lt;strong&gt;futurism reads prophecy “straightforwardly”&lt;/strong&gt; as predicting real, observable events on a worldwide scale that are still pending. Passages that preterists interpret symbolically (like cosmic disturbances or Jesus coming on clouds in judgment) futurists tend to interpret more &lt;strong&gt;literally&lt;/strong&gt; or at least as events that will be unmistakably obvious when they happen. As one scholar observed: &lt;em&gt;“The more literal an interpretation one adopts, the more strongly will he be construed to be a futurist.”&lt;/em&gt; (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=Futurists%20see%20eschatological%20passages%20being,%E2%80%9D80&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=and%20during%20the%20millennium,%E2%80%9D80&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dispensational futurists&lt;/strong&gt; in particular lean heavily on the &lt;strong&gt;Book of Daniel&lt;/strong&gt; to outline the future. Daniel’s prophecy of the &lt;strong&gt;Seventy Weeks&lt;/strong&gt; (Daniel 9:24–27) is a cornerstone: Futurists contend that this prophecy forecasts a 490-year timeline for Israel, of which 483 years (69 “weeks” of years) were fulfilled between the decree to rebuild Jerusalem and the first coming of Christ, but the final 7-year “week” is separated by a long &lt;strong&gt;gap&lt;/strong&gt; and will only occur at the end of the age (&lt;a href=&#34;https://theos.org/forum/viewtopic.php?t=1918#:~:text=Daniel%27s%2070%207%27s%3A%20Futurist%20vs,see%20as%20a%20future&#34;&gt;Daniel&amp;rsquo;s 70 7&amp;rsquo;s: Futurist vs Preterist Perspectives&lt;/a&gt;). They interpret Daniel 9:27 (“he shall confirm a covenant with many for one week, and in the middle of the week shall put an end to sacrifice… and on the wing of abominations shall be one who makes desolate”) as referring to a future Antichrist who will make a 7-year pact involving Israel, then betray it by stopping Jewish sacrifices and committing a sacrilege (the “abomination of desolation”) in a rebuilt temple, triggering the Great Tribulation. By this view, &lt;em&gt;“at an unknown time in the future, the 70th week… will commence”&lt;/em&gt;, inaugurating the final seven-year Tribulation (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=At%20an%20unknown%20time%20in,at%20the%20end%20of%20the&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). This approach requires that the prophetic clock “paused” after the Messiah’s first coming, allowing the Church Age (a mystery not seen by Daniel) to occupy the interim (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=as%20a%20whole,Christ%2C%20both%20Jews%20and%20Gentiles&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=At%20an%20unknown%20time%20in,year%20Millennial%20Kingdom&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). Dispensationalists justify the &lt;strong&gt;gap&lt;/strong&gt; partly because Daniel 9:26 seems to separate Messiah’s coming and the temple’s destruction from the 70th week in verse 27. By contrast, preterists object that this gap is an artificial insert, noting that they interpret the 70th week as following sequentially with no break (fulfilled by Christ’s ministry and the events of 70 A.D.) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterist%20view%20associates%20the%2070th,We%20must%20also%20mention%20that&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterists%20typically%20see%20the%2070th,Heb%2010&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). But futurists respond that certain aspects of Daniel’s prophecy were not fully satisfied in the first century (for example, the prophecy speaks of bringing in “everlasting righteousness” and completely ending sin (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=In%20verse%2024%2C%20%E2%80%9Cto%20finish,believe%20it%20to%20be%20the&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=The%20degree%20to%20rebuild%20Jerusalem,translates%20into%20English%20as%20%E2%80%9CMessiah%E2%80%9D&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;), which did not literally occur by 70 A.D.). Thus, they see &lt;strong&gt;Daniel’s final week&lt;/strong&gt; as still &lt;strong&gt;pending&lt;/strong&gt; – the future Tribulation period. During that future period, many Old Testament prophecies concerning Israel’s restoration and repentance (e.g. Zechariah 12–14) are expected to occur.&lt;/p&gt;
&lt;p&gt;When it comes to the &lt;strong&gt;Book of Revelation&lt;/strong&gt;, futurists assert that from chapter 4 onwards, John’s visions describe the &lt;strong&gt;end-times&lt;/strong&gt;. The letters to the seven churches (Rev. 2–3) address first-century congregations, but the apocalyptic scenes that follow – the seal, trumpet, and bowl judgments, the Beast/Antichrist’s reign, the Battle of Armageddon, etc. – are taken as &lt;strong&gt;literal future events&lt;/strong&gt; unfolding in the final crisis of history (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=The%20futurist%20generally%20believes%20that,79&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). This interpretation has been popularized not only in scholarly commentary but in many popular books and novels (such as the best-selling &lt;em&gt;Left Behind&lt;/em&gt; series, which was based on dispensational futurism) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=and%20promises%20involving%20Israel%2C%20and,way%20that%20most%20unbiased%20readers&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=the%20hugely%20popular%20Left%20Behind,as%20having%20been%20fulfilled%20by&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Futurists often correlate Revelation with Jesus’ Olivet Discourse and with Daniel: for instance, the Beast’s 42-month reign (Rev. 13:5) is equated to the latter half of Daniel’s 70th week (3½ years), and the &lt;strong&gt;“abomination of desolation”&lt;/strong&gt; Jesus mentioned (Matt. 24:15) is linked to the image of the Beast set up in Revelation 13. They anticipate actual fulfillment of the terrifying plagues (Revelation 8–9, 16) and a literal gathering of the world’s armies against Jerusalem for the final war (Rev. 16:14–16). After Christ returns in glory (Rev. 19), Revelation 20 is read as a prophecy of a real &lt;strong&gt;Millennial Kingdom&lt;/strong&gt; – a 1,000-year reign of Christ and the resurrected saints on earth – followed by a final rebellion by Satan, the last judgment, and the creation of a new heaven and new earth. All of these, according to futurists, are &lt;em&gt;still future&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To bolster their case, futurists often cite &lt;strong&gt;early church writings&lt;/strong&gt; which indicate that the first generations of Christians expected a future Antichrist and a future millennium. Indeed, many of the &lt;em&gt;earliest&lt;/em&gt; Christian commentators (in the 2nd and 3rd centuries) were &lt;strong&gt;premillennial&lt;/strong&gt; (chiliastic) and believed in a coming period of tribulation. For example, Church fathers like &lt;strong&gt;Justin Martyr&lt;/strong&gt; (d. 165), &lt;strong&gt;Irenaeus&lt;/strong&gt; (d. ~195), and &lt;strong&gt;Hippolytus&lt;/strong&gt; (d. 236) all anticipated a literal future fulfillment of Antichrist prophecies and a millennial reign of Christ on earth (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=Futurism%20was%20undeniably%20the%20system,236%29%2C%20and&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). These early expositors held a view that “various forms of [futurism]” were the norm in the ante-Nicene church (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=Futurism%20was%20undeniably%20the%20system,236%29%2C%20and&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Futurists argue this shows their reading is not a modern invention but was a natural understanding of the prophecies from the beginning, whereas preterism as a system came much later. (Preterists counter that the &lt;strong&gt;New Testament&lt;/strong&gt; itself shows many prophecies &lt;em&gt;were&lt;/em&gt; fulfilled early – such as Jesus’ clear prediction of Jerusalem’s fall – and they assert that the early church’s expectation of an imminent second coming, while fervent, does not negate the possibility that some prophecies had immediate fulfillments too.)&lt;/p&gt;
&lt;h3 id=&#34;historical-development-of-futurism-and-dispensationalism&#34;&gt;Historical Development of Futurism and Dispensationalism&lt;/h3&gt;
&lt;p&gt;In the &lt;strong&gt;Reformation era&lt;/strong&gt;, as mentioned, the dominant Protestant view was historicist. However, a form of &lt;strong&gt;futurism&lt;/strong&gt; was introduced by Catholic writers as a defensive strategy. In &lt;strong&gt;1590&lt;/strong&gt;, Jesuit theologian &lt;strong&gt;Francisco Ribera&lt;/strong&gt; published a commentary on Revelation that proposed most of it referred to a brief period &lt;em&gt;just prior to the end of the world&lt;/em&gt;, featuring a single future Antichrist who persecutes the Church (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Futurism%20arose%20first,somewhere%20between%201581%20and%201593&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). This effectively removed the Papacy from the line of fire by pushing Antichrist into the future. Ribera’s Futurist view argued that &lt;em&gt;“Revelation looks beyond the first century to the period immediately before the end times… Jesuit scholars after the Reformation refined this approach to prove that [the] attempts to identify the Pope as the Antichrist could not be true since the Antichrist will not be revealed until far into the future, just before the Parousia.”&lt;/em&gt; (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=,Walls%2C%C2%A0The%20Oxford%20Handbook%20of%20Eschatology%2C%C2%A02007&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;) In the 17th–18th centuries, elements of futurism cropped up among some Protestant interpreters, but it did not become widespread in the churches.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;explosion of futurism&lt;/strong&gt; (especially in its dispensational form) occurred in the 19th century. &lt;strong&gt;John Nelson Darby (1800–1882)&lt;/strong&gt;, an Anglo-Irish Bible teacher and a leader among the Plymouth Brethren, is often called “the father of modern dispensationalism and futurism” (&lt;a href=&#34;https://en.wikipedia.org/wiki/John_Nelson_Darby#:~:text=John%20Nelson%20Darby%20,2&#34;&gt;John Nelson Darby - Wikipedia&lt;/a&gt;). Darby around the 1830s developed a detailed end-times scheme: he taught that the Church would be secretly raptured before a final tribulation, during which a restored Israel would face the Antichrist, followed by Christ’s return to inaugurate the millennium. This was a &lt;strong&gt;new synthesis&lt;/strong&gt; of biblical prophecy that Darby and his associates vigorously promoted in Britain and North America. It caught on especially in the United States after American Congregationalist minister &lt;strong&gt;C.I. Scofield&lt;/strong&gt; produced the &lt;em&gt;Scofield Reference Bible&lt;/em&gt; (1909), which included dispensationalist notes and timelines. Scofield’s study Bible became immensely popular in the early 20th century and helped entrench futurist–dispensational interpretations in American evangelicalism (&lt;a href=&#34;https://en.wikipedia.org/wiki/John_Nelson_Darby#:~:text=Brethren%20%20and%20the%20founder,2&#34;&gt;John Nelson Darby - Wikipedia&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/John_Nelson_Darby#:~:text=tribulation%20%20rapture%20%20theology,2&#34;&gt;John Nelson Darby - Wikipedia&lt;/a&gt;). By the mid-20th century, many evangelical churches and Bible colleges taught some form of dispensational futurism as standard. Well-known evangelical pastors and authors (from &lt;strong&gt;Hal Lindsey&lt;/strong&gt; of &lt;em&gt;The Late Great Planet Earth&lt;/em&gt; in the 1970s to &lt;strong&gt;Tim LaHaye&lt;/strong&gt; of &lt;em&gt;Left Behind&lt;/em&gt; fame in the 1990s) further publicized the view, often by linking Revelation’s prophecies to current events and future scenarios (e.g. speculating about the identity of the Antichrist, the meaning of 666, or the role of modern Israel). Because of this, by the turn of the millennium, futurist prophecy beliefs – especially the expectation of a &lt;em&gt;rapture&lt;/em&gt; and a coming Antichrist – were part of the mainstream imagination in many evangelical circles (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=and%20promises%20involving%20Israel%2C%20and,way%20that%20most%20unbiased%20readers&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=the%20hugely%20popular%20Left%20Behind,as%20having%20been%20fulfilled%20by&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It should be noted that &lt;strong&gt;not all futurists are dispensationalists&lt;/strong&gt;. Many classical Protestants (and the Catholic and Eastern Orthodox traditions) are futurist in the sense that they affirm a future great apostasy, a final Antichrist, and the second coming with resurrection and judgment. But these non-dispensational futurists may reject the idea of a pre-trib rapture or a literal thousand-year Jewish kingdom. For instance, historic &lt;strong&gt;premillennialists&lt;/strong&gt; believe in a future tribulation and return of Christ followed by a millennium, but they see the Church (all believers) present through the tribulation and do not divide prophecy into separate tracks for Israel and the Church (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=There%20are%20two%20forms%20of,Christ%20returns%20in&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=will%20be%20raptured%2C%20inaugurating%20a,82&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Meanwhile, &lt;strong&gt;amillennialists&lt;/strong&gt; and &lt;strong&gt;postmillennialists&lt;/strong&gt; (common in Reformed theology) are often futurist/preterist hybrids: they may agree with preterists that many tribulation prophecies were fulfilled in the first century (e.g. by Rome), yet they still expect a future, literal second coming of Christ, a general resurrection, and a last judgment (they just interpret the “millennium” of Revelation 20 symbolically as the present Church age). Thus the landscape is varied. But in terms of the &lt;strong&gt;Dispensational Futurism vs. Preterism&lt;/strong&gt; contrast, one is dealing with &lt;em&gt;either&lt;/em&gt; expecting the tribulation/Antichrist in our future or locating them in our past. And in that dichotomy, dispensationalism has been &lt;strong&gt;highly influential but also increasingly debated&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By the late 20th century, some scholars and church leaders began pushing back against the dominance of dispensational futurism. The &lt;strong&gt;rise of partial preterism&lt;/strong&gt; (as with R.C. Sproul) and the spread of Reformed theology led some evangelicals to re-examine New Testament passages in their first-century context. At the same time, sensationalist predictions by some futurists failed to materialize (for example, popular books in the 1970s–80s predicted the return of Christ by the 1980s or 2000, which did not happen), causing disillusionment for some and prompting calls for more responsible interpretation. Mainline biblical scholars often criticized dispensationalism as a relatively modern doctrine without historical precedent before Darby (&lt;a href=&#34;https://en.wikipedia.org/wiki/John_Nelson_Darby#:~:text=John%20Nelson%20Darby%20,2&#34;&gt;John Nelson Darby - Wikipedia&lt;/a&gt;). Indeed, academic consensus holds that dispensationalism &lt;em&gt;“was not formulated earlier than 1830”&lt;/em&gt; and was introduced by Darby (&lt;a href=&#34;https://www.goodshepherds.net/home/180005716/180005716/Images/Futurism%20-and-%20Dispensationalism-%20Rapid%20Rise%20%5C%28Bivens%5C%29.pdf#:~:text=John%20Nelson%20Darby%20%281800,influenced%20by%20writings%20of%20Darby&#34;&gt;[PDF] Futurism – and Dispensationalism&lt;/a&gt;). Many theologians in traditional denominations remain amillennial or postmillennial, reading Revelation in either an idealist or partial-historical way rather than a strictly futurist timeline. Nonetheless, &lt;strong&gt;futurist expectation of a future second coming and final judgment is universal in orthodox Christianity&lt;/strong&gt;, even if the specific futurist timeline of events differs.&lt;/p&gt;
&lt;h2 id=&#34;comparing-key-prophecies-and-their-interpretation&#34;&gt;Comparing Key Prophecies and Their Interpretation&lt;/h2&gt;
&lt;p&gt;To better understand how Preterism and Futurism/Dispensationalism diverge, it is helpful to compare how each view interprets major prophetic passages in Scripture. We will focus on three key areas: Jesus’ &lt;strong&gt;Olivet Discourse&lt;/strong&gt; (Matthew 24 and parallels), the &lt;strong&gt;Book of Daniel&lt;/strong&gt; (especially the 70 Weeks prophecy), and the &lt;strong&gt;Book of Revelation&lt;/strong&gt;. Along the way we’ll note historical events cited by each side as fulfillment evidence.&lt;/p&gt;
&lt;h3 id=&#34;the-olivet-discourse-matthew-24-mark-13-luke-21&#34;&gt;The Olivet Discourse (Matthew 24, Mark 13, Luke 21)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Context:&lt;/strong&gt; In Matthew 24, Jesus responds to His disciples’ question about &lt;em&gt;when&lt;/em&gt; the Jerusalem temple will be destroyed and &lt;em&gt;what&lt;/em&gt; will be the sign of His coming and the end of the age. This discourse contains prophecies about coming false messiahs, wars, famines, earthquakes, persecution, the “abomination of desolation,” great tribulation, cosmic signs, and the coming of the Son of Man.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Preterist Interpretation:&lt;/strong&gt; Preterists contend that most or all of the Olivet Discourse was fulfilled in the events leading up to the &lt;strong&gt;A.D. 70 destruction of Jerusalem and its Temple&lt;/strong&gt;. They point out that Jesus’ first prediction – &lt;em&gt;“not one stone here will be left on another; every one will be thrown down”&lt;/em&gt; (Matt 24:2) – was literally fulfilled when the Romans dismantled the Temple, prying apart the stones to get at its gold. The general signs (wars, earthquakes, etc.) match the tumultuous period of the 30s–60s A.D. For example, the Emperor Caligula attempted to set up a statue of himself (a pagan idol) in the Temple around A.D. 40, which could be seen as an &lt;em&gt;abomination of desolation&lt;/em&gt; threat. Later, during the Jewish revolt, Jewish Zealots and Roman forces committed sacrilegious acts in the Temple. Luke’s Gospel makes the reference plain by saying, &lt;em&gt;“When you see Jerusalem surrounded by armies… then know that its desolation has come near”&lt;/em&gt; (Luke 21:20), instead of “when you see the abomination of desolation” – indicating that the Roman armies were the sign. Preterists believe this was clearly fulfilled when Roman legions encircled Jerusalem in A.D. 70 (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Preterism%20is%20the%20view%20that,concerning%20the%20destruction%20of%20Jerusalem&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;). The severe &lt;strong&gt;“great tribulation”&lt;/strong&gt; (Matt 24:21) is seen as the horrendous siege documented by Josephus, where famine, disease, and violence inside the city were so extreme that it could be described as unparalleled suffering (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,never%20to%20be%20equaled%20again&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Even the &lt;strong&gt;cosmic imagery&lt;/strong&gt; (“sun darkened, stars falling”) is interpreted against Old Testament backgrounds as symbolic of world-shaking events – in this case, the end of the Mosaic age and the judgment of Israel. Preterists often note that similar language was used by OT prophets regarding the fall of Babylon, Edom, or Egypt (e.g. Isaiah 13:10, Ezekiel 32:7), none of which literally entailed the end of the physical cosmos. Thus, they assert, Matthew 24’s language does not require a literal astronomical event but signifies the &lt;em&gt;spiritual significance&lt;/em&gt; of the Temple’s fall – it was the “end of the age” of the old covenant.&lt;/p&gt;
&lt;p&gt;Importantly, preterists claim Jesus’ phrase &lt;em&gt;“this generation will not pass away until all these things take place”&lt;/em&gt; (Matt 24:34) &lt;strong&gt;forces&lt;/strong&gt; the whole prophecy (up to verse 34 at least) into a first-century fulfillment (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Discourse%20and%20the%20Book%20of,century%2C%20they%20believe%20they%20are&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). “This generation” is taken to plainly mean the generation he was speaking to – a timeframe of roughly 40 years. Indeed, the Temple fell about 40 years later (A.D. 70) within the lifespan of many of Jesus’ contemporaries. Preterists also interpret &lt;em&gt;“the coming of the Son of Man”&lt;/em&gt; in Matthew 24:30 as &lt;strong&gt;Christ’s coming in judgment&lt;/strong&gt;. They often draw on Matthew 26:64, where Jesus tells the high priest, &lt;em&gt;“From now on you will see the Son of Man seated at the right hand of Power and coming on the clouds of heaven.”&lt;/em&gt; This suggests that in some sense the vindication of Christ (as the divine Son of Man from Daniel 7:13) would be witnessed by that generation – and the collapse of Jerusalem, viewed as divine judgment on those who rejected Christ, fits that requirement.&lt;/p&gt;
&lt;p&gt;Some &lt;strong&gt;partial preterists&lt;/strong&gt; concede that from verse 36 onward (where Jesus says “but of that day or hour no one knows”) the subject may shift to the &lt;strong&gt;final&lt;/strong&gt; second coming, which is beyond 70 A.D. They argue Jesus intertwined near-term and far-term prophecies. However, others (including full preterists) maintain that &lt;strong&gt;all&lt;/strong&gt; of Matthew 24 was fulfilled in 70 A.D. In that case, references to the Son of Man coming on the clouds and angels gathering the elect (24:30-31) are understood spiritually: Christ gathering His &lt;strong&gt;“elect” (chosen)&lt;/strong&gt; could refer to the Church being called out and protected, or to the great ingathering of believers that followed the judgment on old Israel.&lt;/p&gt;
&lt;p&gt;Historical events often cited: The &lt;strong&gt;siege of Jerusalem (66-70)&lt;/strong&gt; by Rome is the centerpiece. Preterists cite the flight of Christians to Pella, the slaughter of Jews, the burning of the Temple (August 70), and various purported signs (one account speaks of a comet, a vision of armies in the clouds, etc., recorded by Josephus and Tacitus) as fulfilling Jesus’ words. The chronology in early 67 A.D. even included a retreat of Roman general Cestius Gallus from Jerusalem for a short time, which believers see as providential – it gave an opportunity for Christians to flee, as Jesus urged (&lt;em&gt;“let those in Judea flee to the mountains”&lt;/em&gt;). Additionally, Nero’s persecution of Christians (A.D. 64–68) is sometimes seen as part of the foretold tribulations: &lt;em&gt;“then they will deliver you up to tribulation and kill you, and you will be hated by all nations for My name’s sake”&lt;/em&gt; (Matt 24:9). Indeed, both Jews and Romans persecuted the early Christians intensely prior to 70. Thus, in the preterist reading, &lt;strong&gt;every detail&lt;/strong&gt; Jesus gave found a fulfillment in that generation – validating Jesus’ prophetic credibility and demonstrating that &lt;em&gt;God’s judgment on Israel and deliverance of His elect Church already occurred in the first century&lt;/em&gt;. What remains for partial preterists is the eventual visible return of Christ to raise the dead and judge the world, but &lt;strong&gt;not&lt;/strong&gt; a separate future tribulation or Antichrist reign, since those are seen as past (e.g. Nero as Antichrist).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Futurist Interpretation:&lt;/strong&gt; Futurists agree that the early part of the Olivet Discourse includes the fall of Jerusalem (70 A.D.) – after all, Jesus explicitly predicted the Temple’s destruction. However, they typically view that event as a &lt;strong&gt;foreshadowing or partial fulfillment&lt;/strong&gt; of a greater future scenario. Many futurist interpreters read the disciples’ question in Matthew 24:3 as multi-faceted: “When will this [Temple destruction] happen, and what will be the sign of Your coming and of the end of the age?” They see Jesus weaving the answers together. Luke 21:24 is often noted: after describing Jerusalem’s fall, Jesus says, &lt;em&gt;“Jerusalem will be trampled by Gentiles until the times of the Gentiles are fulfilled,”&lt;/em&gt; implying a long gap before the end. Thus, while &lt;strong&gt;Luke&lt;/strong&gt; emphasizes the near-term fall of Jerusalem, &lt;strong&gt;Matthew’s account&lt;/strong&gt;, many futurists argue, places more emphasis on the &lt;em&gt;end of the age&lt;/em&gt;. From their perspective, certain statements in Matthew 24 simply did &lt;strong&gt;not&lt;/strong&gt; occur in 70 A.D. – for example, &lt;em&gt;“Immediately after the tribulation of those days the sun will be darkened…and then the sign of the Son of Man will appear in heaven… and they will see the Son of Man coming on the clouds”&lt;/em&gt; (Matt 24:29-30). This &lt;em&gt;immediate&lt;/em&gt; heavenly upheaval and visible coming did not transpire in the first century (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,distress%20of%20those%20days&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). Therefore, futurists posit that “the tribulation of those days” in verse 29 refers not to 70 A.D. but to a future Great Tribulation at the end of the age, after which Christ will &lt;em&gt;literally&lt;/em&gt; come in glory. They often interpret &lt;em&gt;“this generation will not pass away…”&lt;/em&gt; (24:34) not as Jesus’ contemporaries, but as either (a) the generation that sees the final signs (i.e. once end-time events start, they will conclude within one generation), or (b) taking “generation” to mean “race” or “people” (understood by some to mean the Jewish people will not pass away before these things occur – a less common interpretation). In any case, they do not think Jesus intended to limit all prophetic fulfillment to the first-century generation, especially given that He also said &lt;em&gt;“no one knows the day or hour”&lt;/em&gt; (24:36) and consistently taught believers to stay watchful for a return at an unknown future time.&lt;/p&gt;
&lt;p&gt;Futurists emphasize that the &lt;strong&gt;Great Tribulation&lt;/strong&gt; (Matt 24:21) is characterized as worse than anything before or after – language they feel 70 A.D. alone does not satisfy, especially as the &lt;em&gt;book of Revelation&lt;/em&gt; portrays an even more cataclysmic tribulation. They also note that Jesus said &lt;em&gt;“unless those days were cut short, no human being would be saved”&lt;/em&gt; (24:22), which suggests a near-extinction level event – again, not true of 70 A.D., which while devastating for Judea, did not threaten all human life. This, they assert, points to a future global catastrophe (perhaps nuclear war or divine plagues) that, if not divinely shortened, would wipe out humanity. The &lt;strong&gt;abomination of desolation&lt;/strong&gt; (Matt 24:15) in a futurist view is tied to &lt;strong&gt;2 Thessalonians 2:4&lt;/strong&gt; and &lt;strong&gt;Revelation 13&lt;/strong&gt; – the Antichrist setting up an image of himself to be worshiped. Since no figure did that in the Jerusalem Temple prior to its destruction (the Roman standards in the Temple and other profanations are seen as only a dim preview), they expect a future fulfillment – potentially involving a rebuilt temple in Jerusalem where a final Antichrist will proclaim himself God.&lt;/p&gt;
&lt;p&gt;Regarding &lt;strong&gt;Matthew 24:30-31&lt;/strong&gt;, futurists take these verses in a straightforward way: after the future tribulation, Jesus will return in the clouds with power, visible to all, and His angels will gather the elect (often correlated with the resurrection/rapture at the end of the tribulation). This is the classical &lt;strong&gt;Second Coming of Christ&lt;/strong&gt; that the whole Church awaits. Since this clearly has not happened yet, the futurist contends that Matthew 24 cannot be completely past. Instead, 70 A.D. was an initial “type” or partial realization (a localized day of the Lord) pointing toward the ultimate fulfillment when Christ returns. In practice, some conservative interpreters adopt a &lt;strong&gt;“dual fulfillment”&lt;/strong&gt; approach to the Olivet Discourse: 70 A.D. fulfills it in part (especially Luke’s version), but the prophecy will reach its climax in the last days with events on a larger scale.&lt;/p&gt;
&lt;p&gt;Modern futurists also sometimes connect Jesus’ phrase &lt;em&gt;“the times of the Gentiles”&lt;/em&gt; (Luke 21:24) to the fact that from 70 A.D. until 1948 Jerusalem was largely under Gentile control, and even today remains contested. The establishment of the state of Israel in 1948 and Jewish control of Jerusalem since 1967 are seen by some as prophetically significant, suggesting that end-time prophecies concerning Israel could soon come into play. This is often cited as a stage-setting for the final events (though interpretations vary widely and are speculative).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Historical events cited by futurists&lt;/strong&gt; are typically contemporary signs that they believe align with prophetic expectations (though not fulfillments per se, since fulfillment is future). For example, the rebirth of Israel and return of Jews to the land is seen as necessary for a literal fulfillment of a future tribulation in Jerusalem. Technological advances (like microchip implants) are sometimes pointed to as making a literal “mark of the beast” globally enforceable, something not possible in ancient times. Globalization and moves toward one-world governance are cited as foreshadowing the prophesied world order under Antichrist. However, futurist scholars caution against date-setting. They rather emphasize that &lt;strong&gt;because&lt;/strong&gt; so many prophecies (global war, plagues, a world dictator, etc.) have no clear past fulfillment, a Christian must logically anticipate their fulfillment in the time to come. This expectation is reinforced by the near-universal &lt;strong&gt;Christian tradition&lt;/strong&gt; (Catholic, Orthodox, Protestant alike) of looking for a future return of Christ in glory to judge the living and the dead (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=Whatever%20disagreements%20in%20detail%20they,we%20can%20only%20highlight%20here&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;). As The Gospel Coalition notes, &lt;em&gt;“most readers of biblical prophecy since the beginning of the church”&lt;/em&gt; have indeed expected a &lt;strong&gt;future&lt;/strong&gt; climactic intervention of God, with Christ personally present and a physical resurrection of the dead (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=Whatever%20disagreements%20in%20detail%20they,we%20can%20only%20highlight%20here&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=the%20expectation%20of%20a%20final%2C,we%20can%20only%20highlight%20here&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;). This consensus undergirds the futurist stance against full preterism.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-book-of-daniel-prophecies-of-kingdoms-and-the-seventy-weeks&#34;&gt;The Book of Daniel (Prophecies of Kingdoms and the Seventy Weeks)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Context:&lt;/strong&gt; The Book of Daniel contains key apocalyptic prophecies. Notably, Daniel chapters 2 and 7 describe a sequence of four great kingdoms (often understood as Babylon, Medo-Persia, Greece, and Rome), after which God’s everlasting kingdom arrives. Daniel 8 and 11 give detailed visions often linked to the Greek era (Antiochus Epiphanes in the 2nd century B.C.). Daniel 9:24-27, the “Seventy Weeks” prophecy, predicts a timetable for Jerusalem’s restoration, the coming of an Anointed one (Messiah), and the occurrence of profound events including the cessation of sacrifice and the coming of one who desolates.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Preterist Interpretation:&lt;/strong&gt; Preterists (especially partial preterists) view much of Daniel as already fulfilled by the time of the &lt;strong&gt;first century A.D.&lt;/strong&gt; They agree with mainstream scholarship that Daniel’s visions of the empires reached up to the Roman Empire. For instance, Daniel’s fourth beast (chapter 7) is Rome, which devoured the whole earth. The &lt;strong&gt;“little horn”&lt;/strong&gt; in Daniel 7 that persecutes the saints is often identified by preterists as a Roman ruler like &lt;strong&gt;Nero&lt;/strong&gt; (who viciously persecuted Christians) or possibly another caesar involved in the Jewish War. Some preterist interpretations follow a traditional line that the little horn was the &lt;strong&gt;Emperor Domitian&lt;/strong&gt; (a later persecutor of the Church), since ancient Christian writers like Irenaeus saw Domitian as a second Nero and also a fulfillment of Antichrist foreshadowings. Others think the &lt;strong&gt;little horn&lt;/strong&gt; in Daniel 7 primarily referred to the &lt;strong&gt;line of Herodian kings&lt;/strong&gt; who oppressed the Jews and Christians (this is a less common view). In any case, preterists see Daniel’s prophecy that the beast’s dominion would be taken away and &lt;strong&gt;“the kingdom given to the saints of the Most High”&lt;/strong&gt; (Dan 7:27) as fulfilled in the triumph of Christ’s church over the pagan powers. This triumph began spiritually with Jesus’ resurrection and the spread of the gospel (the stone that struck the statue in Nebuchadnezzar’s dream, becoming a great kingdom – Dan 2:34-35 – is commonly understood as Christ’s kingdom overcoming Rome). Some preterists even cite the conversion of the Roman Empire to Christianity in the 4th century (under Constantine) as a historical fulfillment of Rome being judged and the faith of the saints vindicated – corresponding to that “kingdom given to the saints” (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,years%20of%20the%20church%E2%80%99s%20history&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Israel%20and%20Rome,11%3B%201%20Corinthians&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). (This corresponds to what was earlier described as a “mild” preterist view: Revelation and Daniel fulfilled by A.D. 70 for Israel’s fall and by A.D. 476 for Rome’s fall (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=%E2%80%9CPreterists%20hold%20that%20the%20major,of%20the%20saints%2C%20in%20the&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;).)&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;70 Weeks of Daniel 9&lt;/strong&gt; are a centerpiece of difference. Preterists interpret the 70 weeks (490 years) as running &lt;strong&gt;consecutively&lt;/strong&gt; and ending in the first century. While there are variations, a common preterist view holds that the 70 weeks began with a decree to rebuild Jerusalem (many opt for Artaxerxes’ decree in 457 B.C. or Cyrus’s decree in 538 B.C.) and that the &lt;strong&gt;69th week&lt;/strong&gt; culminated with Jesus’ public ministry (His baptism or triumphal entry, depending on the reckoning) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterists%20typically%20see%20the%2070th,Heb%2010&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). The &lt;strong&gt;70th week&lt;/strong&gt; then covers either the ministry of Christ plus the immediate aftermath or the period leading up to the temple’s destruction. Specifically, many preterists identify the “Anointed one” (Mashiach) in Daniel 9:26 as &lt;strong&gt;Jesus Christ&lt;/strong&gt;, who was “cut off” (crucified) after the 69 weeks (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=The%20degree%20to%20rebuild%20Jerusalem,translates%20into%20English%20as%20%E2%80%9CMessiah%E2%80%9D&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=The%20%E2%80%9Canointed%20one%E2%80%9D%20of%20both,translates%20into%20English%20as%20%E2%80%9CMessiah%E2%80%9D&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). Then, &lt;em&gt;“he shall confirm a covenant with many for one week”&lt;/em&gt; (Dan 9:27) is seen as Christ establishing the New Covenant during His ministry (the first half of the 70th week), particularly through His death and resurrection, which brought an end to the need for temple sacrifice (Hebrews 10 explains Christ’s sacrifice caused the old offerings to cease) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterists%20typically%20see%20the%2070th,Heb&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=identifying%20the%20people%20of%20the,Heb%2010&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). In this reading, &lt;em&gt;“in the middle of the week he shall bring an end to sacrifice and offering”&lt;/em&gt; is fulfilled by Jesus’ crucifixion (which happened roughly 3.5 years after His ministry began, if one takes a 7-year “week” for His ministry plus the early church era) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterists%20typically%20see%20the%2070th,Heb%2010&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). Alternatively, some apply that phrase to the Romans halting the sacrifices by besieging Jerusalem (in 70 A.D., the daily sacrifice did cease during the final siege). Both interpretations agree that by &lt;strong&gt;70 A.D.&lt;/strong&gt; the &lt;strong&gt;70th week&lt;/strong&gt; was complete – either with the Gospel being preached and the church established (spiritual fulfillment) or with the destruction of the temple (literal end of sacrifice). Preterists assert that this scheme is &lt;strong&gt;more straightforward and literal&lt;/strong&gt; than the dispensational scheme: the prophecy says “70 weeks are determined for your people and city” and they simply interpret it as 490 actual years from the decree to the first-century climax, with no unforeseen gap (&lt;a href=&#34;https://thirdpeter.com/2024/06/28/chapter-78-daniels-seventy-weeks/#:~:text=The%2070th%20week%20is%20where,gap%20here%20to&#34;&gt;Chapter 78: Daniel&amp;rsquo;s Seventy Weeks - Third Peter&lt;/a&gt;) (&lt;a href=&#34;https://theos.org/forum/viewtopic.php?t=1918#:~:text=Futurists%20say%2C%20with%20scant%20justification%2C,see%20as%20a%20future&#34;&gt;Daniel&amp;rsquo;s 70 7&amp;rsquo;s: Futurist vs Preterist Perspectives&lt;/a&gt;). As one comparison noted, &lt;em&gt;“The 70th week is where the preterist interpretation is far simpler and more literal. The futurists insert a 2000-year (or so) gap here…”&lt;/em&gt; (&lt;a href=&#34;https://thirdpeter.com/2024/06/28/chapter-78-daniels-seventy-weeks/#:~:text=The%2070th%20week%20is%20where,gap%20here%20to&#34;&gt;Chapter 78: Daniel&amp;rsquo;s Seventy Weeks - Third Peter&lt;/a&gt;). Preterists also often see &lt;strong&gt;“the people of the prince who is to come”&lt;/strong&gt; in Dan 9:26 as the Roman armies (“prince” being General Titus or the Roman authority) who destroy the city and sanctuary, which indeed happened in 70 (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=The%20identity%20of%20the%20%E2%80%9Cpeople,believes%20the&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). Thus the desolation decreed was the devastations of the Jewish War.&lt;/p&gt;
&lt;p&gt;In summary, preterists believe &lt;strong&gt;Daniel’s prophecies&lt;/strong&gt; reached their fulfillment in &lt;strong&gt;Christ’s first coming and the judgment on Jerusalem&lt;/strong&gt;, signaling the end of the old covenant era. Ancient Israel’s mission was fulfilled and her curses fell for rejecting the Messiah, and the kingdom was given to the Church, the new Israel (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Olivet%20Discourse%20%2C%20as%20events,at%20the%20%20128&#34;&gt;Preterism - Wikipedia&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Preterism%20holds%20that%20Ancient%20Israel,at%20the%20%20128&#34;&gt;Preterism - Wikipedia&lt;/a&gt;). This fits the preterist conviction that &lt;strong&gt;Ancient Israel finds its continuation or fulfillment in the Christian Church at the destruction of Jerusalem in AD 70&lt;/strong&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Olivet%20Discourse%20%2C%20as%20events,at%20the%20%20128&#34;&gt;Preterism - Wikipedia&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Preterism%20holds%20that%20Ancient%20Israel,at%20the%20%20128&#34;&gt;Preterism - Wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Futurist/Dispensational Interpretation:&lt;/strong&gt; Futurists also glean much from Daniel but come to very different conclusions about timing. They acknowledge that Daniel’s earlier prophecies (chapters 2, 7, 8, 11) accurately predict historical empires (Babylon through Rome, and conflicts involving the Greek kingdoms and Antiochus Epiphanes). However, they argue that certain elements in Daniel intentionally leap to the &lt;strong&gt;end times&lt;/strong&gt;. For instance, Daniel 7’s vision of the fourth beast and little horn is sometimes seen as not only ancient Rome but a &lt;em&gt;future revival&lt;/em&gt; of the Roman-like empire in the last days (often conceptualized as a ten-nation confederacy corresponding to the beast’s ten horns). The “little horn” then is the &lt;strong&gt;future Antichrist&lt;/strong&gt;, who will persecute the saints for “a time, times, and half a time” (3.5 times, interpreted as 3.5 years – Dan 7:25) before God intervenes. Dispensationalists frequently tie this to the last 3.5 years of the future Tribulation (the Great Tribulation). They might assert that while Antiochus Epiphanes in 167 B.C. was a type of the abomination (in Daniel 8 and 11 he clearly fits), the &lt;strong&gt;ultimate&lt;/strong&gt; “little horn” is yet to come. This view leans on a principle that prophecies can have dual fulfillments or that Antiochus’s oppression of the Jews prefigures the Antichrist’s future oppression.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;70 Weeks prophecy&lt;/strong&gt; is a critical piece for dispensational futurists. They break down the 70 weeks as 7 + 62 + 1. The first 69 (7 + 62) weeks – 483 years – lead up to &lt;strong&gt;Messiah’s first coming&lt;/strong&gt; (ending perhaps at Jesus’ triumphal entry or crucifixion, depending on the exact chronology used). They agree the Messiah was “cut off” (Dan 9:26) in the first century, fulfilling that part. But here is the key: they argue that the final, 70th week (the last 7 years) did &lt;em&gt;not&lt;/em&gt; immediately follow. Instead, &lt;em&gt;“the Dispensational view associates this period [the 70th week] with [Christ’s] Second Advent”&lt;/em&gt; (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterist%20view%20associates%20the%2070th,We%20must%20also%20mention%20that&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). In other words, the prophetic clock paused after the 69th week due to Israel’s rejection of Christ, and the remaining 7 years are &lt;strong&gt;postponed&lt;/strong&gt; until the end of the Gospel age. This is often called the “great parenthesis” or Church Age, a mystery period not counted in the 490 years. Dispensationalists see biblical warrant for a gap in phrases like “the end will come with a flood, and until the end there will be war; desolations are decreed” (Dan 9:26) – to them, this implies a span of desolations after Messiah’s cutting off (indeed, Jerusalem’s destruction, the diaspora, etc.) before the final week. During this long gap, God’s focus is on the primarily Gentile Church, while the “time-clock” for Israel is on hold (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=as%20a%20whole,Christ%2C%20both%20Jews%20and%20Gentiles&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Thus, they place Daniel 9:27 wholly in the future. The &lt;em&gt;“he”&lt;/em&gt; who makes a covenant for one week is not Christ (as preterists say) but a coming &lt;strong&gt;prince&lt;/strong&gt; — specifically the &lt;strong&gt;Antichrist&lt;/strong&gt; (often called “the prince who is to come” from verse 26). He will broker a 7-year pact (perhaps a peace treaty involving Israel). In the middle of that seven (after 3.5 years), he will break the covenant, likely by stopping Jewish sacrifices and declaring himself God, thereby committing the &lt;strong&gt;“abomination of desolation.”&lt;/strong&gt; This lines up with 2 Thess. 2 and Rev. 13, as mentioned earlier. The remaining 3.5 years then correspond to the worst part of the Tribulation (the “Great Tribulation”), which ends when Christ returns to destroy the Antichrist (&lt;em&gt;“until the decreed end is poured out on the desolator”&lt;/em&gt; – Dan 9:27). After that, the prophecy says &lt;em&gt;“to anoint the Most Holy”&lt;/em&gt; and to bring in everlasting righteousness, which futurists see as fulfilled in the establishment of Christ’s Millennial Kingdom and ultimately the eternal state.&lt;/p&gt;
&lt;p&gt;In summary, dispensationalists assert the &lt;strong&gt;70th week of Daniel is future&lt;/strong&gt;, equating to the final 7-year Tribulation period (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=At%20an%20unknown%20time%20in,year%20Millennial%20Kingdom&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;). The &lt;strong&gt;Church Age&lt;/strong&gt; sits between the 69th and 70th weeks as a kind of parenthesis in God’s plan for Israel (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=There%20are%20two%20forms%20of,Christ%20returns%20in&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=about%20his%20plan%20of%20salvation,&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). This approach is admittedly complex, but proponents argue it is necessary to harmonize all prophetic passages. Critics (like preterists) say it violates the natural reading of Daniel by inserting an unwritten gap. Dispensational scholars respond that other prophecies also telescope far future events (for instance, Isaiah 61:1-2, which Jesus reads in Luke 4, stops short of “the day of vengeance” – suggesting a gap between the “year of favor” at His first coming and vengeance at His second). They also point out that &lt;em&gt;after&lt;/em&gt; the 69 weeks, Daniel 9:26 mentions both Messiah’s death and Jerusalem’s destruction – events separated by almost 40 years – indicating the 70th week did not start immediately at the 69th. Moreover, the nature of the final week’s events (global Antichrist, etc.) did not occur historically in the first century as described.&lt;/p&gt;
&lt;p&gt;Futurists see &lt;strong&gt;Daniel and Revelation&lt;/strong&gt; as tightly interwoven. Daniel’s beasts correspond to Revelation 13’s beast. Daniel’s timeframes (1260 days, 42 months, “time, times and half a time”) appear in Revelation as well, reinforcing the idea of a future 3.5-year intense period. The book of Daniel even ends with an angelic command to &lt;em&gt;“seal the book until the time of the end”&lt;/em&gt; (Dan 12:4), which futurists contrast with Revelation 22:10 where John is told &lt;em&gt;“do not seal”&lt;/em&gt; his book because the time is near. They interpret Daniel’s sealing as meaning his final visions were not for near fulfillment but for the distant future “time of the end.” (Preterists, by contrast, say Revelation’s command &lt;em&gt;not&lt;/em&gt; to seal indicates its prophecies were at hand in the first century, whereas Daniel’s were long off in his context – the second century B.C. events or beyond – thus the instruction differences align with each being near to its respective fulfillment.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Historical events cited&lt;/strong&gt;: For futurists, since Daniel’s last week hasn’t happened yet, they look for precursors or set-up. The destruction of the Temple in 70 A.D. is acknowledged as fulfilling Dan 9:26 (the people of the prince to come destroyed city and sanctuary), but they view that as evidence that the “prince to come” (future Antichrist) will be somehow related to the Roman sphere (thus the idea of a revived Roman Empire or leader from that lineage). They often pay attention to developments in Europe or the Middle East in light of this. The &lt;strong&gt;re-establishment of Israel&lt;/strong&gt; in 1948 is sometimes considered a necessary precursor so that Israel is back in their land (and potentially able to rebuild a temple) for the end-times – dispensational charts from early 20th century anticipated Israel’s return because of these prophecies. Futurists will also cite that no figure in history after Christ has definitively fulfilled the role of destroying a rebuilt temple &lt;em&gt;after&lt;/em&gt; making a covenant, etc., which is why they await one.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-book-of-revelation&#34;&gt;The Book of Revelation&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Context:&lt;/strong&gt; Revelation, written by John, is a complex apocalypse describing, in a series of visions, the spiritual and cosmic conflict between God’s kingdom and evil. Key elements include letters to seven churches (chapters 1–3), the throne of God and the Lamb (4–5), the opening of seven seals (6–7), seven trumpets (8–11), a vision of a war between a woman and a dragon (12), two beasts (13), seven bowls of wrath (16), the fall of “Babylon the Great” (17–18), the second coming of Christ (19), the 1,000-year reign and final judgment (20), and the new heavens and new earth (21–22).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Preterist Interpretation:&lt;/strong&gt; Preterists approach Revelation as a book written primarily &lt;strong&gt;for first-century Christians&lt;/strong&gt;, using symbolic imagery to portray the events they were about to face. Many preterists hold that &lt;strong&gt;Revelation was composed before 70 A.D.&lt;/strong&gt; (during Nero’s reign, c. 65 A.D.), which would mean it was predicting the impending Roman-Jewish war and related persecutions. They note that John tells his readers &lt;em&gt;“the time is near”&lt;/em&gt; (Rev 1:3, 22:10) and uses expressions of imminence (Christ coming “soon”) that make best sense if the fulfillments were in their lifetime (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Discourse%20and%20the%20Book%20of,Jerusalem&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). As one source summarizes, preterists argue Revelation &lt;em&gt;“prophesies the judgment of God on apostate Israel,”&lt;/em&gt; with its main focus on events that were &lt;em&gt;“soon to take place”&lt;/em&gt; from the perspective of the first-century church (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=%3E%20,David%20Chilton%20%28Preterist&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=Revelation%20prophesies%20the%20judgment%20of,were%20soon%20to%20take%20place&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Revelation and 70 A.D.:&lt;/strong&gt; Preterists often identify &lt;strong&gt;“Babylon the Great, the Mother of Harlots”&lt;/strong&gt; (Rev 17–18) with &lt;strong&gt;Jerusalem&lt;/strong&gt; or the corrupt Israelite leadership. They point out that the woman Babylon is pictured drunk with the blood of prophets and saints (Rev 17:6), and Jesus had said &lt;em&gt;“O Jerusalem, who kills the prophets and stones those sent to her”&lt;/em&gt; (Matt 23:37). Also, the &lt;strong&gt;great city&lt;/strong&gt; in Revelation 11:8 is symbolically called Sodom and Egypt, “where also their Lord was crucified” – a clear reference to Jerusalem. Thus, they argue a substantial portion of Revelation is about God’s wrath on Jerusalem for rejecting Christ, culminating in the Roman legions (the beast) destroying her (the harlot) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=%3E%20,David%20Chilton%20%28Preterist&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=Revelation%20prophesies%20the%20judgment%20of,were%20soon%20to%20take%20place&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;). The &lt;strong&gt;Beast&lt;/strong&gt; with seven heads and ten horns (Rev 13, 17) is seen as representing the &lt;strong&gt;Roman Empire&lt;/strong&gt; and/or a specific emperor like &lt;strong&gt;Nero&lt;/strong&gt;. One head is mortally wounded and healed – some tie this to the Nero Redivivus legend (after Nero’s death in 68, rumors spread he would return to life or that one of the upcoming emperors was Nero resurrected). The Beast’s &lt;strong&gt;42 months&lt;/strong&gt; of authority (Rev 13:5) roughly matches the length of the Jewish War or Nero’s persecution. Nero’s brutal persecution of Christians (64–68 A.D.) fits the Beast “making war on the saints.” Additionally, as noted, &lt;strong&gt;666&lt;/strong&gt; as the number of the Beast can correspond to “Neron Caesar” in Hebrew gematria (&lt;a href=&#34;https://americanvision.org/posts/was-preterism-invented-by-the-jesuits/#:~:text=,the%20Protestant%20movement%2C%20although%20in&#34;&gt;Was Preterism Invented by the Jesuits? - The American Vision&lt;/a&gt;), which is a strong internal clue for the Neronic context (some manuscripts of Revelation even have 616 as the number, which would correspond to the Latin spelling “Nero Caesar”).&lt;/p&gt;
&lt;p&gt;Preterists also see the &lt;strong&gt;“two witnesses”&lt;/strong&gt; of Revelation 11 as possibly representing a testimony in Jerusalem during the final assault (some identify them with historical figures who opposed the Zealots or called the city to repentance during the siege). Their death and resurrection after 3.5 days could symbolize the seeming defeat of the church but then its vindication by God. The &lt;strong&gt;seven churches&lt;/strong&gt; addressed in Revelation 2–3 were real congregations in Asia Minor facing persecution and trials; preterists think much of Revelation’s content was meant to encourage those Christians that their Jewish persecutors and Roman oppressors would soon be judged by God. For example, Revelation 3:9 speaks of Christ making those of the “synagogue of Satan” (hostile Jews) come bow down at the Christians’ feet – perhaps alluding to the coming vindication of the church when Jerusalem falls.&lt;/p&gt;
&lt;p&gt;Some preterists extend the scope beyond 70 A.D. and also see &lt;strong&gt;Revelation 17–19&lt;/strong&gt; as depicting the subsequent judgment on &lt;strong&gt;pagan Rome&lt;/strong&gt;. The harlot Babylon could be seen as Rome itself in its decadence and idolatry (this is a more traditional identification; indeed, historicist Protestants also equated Babylon with Rome, though they meant papal Rome). If Babylon is Rome, the vision of its fall could correspond to the decline of the Roman Empire (in the West, the sack of Rome by the Goths in 410 A.D. is sometimes mentioned). Preterist interpreters like David Chilton and Kenneth Gentry lean toward &lt;strong&gt;Jerusalem as Babylon&lt;/strong&gt;, while others acknowledge an application to Rome. There is a variant called “&lt;strong&gt;mild preterism&lt;/strong&gt;” that holds Revelation was fulfilled in stages: first half by A.D. 70 (defeat of Israel), second half by the 4th-5th century (defeat of Rome) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,years%20of%20the%20church%E2%80%99s%20history&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=Israel%20and%20Rome,11%3B%201%20Corinthians&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;). In any case, preterists assert that by the time Christianity triumphed (whether that be the conversion of Constantine or the covenantal transition of A.D. 70), the prophecies of Revelation had served their purpose and been largely fulfilled. They view the &lt;strong&gt;Millennium&lt;/strong&gt; of Revelation 20 not as a literal future thousand years, but often as a symbolic representation of the current reign of Christ with His saints (either an “inaugurated” millennium that began after those first-century victories, or as a portrayal of the church age). Full preterists, taking it further, say we are already in the &lt;em&gt;New Jerusalem&lt;/em&gt; era (the spiritual state of the church in the New Covenant). Partial preterists might say the New Jerusalem (Rev 21) is primarily spiritual now but will have its full consummation at the eventual return of Christ – in other words, there’s an “already and not yet” aspect.&lt;/p&gt;
&lt;p&gt;A key point in favor of preterism, from a scholarly perspective, is that Revelation’s symbols make sense in the context of the Roman Empire and first-century conflict between the church, Israel, and Rome. For example, the &lt;strong&gt;mark of the beast&lt;/strong&gt; (Rev 13:16-17) could allude to the imperial cult; perhaps those who wanted to buy or sell had to show allegiance to Caesar (figuratively “marked” by idolatry). The &lt;strong&gt;second beast&lt;/strong&gt; (earth beast) might represent the local authorities or false prophets enforcing emperor-worship in Asia Minor. Many academic commentators (even those who are not preterists in the theological sense) acknowledge that Revelation was written to seven historical churches facing persecution and that its imagery of beast and Babylon calls to mind &lt;strong&gt;Rome and its allies&lt;/strong&gt;. In that sense, the &lt;strong&gt;scholarly consensus&lt;/strong&gt; is that the original &lt;strong&gt;historical context&lt;/strong&gt; of Revelation is the Roman persecution (some favor the &lt;strong&gt;Neronian&lt;/strong&gt; persecution around 65–68 A.D., others the &lt;strong&gt;Domitianic&lt;/strong&gt; persecution around 95 A.D.). Either scenario is inherently past from our standpoint, aligning with a partial preterist perspective that sees the book as addressing events of its time (though many scholars would also say it contains timeless symbolism, not strictly a chronological code of events).&lt;/p&gt;
&lt;p&gt;It should be noted that &lt;strong&gt;date of authorship&lt;/strong&gt; is crucial here: Most scholars favor a date around &lt;strong&gt;A.D. 95&lt;/strong&gt; under Emperor Domitian (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=D,7&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=Donald%20Guthrie%3A%20%E2%80%9CThe%20most%20widely,16&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;). If that is correct, a purely 70 A.D. fulfillment is less likely (since writing after the fact would make it a retelling, not a prophecy). Preterists who hold to the 70 A.D. fulfillment often argue for an &lt;strong&gt;early date&lt;/strong&gt; of writing (during Nero’s reign). They cite early church statements (though ambiguous) and internal evidence like the relevance to the Jewish War. This debate is ongoing: the &lt;strong&gt;majority of modern scholars&lt;/strong&gt; indeed lean toward the Domitianic date (95 A.D.) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=D,7&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=Donald%20Guthrie%3A%20%E2%80%9CThe%20most%20widely,16&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;), but some conservative scholars (and many preterists) argue the evidence for a Neronic date (late 60s) is compelling, which would validate the prophecy being about the imminent fall of Jerusalem (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=We%20hold%20to%20the%20%E2%80%9Clate,2%29%20internal%20evidence&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=affirm%20the%20%E2%80%9Cearly%20date%2C%E2%80%9D%20placing,2%29%20internal%20evidence&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Regardless of the date, preterists maintain that &lt;strong&gt;Revelation’s primary application was to the early church&lt;/strong&gt;. They see it as a pastoral letter cloaked in apocalyptic symbols to encourage Christians that though tribulation was coming (or had begun), God was still in control and would soon judge their enemies – be those enemies apostate Jewish authorities or the pagan Roman system. The victorious scenes of Revelation (Christ on a white horse in Rev 19, the dragon defeated in Rev 12, etc.) are taken as metaphorical of Christ’s victory over the forces of Judaism and paganism that occurred by the end of the 1st century and into the 4th. Thus, to a preterist, &lt;strong&gt;Revelation is not a blueprint of the end of the world, but a symbolic record of how God ended the Old Covenant age and fully established the New&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Futurist Interpretation:&lt;/strong&gt; Futurists, especially dispensationalists, read Revelation as largely &lt;strong&gt;unfulfilled&lt;/strong&gt; prophecy. They see in it a detailed order of future events that will occur during the end-times, often aligning it with the last “week” of Daniel and Jesus’ end-time teachings. In the futurist view, after the letters to the seven churches (historical churches which also can represent types of churches throughout the ages), John is caught up to heaven (Rev 4) which some dispensationalists even see as a &lt;strong&gt;type of the rapture&lt;/strong&gt; – because after Revelation 3, the “church” is not mentioned on earth again until Revelation 19 (the bride of Christ). They speculate this suggests the church is taken to heaven, and from chapter 4 onward the focus is on Israel and the world during the Tribulation. Not all agree on that detail, but the common ground is that from Revelation 4–19 we are dealing with the coming &lt;strong&gt;Tribulation period&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Chronology:&lt;/strong&gt; The seven seals (Rev 6) are interpreted as the start of sorrows in the future tribulation: conquest, war, famine, pestilence, martyrdom, cosmic disturbances. Many tie Jesus’ Olivet Discourse chronology to these seals. The seventh seal opens into the seven trumpets (Rev 8–11), which bring harsher judgments (asteroid impacts, poisoning of waters, demonic plagues, etc.). The seventh trumpet then opens into the seven bowls (Rev 16), which are the final wrath of God (sores, all-seas-to-blood, scorching heat, darkness, global earthquake, etc.). This intense sequence is believed to occur in that final 3.5 years of the tribulation (the Great Tribulation). The &lt;strong&gt;Beast&lt;/strong&gt; in Revelation 13 is taken as the &lt;strong&gt;future Antichrist&lt;/strong&gt;, a world dictator who will emerge, blaspheme God, persecute believers, and dominate the nations for 42 months. The &lt;strong&gt;False Prophet&lt;/strong&gt; (the second beast) is seen as his religious propaganda leader, who will enforce the worship of the Antichrist and institute the &lt;strong&gt;mark of the Beast&lt;/strong&gt; – without which no one can buy or sell. This is seen as a future economic control system (futurists in the 20th/21st century often imagine this as microchips, digital IDs, or other technology that could serve as the “mark”).&lt;/p&gt;
&lt;p&gt;Futurists identify &lt;strong&gt;“Babylon the Great”&lt;/strong&gt; (Rev 17–18) not with Jerusalem (which by their scenario is being protected/refined as God’s people during the tribulation) but usually with a future godless world system. Some say Babylon represents the &lt;strong&gt;apostate world church&lt;/strong&gt; (a false religious system) allied with Antichrist, which he will eventually destroy (Rev 17:16). Others think “Babylon” is a code name for the literal city of &lt;strong&gt;Rome&lt;/strong&gt; or a “Babylon reborn” – possibly a rebuilt city of Babylon in Mesopotamia or just a symbol of human civilization arrayed against God. There’s a lot of diversity: one line of Protestant futurist thought still sees Babylon as connected to &lt;strong&gt;Rome (the city)&lt;/strong&gt;, implicating either the Roman Catholic Church or a future empire centered in Rome. Another line (including some dispensationalists) posits &lt;strong&gt;Babylon&lt;/strong&gt; could be an actual city in &lt;strong&gt;Iraq&lt;/strong&gt; revived as a commercial hub in the last days (because Rev 18 emphasizes Babylon’s great wealth, trade, and sudden destruction). Regardless of the specifics, in futurist interpretation Babylon’s fall in Rev 18 is the defeat of the evil world system just prior to Christ’s return.&lt;/p&gt;
&lt;p&gt;Revelation 19 is then the &lt;strong&gt;Second Coming of Christ&lt;/strong&gt; in power, depicted as Jesus riding a white horse, striking the nations, and defeating the Beast and his armies at the Battle of &lt;strong&gt;Armageddon&lt;/strong&gt;. Following this, Revelation 20’s prophecy of the &lt;strong&gt;Millennium&lt;/strong&gt; is taken &lt;em&gt;literally&lt;/em&gt;: Christ will reign on earth for 1000 years, Satan will be bound in the abyss so he cannot deceive the nations during that time, and the resurrected saints will govern with Christ. This fulfills numerous Old Testament prophecies of a golden age of peace (Isaiah 2, 11, etc.) and God’s promises of a restored kingdom to Israel. Dispensationalists in particular see this millennium as the time Israel as a nation will be exalted and the Jewish people will experience the messianic kingdom (with Christ on David’s throne in Jerusalem). At the end of the thousand years, Satan is released to mount a final rebellion (Rev 20:7-10), which fails, leading to the &lt;strong&gt;last judgment&lt;/strong&gt; (Great White Throne) and then the creation of the &lt;strong&gt;New Heaven and New Earth&lt;/strong&gt; (Rev 21–22) – which is the ultimate eternal state where God dwells with redeemed humanity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Futurists thus see Revelation as the master schedule of the future Great Tribulation, Second Coming, Kingdom, and Eternity.&lt;/strong&gt; They assert that interpreting Revelation’s judgments as past events doesn’t align with the scale and finality described. For instance, nowhere in history did we see a &lt;strong&gt;global&lt;/strong&gt; catastrophe killing a third of mankind (Rev 9) or all sea life (Rev 16) or islands and mountains removed (Rev 16:20). Nor have we seen a single individual rule all nations and demand a mark on everyone’s right hand or forehead. Those inclined to match Revelation to history (the historicist school) tried to see its fulfillments across many centuries, but futurists argue those attempts have been inconsistent and often arbitrary. Instead, taking the text at face value points to these things being &lt;strong&gt;future&lt;/strong&gt;. They also rely on the early church’s futuristic expectation as corroboration: e.g., Irenaeus (2nd century) believed Revelation 13’s beast was a future evil person and even speculated about what name 666 could signify. The consistent teaching of the Church through the ages (in creeds, etc.) has been that Christ &lt;em&gt;will&lt;/em&gt; come again, there &lt;em&gt;will&lt;/em&gt; be a resurrection and judgment, and “He shall come to judge the quick and the dead.” Futurists see themselves as upholding this plain forward-looking hope, whereas full preterism effectively says “it’s all done.”&lt;/p&gt;
&lt;p&gt;Futurist scholars do concede that Revelation spoke to its first-century audience’s situation too. Even dispensational commentaries acknowledge that the persecution under Rome is the backdrop for John’s imagery. But they would say Revelation intentionally describes &lt;strong&gt;archetypes&lt;/strong&gt; (beast, harlot, etc.) that will have their ultimate manifestation at the end of the age. The first-century Roman persecutors were a &lt;strong&gt;type&lt;/strong&gt; of the final Antichrist, and the fall of pagan Rome was a &lt;strong&gt;preview&lt;/strong&gt; of the ultimate fall of the world’s powers. Thus, Revelation can both encourage the original readers (“God will judge Rome”) and still predict a greater future showdown (“Babylon/Rome stands for the final world system which God will destroy”). This &lt;strong&gt;dual application&lt;/strong&gt; is a common futurist way of acknowledging past partial fulfillments without surrendering the future fulfillment. They often categorize interpretation into &lt;strong&gt;Historicist, Preterist, Futurist, Idealist&lt;/strong&gt; and then say a sound approach might combine the strengths of each: acknowledging historical context (preterist), ongoing principles (idealist), and future culmination (futurist), while avoiding extremes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Modern debates in Revelation interpretation&lt;/strong&gt; sometimes pit preterists and futurists on the book’s overall purpose. For instance, should Revelation be read primarily as &lt;em&gt;historical&lt;/em&gt; (about Rome) or &lt;em&gt;prophetic&lt;/em&gt; (about the end)? Many contemporary scholars lean to what could be called a &lt;strong&gt;“preterist” reading&lt;/strong&gt; (in the broad academic sense) — meaning they read it in its first-century context of Roman imperial oppression and see it as conveying that message through symbols. Even if not denying a future second coming, they don’t read Revelation as a step-by-step end-times roadmap. By contrast, conservative futurists (like those at premillennial seminaries) insist Revelation’s prophecies of the second coming (Rev 19) and other end events should be taken as literal future prophecies, not just symbols of “God triumphs over evil in general.” There is also a mediating &lt;strong&gt;Idealist&lt;/strong&gt; view that treats Revelation as symbolic of the spiritual battle throughout the church age, not tied to specific events past or future. But the question at hand is preterism vs futurism, so idealism/historicism aside, the differences are clear: one sees Revelation mostly fulfilled in ancient history, the other sees it mostly awaiting fulfillment at the end of history.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;summary-of-theological-arguments-and-implications&#34;&gt;Summary of Theological Arguments and Implications&lt;/h3&gt;
&lt;p&gt;Beyond interpreting individual passages, Preterism and Futurism rest on different &lt;strong&gt;hermeneutical approaches&lt;/strong&gt; and theological frameworks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Literal vs. Symbolic Hermeneutics:&lt;/strong&gt; Futurists (especially dispensationalists) advocate a more &lt;strong&gt;literal&lt;/strong&gt; reading of prophetic texts whenever possible. They argue that promises and predictions (e.g. Israel’s restoration, Christ’s coming on clouds, cosmic disasters) mean what they say in plain terms, unless context clearly indicates symbolism. Thus they expect tangible fulfillments. Preterists are more willing to see the same language as &lt;strong&gt;symbolic or hyperbolic&lt;/strong&gt;, consistent with Old Testament apocalyptic genre. They note that prophetic literature often uses dramatic imagery for historical judgments (e.g. Isaiah’s Day of the Lord on Babylon in Isa 13). So they feel justified in seeing Revelation’s and Matthew 24’s language as metaphor-laden, allowing a first-century event to satisfy it, albeit figuratively. This leads to the charge from futurists that preterists &lt;strong&gt;“spiritualize”&lt;/strong&gt; or allegorize prophecies too much (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Before%20we%20begin%20discussing%20Preterism%2C,more%20sense%20when%20interpreted%20literally&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=considered%20within%20the%20scope%20of,more%20sense%20when%20interpreted%20literally&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;), whereas preterists retort that futurists &lt;strong&gt;“woodenly literalize”&lt;/strong&gt; highly figurative texts. In reality, both sides mix literal and symbolic interpretations, but it’s about where they draw the line. For example, both sides agree the &lt;strong&gt;beasts&lt;/strong&gt; in Revelation are symbolic (no one expects a literal dragon or leopard-bear-lion beast); the question is whether that symbol corresponds to a &lt;em&gt;past&lt;/em&gt; empire/person or a &lt;em&gt;future&lt;/em&gt; one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Role of Israel and the Church:&lt;/strong&gt; Dispensational futurism holds that certain prophecies specifically concern &lt;strong&gt;ethnic/national Israel&lt;/strong&gt; and must be fulfilled in Israel’s experience. For instance, the 70th week of Daniel is about Israel (Dan 9:24: “70 weeks are determined for your people and your holy city”) and thus they believe Israel as a people will go through that final period. Promises of Israel’s national repentance and blessing (Rom. 11:26, Zech. 12:10) are expected to occur in the end-times. The Church is a separate entity (“parenthesis”) in God’s plan, and will be removed (in the rapture) so God’s focus returns to Israel. &lt;strong&gt;Preterists (especially partial preterists)&lt;/strong&gt; often come from a &lt;strong&gt;covenant theology&lt;/strong&gt; perspective that sees the Church as the &lt;strong&gt;continuation or fulfillment of Israel&lt;/strong&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Olivet%20Discourse%20%2C%20as%20events,at%20the%20%20128&#34;&gt;Preterism - Wikipedia&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Preterism%20holds%20that%20Ancient%20Israel,at%20the%20%20128&#34;&gt;Preterism - Wikipedia&lt;/a&gt;). They argue that the Mosaic covenant and the special status of ethnic Israel expired in 70 A.D. with the Temple’s fall, and that in Christ, believing Jews and Gentiles are one new people of God (Eph 2:14-16). Thus, promises to Israel are either fulfilled in the church or in the Messianic first-century remnant. This dramatically affects interpretation: where a dispensationalist sees, say, Revelation 7’s 144,000 from the tribes of Israel as literal Jews to be saved in the future tribulation, a preterist might see them as symbolizing the Jewish Christians of the first century or the fullness of God’s elect people (12x12x1000 symbolism). The &lt;strong&gt;theological argument&lt;/strong&gt; here is whether prophecy should be &lt;strong&gt;Israel-centric&lt;/strong&gt; (futurist) or &lt;strong&gt;Christ/church-centric&lt;/strong&gt; (preterist). Each side marshals verses: futurists point to Paul’s expectation of future Jewish salvation (Romans 11) and a coming time of trouble for Israel (Jer. 30:7’s “Jacob’s trouble”), while preterists point to verses about the old covenant vanishing (Heb 8:13) and the new people of God inheriting God’s promises (1 Pet 2:9-10 applies Exodus 19’s Israel language to the church). This debate is extensive, but it underlies why dispensationalists insist certain prophecies can’t be “spiritualized” away – because they pertain to Israel’s destiny.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Imminence and Delay:&lt;/strong&gt; Preterists offer their view in part to resolve the New Testament’s apparent emphasis on the nearness of “the end” in the first century. Critics of Christianity (like Bertrand Russell, or Albert Schweitzer in the quote referenced by TGC (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=Preterists%20find%20further%20support%20in,the%20%E2%80%9Csoon%E2%80%9D%20coming%20of%20Christ&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=The%20%E2%80%9CConsistent%20Eschatology%E2%80%9D%20of%20Lutheran,answer%20to%20this%20%E2%80%9Cliberal%E2%80%9D%20viewpoint&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;)) argued Jesus expected the end of the world in his generation and was mistaken. Preterists respond that Jesus wasn’t mistaken – those prophecies &lt;em&gt;did&lt;/em&gt; come to pass (not the end of the world, but the end of the age in 70 A.D.), thereby preserving Jesus’ credibility. Full preterism is, in a way, an extreme attempt to solve the “delay of the Parousia” problem by saying there was no delay – it all happened. Futurists counter that the New Testament taught a tension of &lt;strong&gt;“already and not yet.”&lt;/strong&gt; Yes, some things were near (destruction of Jerusalem as judgment, the spread of the gospel), but other things (Christ’s final advent) were always meant to occur at an unknown time. They point out that Jesus gave parables about a &lt;strong&gt;long delay&lt;/strong&gt; (the Parable of the Talents in Matt 25 or the wise and foolish virgins implies the bridegroom is delayed). Also, 2 Peter 3 addresses the issue of “Where is the promise of His coming?” and urges that God’s timeline is not ours – a day to Him can be a thousand years. The &lt;strong&gt;modern theological debate&lt;/strong&gt; often engages these questions: Was Jesus’ “coming” language meant to be two-tiered (a coming in judgment in 70 and an ultimate coming)? Or did the early church genuinely expect the end quickly and then adjust expectations when it didn’t happen? Preterists lean to the former, arguing for a deliberate two-tier fulfillment (70 and final) – at least partial preterists do. Scholars like N.T. Wright have even argued that “the Son of Man coming on clouds” in the Gospels refers to 70 A.D. vindication, not the end of world, thus absolving the texts of error while still affirming a final return taught elsewhere. In contrast, many futurist scholars hold that the &lt;strong&gt;“this generation”&lt;/strong&gt; phrase is the toughest challenge; some, like Gleason Archer or John Walvoord, propose that “generation” means &lt;em&gt;race&lt;/em&gt; (the Greek &lt;em&gt;genea&lt;/em&gt; can mean lineage), i.e. “this nation/people (the Jews) will not pass away until all is fulfilled” (&lt;a href=&#34;https://www.worthychristianforums.com/topic/225112-the-dangerous-lie-of-preterism/#:~:text=The%20Dangerous%20Lie%20of%20Preterism,By%20contrast&#34;&gt;The Dangerous Lie of Preterism - Theology - Worthy Christian Forums&lt;/a&gt;). However, that is not widely accepted by scholars (&lt;a href=&#34;https://www.galaxie.com/article/bsac167-666-04#:~:text=In%20Jesus%27%20fig,Mark%2013%3A30&#34;&gt;Preterism and “This Generation” &amp;ndash; By: Lawrence A. DeBruyn&lt;/a&gt;). More commonly, futurists say Jesus deliberately conflated near and far events, or that &lt;strong&gt;“generation”&lt;/strong&gt; refers to the generation that sees the end-time signs begin. In any case, the handling of the &lt;strong&gt;time statements&lt;/strong&gt; is a key theological argument. Preterists claim theirs is the only way to honestly take the “time texts” (like “soon”, “at hand”) at face value, whereas futurists claim the &lt;em&gt;nature&lt;/em&gt; of prophesied events (worldwide destruction, resurrection) demands a future fulfillment and that “soon” from God’s perspective can still be centuries (especially if one views Revelation’s language as intentionally enigmatic on timing).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Orthodoxy and Heresy Concerns:&lt;/strong&gt; Church leaders have strongly rejected &lt;strong&gt;full preterism&lt;/strong&gt; because it in effect says the general resurrection is past and we are already in the final state (albeit spiritualized). This contradicts the historic creeds (e.g. Nicene Creed: “He will come again in glory to judge the living and the dead… we look for the resurrection of the dead and the life of the world to come”). Partial preterists stay within orthodoxy by affirming those future realities, merely saying the &lt;strong&gt;tribulation and symbolic coming in judgment&lt;/strong&gt; happened in 70. But some futurists worry that partial preterism is a slippery slope – they caution that &lt;strong&gt;mild or partial preterism can slide into full preterism&lt;/strong&gt; if one is “consistent” (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=outside%20of%20orthodoxy,%E2%80%9CExtreme&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=the%20tendency%20of%20mild%20or,%E2%80%9CExtreme&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;). Preterists, on the other hand, accuse dispensational futurism of &lt;strong&gt;novelty&lt;/strong&gt; and say it is not grounded in historic Christian teaching. They point out no Christian before the 19th century taught a two-stage coming (rapture vs. return) or a parenthetical church age in the 70 weeks. They sometimes label it &lt;em&gt;“newspaper exegesis”&lt;/em&gt; when futurists constantly match prophecy to current events, which can discredit Christianity when those predictions fail. Futurists reply that their core expectation of a future Antichrist and second advent is anything but novel – it’s deeply rooted in Scripture and tradition. The packaging (like pre-trib rapture) might be newer, but belief in a future tribulation and Antichrist can be traced to early church writings (although not in a fully systematized way).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Scholarly Consensus:&lt;/strong&gt; In academic biblical studies today, if one were to generalize, there is considerable agreement that: (1) &lt;strong&gt;Daniel&lt;/strong&gt; largely refers to events up to the 2nd century B.C. (the Maccabean period and Antiochus Epiphanes) – a critical view many evangelicals might not share fully, but even evangelical scholars often agree Daniel’s detailed prophecy in chapter 11 matches history up to that point. Futurists, however, believe Daniel also leaps ahead to the end in places. (2) &lt;strong&gt;Matthew 24/Luke 21&lt;/strong&gt; is widely seen by scholars as primarily referring to the fall of Jerusalem in A.D. 70 (especially Luke, which explicitly does). Many scholars think Mark 13 (the earliest version of the discourse) was a reassurance to early Christians undergoing turmoil that the fall of Jerusalem was not the end of the world but a vindication of Jesus’ prophecy. Still, most Christians (scholarly or not) also hold that Jesus and the apostles looked to a future literal Second Coming as well – the difference is whether Matthew 24 rolled both together or not. (3) &lt;strong&gt;Revelation&lt;/strong&gt; – scholarly consensus is that it was written in the &lt;strong&gt;Domitianic era (~95 A.D.)&lt;/strong&gt; (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=Donald%20Guthrie%3A%20%E2%80%9CThe%20most%20widely,16&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=David%20Aune%3A%20%E2%80%9CDuring%20the%20last,17&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) and was intended to encourage believers under the threat of persecution by Rome. The symbols of Babylon, the beast, etc., are usually connected to the Roman Empire (Babylon being a cipher for Rome is almost a consensus in critical scholarship). Therefore, in terms of what Revelation &lt;em&gt;meant&lt;/em&gt; to its first readers, scholars lean preterist/idealist (it was about their contemporary situation, albeit in symbolic form). However, when it comes to &lt;strong&gt;theological consensus&lt;/strong&gt;, almost all Christian traditions (except full preterists) affirm that &lt;strong&gt;Christ’s final coming, the resurrection, and last judgment are future&lt;/strong&gt; realities. So any interpretation must leave room for those. The debate is how much of e.g. Revelation refers to those ultimate events versus how much was about Rome. Many mainline scholars might say Revelation 19–22 is a vision of the ultimate future (general, not detailed timeline), whereas chapters 6–18 are symbolically about forces at work in the first-century (with possible relevance to any era).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In &lt;strong&gt;modern theological debates&lt;/strong&gt;, you’ll find preterism gaining some traction especially among Reformed theologians who are uncomfortable with what they see as the speculative nature of dispensational futurism. Books like &lt;em&gt;“Last Days Madness”&lt;/em&gt; by Gary DeMar or &lt;em&gt;“The Parousia”&lt;/em&gt; by J. Stuart Russell defend preterism. On the other side, dispensational authors like Thomas Ice, Tim LaHaye, Mark Hitchcock, and John MacArthur defend futurism and often critique preterism as downplaying the hope of Christ’s imminent return. Some have even called preterism “dangerous” for possibly dampening Christian expectation or spiritualizing promises (&lt;a href=&#34;https://theos.org/forum/viewtopic.php?t=4101#:~:text=Matthew%2024%20Inconsistent%20With%20Preterism,seems%20that%20what%20leads&#34;&gt;Matthew 24 Inconsistent With Preterism - The Narrow Path Ministries&lt;/a&gt;) (&lt;a href=&#34;https://www.worthychristianforums.com/topic/225112-the-dangerous-lie-of-preterism/#:~:text=The%20Dangerous%20Lie%20of%20Preterism,By%20contrast&#34;&gt;The Dangerous Lie of Preterism - Theology - Worthy Christian Forums&lt;/a&gt;). However, partial preterists argue they &lt;em&gt;do&lt;/em&gt; expect Christ’s return – they simply put events like Antichrist’s tribulation in the past, somewhat similar to how amillennialists historically viewed Nero as a type of Antichrist and the tribulation as largely the trials of the early church. In fact, partial preterism isn’t far removed from classical amillennialism: both say the “great tribulation” occurred in the first century and we now live in the Gospel age awaiting the final return of Christ. The difference is that partial preterists are more likely to see specific fulfillment in 70 A.D., whereas amillennialists might see it more generally as the victory of the church over pagan Rome.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Preterism and Futurism&lt;/strong&gt; offer two distinct lenses through which to read biblical prophecy, each with its own strengths and challenges. Preterism grounds the fulfillment of prophecy in concrete &lt;strong&gt;historical events&lt;/strong&gt; close to the biblical era – the fall of Jerusalem, the persecution under Nero, the collapse of Rome – thereby highlighting the immediate relevance and reliability of Jesus’ and the apostles’ predictions. It emphasizes the &lt;strong&gt;covenantal shift&lt;/strong&gt; that took place in the first century: the judgment on Old Covenant Israel and the vindication of Christ’s fledgling Church. Futurism, on the other hand, underscores the forward-looking &lt;strong&gt;hope of the Church&lt;/strong&gt; through the ages – the conviction that the ultimate climax of God’s plan lies ahead, with the visible return of Jesus to right all wrongs, defeat evil, raise the dead, and renew creation. It insists that many prophecies have an intensity and universality that history has not yet witnessed and thus must be realized in the future in a way all the world will recognize.&lt;/p&gt;
&lt;p&gt;In balancing these views, many theologians today adopt a kind of &lt;strong&gt;“already/not yet”&lt;/strong&gt; eschatology: acknowledging that significant prophetic events (the cross, resurrection, outpouring of the Spirit, even Jerusalem’s fall) have already occurred (as preterism notes), while also affirming that the story is not complete until Christ returns in glory (as futurism maintains) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=,or%20Structure%20of%20Biblical%20Prophecy&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=It%20is%20true%20that%20this,recognize%20this%20%E2%80%9Cnow%20and%20yet&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;). Indeed, as one scholarly evaluation put it, the New Testament portrays this age as the &lt;strong&gt;inauguration&lt;/strong&gt; of the kingdom and the &lt;strong&gt;age to come&lt;/strong&gt; as awaiting its &lt;strong&gt;consummation&lt;/strong&gt; at Christ’s return (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=,or%20Structure%20of%20Biblical%20Prophecy&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=It%20is%20true%20that%20this,recognize%20this%20%E2%80%9Cnow%20and%20yet&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;). In that sense, both views capture part of the truth: there are &lt;strong&gt;fulfillments behind us&lt;/strong&gt; and &lt;strong&gt;fulfillments still before us&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Historically&lt;/strong&gt;, we see that interpretations often arise in response to circumstances – the early Church under persecution read Revelation as future hope, the Reformers under oppression read it as church history and papal critique, the Counter-Reformers proposed past or future schemes to defend their church, and modern readers often oscillate between wanting certainty that prophecy is fulfilled versus anticipation that prophecy will unfold in one’s own time. &lt;strong&gt;Modern scholarly consensus&lt;/strong&gt; tends to place a great deal of Revelation and the Olivet prophecy in their first-century context (aligning with a preterist or at least partially preterist reading of those texts) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=D,7&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=Donald%20Guthrie%3A%20%E2%80%9CThe%20most%20widely,16&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;), yet the same scholars uphold that core Christian doctrines (Second Coming, final judgment) are future. Meanwhile, in popular Christian culture, dispensational Futurism remains influential, especially in evangelical Protestantism, though it faces more critique now than in the recent past as more students of Scripture explore the merits of alternative views.&lt;/p&gt;
&lt;p&gt;In any case, a &lt;strong&gt;well-rounded eschatology&lt;/strong&gt; must account for the compelling biblical evidence presented by both sides. Preterism reminds us that Jesus’ prophecies did not fail – the generation he addressed &lt;em&gt;did&lt;/em&gt; witness astonishing fulfillments as Christianity emerged from the ashes of Jerusalem’s destruction, showing God’s word is true in history. Futurism reminds us that God’s plan for the world extends to a real climax – evil will not simply fade away by 70 A.D. or by gradual progress, but will be decisively overcome by Christ’s dramatic intervention in the future, an event still awaited in hope. As such, many scholars advise an irenic approach: learning from both views without extreme dogmatism.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;debate between Preterism and Futurism&lt;/strong&gt; is likely to continue as students of prophecy seek to discern which events best correspond to the biblical predictions. Ultimately, the study of these interpretations can enrich one’s understanding of Scripture’s depth – showing how prophecies spoke to an &lt;strong&gt;immediate audience&lt;/strong&gt; in their own trials, and yet how they can also speak to &lt;strong&gt;all believers&lt;/strong&gt; about God’s final victory. With careful attention to context, language, and the whole counsel of Scripture, one can appreciate that biblical prophecy often has layers – a &lt;strong&gt;near fulfillment&lt;/strong&gt; and a &lt;strong&gt;far fulfillment&lt;/strong&gt;, an &lt;strong&gt;already&lt;/strong&gt; and a &lt;strong&gt;not yet&lt;/strong&gt; (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=,or%20Structure%20of%20Biblical%20Prophecy&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;). Thus, rather than an “either/or” choice, many find a “both/and” approach compelling: significant aspects of Matthew 24, Daniel, and Revelation were fulfilled in the dramatic events of the first century, &lt;em&gt;and&lt;/em&gt; these texts also direct our gaze to the ultimate consummation when &lt;strong&gt;“the kingdom of the world has become the kingdom of our Lord and of His Christ, and He shall reign forever and ever”&lt;/strong&gt; (Rev 11:15).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ice, Thomas. &amp;ldquo;Has Bible Prophecy Already Been Fulfilled?&amp;rdquo; (1999) – analysis of Preterism vs Futurism (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=The%20preterist%20%28Latin%20for%20,timeless%29%20does%20not&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;) (&lt;a href=&#34;https://www.ldolphin.org/preterism-ice.html#:~:text=PRETERISM%20VS&#34;&gt;HAS BIBLE PROPHECY ALREADY BEEN FULFILLED? by Thomas Ice&lt;/a&gt;) (&lt;a href=&#34;https://christianity.stackexchange.com/questions/83762/what-is-the-biblical-and-historical-basis-for-the-belief-that-the-second-coming#:~:text=,Jerusalem&#34;&gt;history - What is the biblical and historical basis for the belief that the Second Coming of Christ hasn&amp;rsquo;t happened yet (as of 2021)? - Christianity Stack Exchange&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Wikipedia: &amp;ldquo;Preterism&amp;rdquo; – overview of preterist eschatology and its history (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Preterism%20is%20a%20Christian%20eschatological,of%20Jerusalem%20in%20AD%2070&#34;&gt;Preterism - Wikipedia&lt;/a&gt;) (&lt;a href=&#34;https://en.wikipedia.org/wiki/Preterism#:~:text=Historically%2C%20preterists%20and%20non,Reformation.%5B%202&#34;&gt;Preterism - Wikipedia&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;LaHaye, Tim &amp;amp; Ice, Thomas. &lt;em&gt;Charting the End Times&lt;/em&gt; (2001) – dispensational futurist perspective (cited in PreceptAustin notes) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=The%20futurist%20generally%20believes%20that,79&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;) (&lt;a href=&#34;https://www.preceptaustin.org/revelation-intro-systems#:~:text=There%20are%20two%20forms%20of,Christ%20returns%20in&#34;&gt;2.12 - Systems of Interpretation | Precept Austin&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Walls, J. L., ed. &lt;em&gt;The Oxford Handbook of Eschatology&lt;/em&gt; (2007) – notes on Counter-Reformation eschatology (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=,Walls%2C%C2%A0The%20Oxford%20Handbook%20of%20Eschatology%2C%C2%A02007&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;La Vista Church of Christ Q&amp;amp;A, &amp;ldquo;Did the Jesuits develop preterism and futurism?&amp;rdquo; – historical info on Ribera and Alcázar (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=Futurism%20arose%20first,somewhere%20between%201581%20and%201593&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;) (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=But%20the%20Catholic%20church%20is,the%20early%20years%20after%20Christ&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Alford, Henry. &lt;em&gt;New Testament for English Readers&lt;/em&gt; (1872) – historical commentary noting Jesuit Alcázar as first systematic preterist (&lt;a href=&#34;https://www.lavistachurchofchrist.org/cms/did-the-jesuits-develop-preterism-and-futurism/#:~:text=%3E%20Preterism%20,Testament%20for%20English%20Readers%2C%201872&#34;&gt;Did the Jesuits develop preterism and futurism? – La Vista Church of Christ&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Wikipedia: &amp;ldquo;John Nelson Darby&amp;rdquo; – notes on Darby as father of dispensational futurism (&lt;a href=&#34;https://en.wikipedia.org/wiki/John_Nelson_Darby#:~:text=John%20Nelson%20Darby%20,2&#34;&gt;John Nelson Darby - Wikipedia&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Evidence Unseen, &amp;ldquo;Date of Revelation&amp;rdquo; – collation of scholarly quotes on Revelation’s dating (majority to Domitian’s reign, ~95 A.D.) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=D,7&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;) (&lt;a href=&#34;https://www.evidenceunseen.com/bible-difficulties-2/nt-difficulties/jude/date-of-revelation/#:~:text=Donald%20Guthrie%3A%20%E2%80%9CThe%20most%20widely,16&#34;&gt;Date of Revelation | Evidence Unseen&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Ad Dei Gloriam, &amp;ldquo;Seventy Weeks of Daniel – Four Interpretations&amp;rdquo; – compares Preterist and Dispensational views of Daniel 9 (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=Preterists%20typically%20see%20the%2070th,Heb%2010&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;) (&lt;a href=&#34;https://www.addeigloriam.org/commentary/ot-prophets/seventy-weeks-of-daniel.htm#:~:text=At%20an%20unknown%20time%20in,year%20Millennial%20Kingdom&#34;&gt;The Seventy Weeks of Daniel 9 - Four Interpretations&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The Gospel Coalition, &amp;ldquo;Preterism: Has All Prophecy Been Fulfilled?&amp;rdquo; – evaluation of preterism and reaffirmation of future consummation (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=Whatever%20disagreements%20in%20detail%20they,we%20can%20only%20highlight%20here&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;) (&lt;a href=&#34;https://www.thegospelcoalition.org/essay/preterism-prophecy-fulfilled/#:~:text=,or%20Structure%20of%20Biblical%20Prophecy&#34;&gt;Preterism: Has All Prophecy Been Fulfilled? - The Gospel Coalition&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Verdict:&lt;/strong&gt;&lt;br&gt;
After weighing the biblical evidence, historical context, and theological nuances, the evidence most strongly supports a &lt;strong&gt;partial preterist&lt;/strong&gt; interpretation. This view holds that many key prophecies—such as those concerning the fall of Jerusalem, the destruction of the Temple, and the judgment on apostate Israel—were indeed fulfilled in the first century (especially around A.D. 70). It reads passages like Matthew 24 and portions of Revelation in light of their original historical context, where imminent events (such as the Roman siege) provided a powerful vindication of Jesus’ words.&lt;/p&gt;
&lt;p&gt;At the same time, partial preterism maintains orthodox Christian hope by affirming that the ultimate return of Christ, the general resurrection, and the final judgment remain future realities. In contrast, a strict futurist or dispensational approach often requires inserting an extended gap into prophetic timelines and a highly literal interpretation of apocalyptic symbols—steps that can strain the immediate language of texts (e.g., “this generation will not pass away”) and complicate the historical record.&lt;/p&gt;
&lt;p&gt;Thus, while both interpretive systems have internally consistent arguments, the partial preterist (or “already/not yet”) framework best harmonizes the biblical narrative with the known historical events of the first century and the enduring future promises of Scripture.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Open Source Deep Research</title>
      <link>/posts/open-source-deep-research/</link>
      <pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/open-source-deep-research/</guid>
      <description>&lt;h2 id=&#34;clone-the-project&#34;&gt;Clone the project&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/dzhng/deep-research.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd deep-research
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;envlocal-file&#34;&gt;.env.local file&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;FIRECRAWL_KEY=&amp;#34;your_firecrawl_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;OPENAI_KEY=&amp;#34;your_openai_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Optionally, for self-hosted Firecrawl:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# FIRECRAWL_BASE_URL=&amp;#34;http://localhost:3002&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;FROM node:18-alpine&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;WORKDIR /app&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;COPY package*.json ./&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;RUN npm install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;COPY . .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;CMD [&amp;#34;npm&amp;#34;, &amp;#34;start&amp;#34;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker-compose-file&#34;&gt;Docker Compose File&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.8&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;deep-research&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env_file&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;.env.local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tty&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;stdin_open&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;make-a-change-to-the-packagejson-file&#34;&gt;Make a change to the &lt;em&gt;package.json&lt;/em&gt; file&lt;/h2&gt;
&lt;h3 id=&#34;change-this&#34;&gt;Change this:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;start&amp;quot;: &amp;quot;tsx --env-file=.env.local src/run.ts&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;to-this&#34;&gt;to this:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;start&amp;quot;: &amp;quot;tsx src/run.ts&amp;quot;&lt;/code&gt;&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;clone-the-project&#34;&gt;Clone the project&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/dzhng/deep-research.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd deep-research
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;envlocal-file&#34;&gt;.env.local file&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;FIRECRAWL_KEY=&amp;#34;your_firecrawl_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;OPENAI_KEY=&amp;#34;your_openai_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Optionally, for self-hosted Firecrawl:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# FIRECRAWL_BASE_URL=&amp;#34;http://localhost:3002&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;FROM node:18-alpine&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;WORKDIR /app&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;COPY package*.json ./&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;RUN npm install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;COPY . .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;CMD [&amp;#34;npm&amp;#34;, &amp;#34;start&amp;#34;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker-compose-file&#34;&gt;Docker Compose File&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.8&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;deep-research&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env_file&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;.env.local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tty&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;stdin_open&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;make-a-change-to-the-packagejson-file&#34;&gt;Make a change to the &lt;em&gt;package.json&lt;/em&gt; file&lt;/h2&gt;
&lt;h3 id=&#34;change-this&#34;&gt;Change this:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;start&amp;quot;: &amp;quot;tsx --env-file=.env.local src/run.ts&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;to-this&#34;&gt;to this:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;start&amp;quot;: &amp;quot;tsx src/run.ts&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;run-the-container&#34;&gt;Run The Container&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker compose run --rm deep-research
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Is DeepSeek Safe To Run (locally)</title>
      <link>/posts/is-deepseek-safe-to-run-locally/</link>
      <pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/is-deepseek-safe-to-run-locally/</guid>
      <description>&lt;h1 id=&#34;monitor-network-connections&#34;&gt;Monitor Network Connections&lt;/h1&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;($true) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Get-Process ollama | ForEach-Object { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $id = $_.Id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;`n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Connections for Ollama process &lt;/span&gt;$id&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -ForegroundColor Green
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Get-NetTCPConnection | Where-Object OwningProcess &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; $id | Select-Object LocalAddress, LocalPort, RemoteAddress, RemotePort, State 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Start-Sleep -Seconds &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Clear-Host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mac&#34;&gt;Mac&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# One-time check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pgrep ollama&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsof -i -P -n | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# For continuous monitoring&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: Ollama Connections&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lsof -i -P -n | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    clear
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Alternative using netstat&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -p tcp -v | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# One-time check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pgrep ollama&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsof -i -P -n | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Or for continuous monitoring&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -n &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lsof -i -P -n | grep ollama&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Alternative using netstat&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -np | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Or using ss (more modern)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ss -np | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;running-ollama-inside-docker&#34;&gt;Running Ollama Inside Docker&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--gpus all &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-v ollama:/root/.ollama &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-p 11434:11434 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--security-opt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no-new-privileges &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--cap-drop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ALL &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--cap-add&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SYS_NICE &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--memory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;8g &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--memory-swap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;8g &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--cpus&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--read-only &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--name ollama &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;ollama/ollama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content>&lt;h1 id=&#34;monitor-network-connections&#34;&gt;Monitor Network Connections&lt;/h1&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;($true) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Get-Process ollama | ForEach-Object { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $id = $_.Id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;`n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Connections for Ollama process &lt;/span&gt;$id&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -ForegroundColor Green
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Get-NetTCPConnection | Where-Object OwningProcess &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; $id | Select-Object LocalAddress, LocalPort, RemoteAddress, RemotePort, State 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Start-Sleep -Seconds &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Clear-Host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mac&#34;&gt;Mac&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# One-time check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pgrep ollama&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsof -i -P -n | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# For continuous monitoring&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: Ollama Connections&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lsof -i -P -n | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    clear
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Alternative using netstat&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -p tcp -v | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# One-time check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pgrep ollama&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsof -i -P -n | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Or for continuous monitoring&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -n &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lsof -i -P -n | grep ollama&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Alternative using netstat&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -np | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Or using ss (more modern)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ss -np | grep ollama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;running-ollama-inside-docker&#34;&gt;Running Ollama Inside Docker&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--gpus all &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-v ollama:/root/.ollama &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-p 11434:11434 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--security-opt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no-new-privileges &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--cap-drop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ALL &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--cap-add&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SYS_NICE &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--memory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;8g &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--memory-swap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;8g &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--cpus&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--read-only &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--name ollama &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;ollama/ollama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Top InfoTech Creators to Follow in 2025</title>
      <link>/posts/top-infotech-creators-to-follow-in-2025/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/top-infotech-creators-to-follow-in-2025/</guid>
      <description>&lt;p&gt;This is a list of the YouTube creators I love to follow. This list contains creators that I think are genuine, creative and really fun to watch. And most importantly, they provide value. So, here are the Top 10….11.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;John Hammond&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Cybersecurity…also now destroying scammers…I think&lt;/p&gt;
&lt;p&gt;• Insanely knowledgeable. Also, the nicest guy you’ll ever meet. He is authentically John Hammond on and off camera. He really does care and has a ton of integrity.&lt;/p&gt;</description>
      <content>&lt;p&gt;This is a list of the YouTube creators I love to follow. This list contains creators that I think are genuine, creative and really fun to watch. And most importantly, they provide value. So, here are the Top 10….11.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;John Hammond&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Cybersecurity…also now destroying scammers…I think&lt;/p&gt;
&lt;p&gt;• Insanely knowledgeable. Also, the nicest guy you’ll ever meet. He is authentically John Hammond on and off camera. He really does care and has a ton of integrity.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@_JohnHammond&#34;&gt;https://www.youtube.com/@_JohnHammond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Jeff Geerling&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Raspberry Pis and stuff. (lots of other nerdy stuff)&lt;/p&gt;
&lt;p&gt;• Speaking of integrity, this guy sets the bar. Dives deeper into tech than I ever care to but keeps me glued to his videos. So talented and creative.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@JeffGeerling&#34;&gt;https://www.youtube.com/@JeffGeerling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gerald Auger&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Cybersecurity education, career advice, and industry insights.&lt;/p&gt;
&lt;p&gt;• Consistent and genuine. Speaks from deep experience.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@SimplyCyber&#34;&gt;https://www.youtube.com/@SimplyCyber&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tyler Ramsbey&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Cybersecurity&lt;/p&gt;
&lt;p&gt;• Up and coming, consistent. Is passionate about free education. Also, just an amazing dude.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@TylerRamsbey&#34;&gt;https://www.youtube.com/@TylerRamsbey&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tom Lawrence&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Everything IT….loves PFsense, Unifi and opensource&lt;/p&gt;
&lt;p&gt;• Has the best reviews on networking and security products. Great presence on camera, easy listening, and is genuinely a nice guy.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@LAWRENCESYSTEMS&#34;&gt;https://www.youtube.com/@LAWRENCESYSTEMS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Talking Sasquach&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Mostly Flipper Zero&lt;/p&gt;
&lt;p&gt;• One of the most fun vibes on YouTube. Humble and engaging. If you want to learn Flipper Zero…he’s the guy to watch.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@TalkingSasquach&#34;&gt;https://www.youtube.com/@TalkingSasquach&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cyb3rMaddy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Cybersecurity (education, getting started)&lt;/p&gt;
&lt;p&gt;• Up and coming, unique. She has a really fun, relaxed way of explaining topics. It’s an “watching over the shoulder” type experience. Watching her journey is really fun and I think will be relatable for a lot of people.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@Cyb3rMaddy&#34;&gt;https://www.youtube.com/@Cyb3rMaddy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Christian Lempa&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Networking, Docker, Kubernetes…lots of DevOps type stuff&lt;/p&gt;
&lt;p&gt;• Not a lot of fluff, which after watching a lot of me is a breath of fresh air. He organizes his videos in a great way and explains topics well. His video style is 🔥.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@christianlempa&#34;&gt;https://www.youtube.com/@christianlempa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ben Sadeghipour | NahamSec&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: Bug bounty&lt;/p&gt;
&lt;p&gt;• OG, great dude. Best content on bug bounty…period.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@NahamSec&#34;&gt;https://www.youtube.com/@NahamSec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gary Ruddell&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Content: OSINT mostly&lt;/p&gt;
&lt;p&gt;• Such a fun vibe. Love his storytelling. Puts effort into the aesthetics of his videos and it shows.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• YouTube: &lt;a href=&#34;https://www.youtube.com/@theGaryRuddell&#34;&gt;https://www.youtube.com/@theGaryRuddell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Also, even though she isn’t on YouTube, I wanted to include Alexis Bertholf&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;• Amazing networking content, fun vibe. Very creative.&lt;/p&gt;
&lt;p&gt;• Link:&lt;/p&gt;
&lt;p&gt;• LinkedIn: &lt;a href=&#34;https://www.linkedin.com/in/alexisbertholf/&#34;&gt;https://www.linkedin.com/in/alexisbertholf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;• Instagram: &lt;a href=&#34;https://www.instagram.com/digital.byte_&#34;&gt;https://www.instagram.com/digital.byte_&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Building a Hacker Dropbox (access any network)</title>
      <link>/posts/building-a-hacker-dropbox-access-any-network/</link>
      <pubDate>Fri, 20 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/building-a-hacker-dropbox-access-any-network/</guid>
      <description>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220120201.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The video: &lt;a href=&#34;https://youtu.be/1lZ3FQSv-wI?si=-Poh5YhiymhGK5cH&#34;&gt;https://youtu.be/1lZ3FQSv-wI?si=-Poh5YhiymhGK5cH&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-hacker-dropbox-and-why-you-need-oneeven-if-you-arent-a-hacker&#34;&gt;What is a &lt;em&gt;Hacker Dropbox&lt;/em&gt;? (and why you need one&amp;hellip;.even if you aren&amp;rsquo;t a hacker)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Here is a great definition from ChatGPT: &lt;em&gt;a small, discreet, and often portable device designed to be covertly placed in a target network to provide remote access for a hacker or penetration tester. It typically contains hardware and software configured to exploit the network or collect sensitive information.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re a hacker&amp;hellip;this is a no brainer. Get instant access to a remote network by dropping off a device. But&amp;hellip;.if you&amp;rsquo;re not a hacker&amp;hellip;why do you need this?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;family-helpdesk-support&#34;&gt;Family HelpDesk Support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If you&amp;rsquo;re like me, you are likely the official technical support for your family and friends. I also inherited the role of helpdesk support for my church&amp;hellip;these kinds of things just happen by default when you are in tech and people find out about your technical skills.&lt;/li&gt;
&lt;li&gt;This isn&amp;rsquo;t an easy thing to do, especially when it comes to troubleshooting networks for your family. Is the network up? Why is it slow? Sometimes a FaceTime call just isn&amp;rsquo;t going to cut it.&lt;/li&gt;
&lt;li&gt;If I&amp;rsquo;m going to be the support for my church and family, I&amp;rsquo;m going to take my role seriously. I need FULL control of the remote network&amp;hellip;&amp;hellip;no more playing around!!!&lt;/li&gt;
&lt;li&gt;With the &lt;em&gt;Hacker Dropbox&lt;/em&gt;, I can drop off a small device, in my case it&amp;rsquo;s going to be a Raspberry Pi 4. (it can be a lot of things, as long as the device is Linux-based and is 64-bit). Instantly I get access to this remote network, enabling me to provide remote support and access any device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;this-is-not-vpn&#34;&gt;This is NOT VPN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This is not a VPN (VIrtual Private Network) solution&amp;hellip;.it&amp;rsquo;s much better.&lt;/li&gt;
&lt;li&gt;This is a ZTNA (Zero-Trust Network Access) solution. It&amp;rsquo;s called Twingate and I&amp;rsquo;ve been using them for a long time in my business and personal networks. I talk more about them in the video above but in short, they allow you to get and give remote access to networks in the most secure way. They are used by everyone from large enterprises to homelabbers looking to access their Plex server.&lt;/li&gt;
&lt;li&gt;This isn&amp;rsquo;t the first video I&amp;rsquo;ve made about them but this is the first time I&amp;rsquo;ve featured a use-case like this.&lt;/li&gt;
&lt;li&gt;Oh, it&amp;rsquo;s also &lt;strong&gt;FREE&lt;/strong&gt; for home labbers. (And&amp;hellip;cough&amp;hellip;.businesses that don&amp;rsquo;t have a ton of employees&amp;hellip;.like me.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;you-dont-need-to-know-anything-about-the-network&#34;&gt;You don&amp;rsquo;t need to know ANYTHING about the network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I wanted this to be a turnkey solution even if you don&amp;rsquo;t know anything about the remote network. All you&amp;rsquo;ll have to do is plug in an ethernet cable (or connect to wifi&amp;hellip;.but you&amp;rsquo;ll need to know the SSID and password) and you will know everything you need to know about that network&amp;hellip;..but how?&lt;/li&gt;
&lt;li&gt;Twingate has a powerful API that allows us to do many things&amp;hellip;including write python scripts that will automagically tell us the private IP address of our &lt;em&gt;Hacker Dropbox&lt;/em&gt; (Raspberry Pi) and the Public IP address of the network, giving us instant access to this &lt;em&gt;Hacker Dropbox&lt;/em&gt; AND the network.&lt;/li&gt;
&lt;li&gt;This guide will contain that script.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-do-you-need&#34;&gt;What do you need?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Any Linux-based 64-bit system will do. You&amp;rsquo;ll need at least 1 CPU and 2GB RAM (recommended)&amp;hellip;but you can go as low as 512MB of RAM.&lt;/li&gt;
&lt;li&gt;You can also run this as a Docker container, which is my favorite way to deploy this in my home lab.&lt;/li&gt;
&lt;li&gt;In this example, with the &lt;em&gt;Hacker Dropbox&lt;/em&gt;, I&amp;rsquo;m using a Raspberry Pi 4 running Raspberry Pi OS Lite - 64-bit and installing it directly on the system (no docker container)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-other-hardware-options-do-i-have&#34;&gt;What other hardware options do I have?&lt;/h3&gt;
&lt;p&gt;Again, this can be many things, but here are some ideas to get the juices flowing:&lt;/p&gt;</description>
      <content>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220120201.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The video: &lt;a href=&#34;https://youtu.be/1lZ3FQSv-wI?si=-Poh5YhiymhGK5cH&#34;&gt;https://youtu.be/1lZ3FQSv-wI?si=-Poh5YhiymhGK5cH&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-hacker-dropbox-and-why-you-need-oneeven-if-you-arent-a-hacker&#34;&gt;What is a &lt;em&gt;Hacker Dropbox&lt;/em&gt;? (and why you need one&amp;hellip;.even if you aren&amp;rsquo;t a hacker)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Here is a great definition from ChatGPT: &lt;em&gt;a small, discreet, and often portable device designed to be covertly placed in a target network to provide remote access for a hacker or penetration tester. It typically contains hardware and software configured to exploit the network or collect sensitive information.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re a hacker&amp;hellip;this is a no brainer. Get instant access to a remote network by dropping off a device. But&amp;hellip;.if you&amp;rsquo;re not a hacker&amp;hellip;why do you need this?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;family-helpdesk-support&#34;&gt;Family HelpDesk Support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If you&amp;rsquo;re like me, you are likely the official technical support for your family and friends. I also inherited the role of helpdesk support for my church&amp;hellip;these kinds of things just happen by default when you are in tech and people find out about your technical skills.&lt;/li&gt;
&lt;li&gt;This isn&amp;rsquo;t an easy thing to do, especially when it comes to troubleshooting networks for your family. Is the network up? Why is it slow? Sometimes a FaceTime call just isn&amp;rsquo;t going to cut it.&lt;/li&gt;
&lt;li&gt;If I&amp;rsquo;m going to be the support for my church and family, I&amp;rsquo;m going to take my role seriously. I need FULL control of the remote network&amp;hellip;&amp;hellip;no more playing around!!!&lt;/li&gt;
&lt;li&gt;With the &lt;em&gt;Hacker Dropbox&lt;/em&gt;, I can drop off a small device, in my case it&amp;rsquo;s going to be a Raspberry Pi 4. (it can be a lot of things, as long as the device is Linux-based and is 64-bit). Instantly I get access to this remote network, enabling me to provide remote support and access any device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;this-is-not-vpn&#34;&gt;This is NOT VPN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This is not a VPN (VIrtual Private Network) solution&amp;hellip;.it&amp;rsquo;s much better.&lt;/li&gt;
&lt;li&gt;This is a ZTNA (Zero-Trust Network Access) solution. It&amp;rsquo;s called Twingate and I&amp;rsquo;ve been using them for a long time in my business and personal networks. I talk more about them in the video above but in short, they allow you to get and give remote access to networks in the most secure way. They are used by everyone from large enterprises to homelabbers looking to access their Plex server.&lt;/li&gt;
&lt;li&gt;This isn&amp;rsquo;t the first video I&amp;rsquo;ve made about them but this is the first time I&amp;rsquo;ve featured a use-case like this.&lt;/li&gt;
&lt;li&gt;Oh, it&amp;rsquo;s also &lt;strong&gt;FREE&lt;/strong&gt; for home labbers. (And&amp;hellip;cough&amp;hellip;.businesses that don&amp;rsquo;t have a ton of employees&amp;hellip;.like me.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;you-dont-need-to-know-anything-about-the-network&#34;&gt;You don&amp;rsquo;t need to know ANYTHING about the network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I wanted this to be a turnkey solution even if you don&amp;rsquo;t know anything about the remote network. All you&amp;rsquo;ll have to do is plug in an ethernet cable (or connect to wifi&amp;hellip;.but you&amp;rsquo;ll need to know the SSID and password) and you will know everything you need to know about that network&amp;hellip;..but how?&lt;/li&gt;
&lt;li&gt;Twingate has a powerful API that allows us to do many things&amp;hellip;including write python scripts that will automagically tell us the private IP address of our &lt;em&gt;Hacker Dropbox&lt;/em&gt; (Raspberry Pi) and the Public IP address of the network, giving us instant access to this &lt;em&gt;Hacker Dropbox&lt;/em&gt; AND the network.&lt;/li&gt;
&lt;li&gt;This guide will contain that script.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-do-you-need&#34;&gt;What do you need?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Any Linux-based 64-bit system will do. You&amp;rsquo;ll need at least 1 CPU and 2GB RAM (recommended)&amp;hellip;but you can go as low as 512MB of RAM.&lt;/li&gt;
&lt;li&gt;You can also run this as a Docker container, which is my favorite way to deploy this in my home lab.&lt;/li&gt;
&lt;li&gt;In this example, with the &lt;em&gt;Hacker Dropbox&lt;/em&gt;, I&amp;rsquo;m using a Raspberry Pi 4 running Raspberry Pi OS Lite - 64-bit and installing it directly on the system (no docker container)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-other-hardware-options-do-i-have&#34;&gt;What other hardware options do I have?&lt;/h3&gt;
&lt;p&gt;Again, this can be many things, but here are some ideas to get the juices flowing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ZImaboard&lt;/li&gt;
&lt;li&gt;Raspberry Pi 4/5&lt;/li&gt;
&lt;li&gt;Raspberry Pi 400/500&lt;/li&gt;
&lt;li&gt;Old laptops&lt;/li&gt;
&lt;li&gt;NAS&lt;/li&gt;
&lt;li&gt;Intel NUC or other mini-pcs&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;the-tutorial&#34;&gt;The Tutorial&lt;/h1&gt;
&lt;h2 id=&#34;step-1---setup-twingate&#34;&gt;Step 1 - Setup Twingate&lt;/h2&gt;
&lt;p&gt;This setup is VERY easy and is all done in the cloud.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sign up for Twingate here: &lt;a href=&#34;https://ntck.co/twingate_ztna&#34;&gt;https://ntck.co/twingate_ztna&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll create a new Twingate network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220112613.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-2---add-your-first-remote-network&#34;&gt;Step 2 - Add your first remote network&lt;/h2&gt;
&lt;p&gt;You will be prompted to go through a wizard, we can skip that for now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on &lt;em&gt;Remote Networks&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220112739.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;And then add a &lt;em&gt;Remote Network&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220112803.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose &lt;em&gt;on-premise&lt;/em&gt; for location&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220112825.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Once created, we&amp;rsquo;ll click on the remote network link to jump in and add more config&amp;hellip;like adding a connector.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220112905.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-25---prep-your-hacker-dropbox&#34;&gt;Step 2.5 - Prep your &lt;em&gt;Hacker Dropbox&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will vary based on what device you choose but this will normally involve installing a compatible OS (64-bit Linux OS) and getting access to your device via CLI.&lt;/li&gt;
&lt;li&gt;I demo flashing an SD-card for the Raspberry Pi 4 in the video.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-3---adding-a-connector-for-your-remote-network&#34;&gt;Step 3 - Adding a connector for your remote network&lt;/h2&gt;
&lt;p&gt;The connector, in our case, will be the &lt;em&gt;Hacker Dropbox&lt;/em&gt;, a linux-based device running Twingate software, aka, &lt;em&gt;The Connector&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on &lt;em&gt;Deploy Connector&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113010.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Good practice, run &lt;code&gt;sudo apt update&lt;/code&gt; to make sure all your repos are up-to-date (this will different for you if you are running something that isn&amp;rsquo;t Debian-based)&lt;/li&gt;
&lt;li&gt;For the Raspberry Pi example, we are installing the Twingate connector directly on the OS, no container. So we&amp;rsquo;ll select Linux as our option.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113353.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now, generate your access tokens. These will automatically be added the command we&amp;rsquo;ll use to install Twingate here in a moment.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113428.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy the provided command&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113458.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Paste that command in your terminal and watch the magic happen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113521.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113536.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We are actually&amp;hellip;.done. Check Twingate to see if your connector is up.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113621.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-4---add-a-remote-wifi-network-if-not-using-ethernet&#34;&gt;Step 4 - Add a remote WiFi Network (if not using ethernet)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will be Raspberry Pi specific.&lt;/li&gt;
&lt;li&gt;Run this command to access the NetworkManager TUI&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nmtui
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Edit a connection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113842.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select Add&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113856.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select WiFi&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113917.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add SSID and Password (you&amp;rsquo;ll need to know this for the remote network)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220113943.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;em&gt;Ok&lt;/em&gt; and then hit &lt;em&gt;ESC&lt;/em&gt; to save and get out of there.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-5---use-the-twingate-api-to-learn-about-the-remote-network&#34;&gt;Step 5 - Use the Twingate API to learn about the remote network&lt;/h2&gt;
&lt;p&gt;You only need this option if this is a network you are unfamiliar with. So, for example, you might be offering remote support for your family and you will likely already know their network, 192.168.1.0/24 (for example) and you may have set the static IP address of your &lt;em&gt;Hacker Dropbox&lt;/em&gt; and can easily, manually add this as a resource in Twingate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate an API token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220114238.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our script will be provisioning resources so we&amp;rsquo;ll need to give it a good amount of access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220114315.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy that key and put it somewhere safe.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220114347.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-the-python-script&#34;&gt;Run the Python Script&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll need another computer, can be anything that can run Python. (which&amp;hellip;can be anything, Windows, Mac, Linux.)&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;ll also need Python3 installed, refer to your OS-specific documentation to install Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;create-the-script&#34;&gt;Create the script&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create a new python script&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano twingate.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;paste the following script&lt;/li&gt;
&lt;li&gt;Replace the following variables:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;API_URL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API_KEY&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TARGET_NETWORK_NAME&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; gql &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gql, Client
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; gql.transport.requests &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; RequestsHTTPTransport
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Twingate API settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;API_URL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://****your Twingate network here****.twingate.com/api/graphql/&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Replace &amp;lt;subdomain&amp;gt; with your Twingate subdomain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;API_KEY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YOUR TWINGATE API KEY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TARGET_NETWORK_NAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YOUR REMOTE NETWORK&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your target network name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QUERY_REMOTE_NETWORKS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gql(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;query GetRemoteNetworkDetails {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  remoteNetworks(after: null, first: 10) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    edges {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      node {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        connectors {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          edges {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            node {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              publicIP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              privateIPs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              remoteNetwork {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MUTATION_CREATE_RESOURCE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gql(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;mutation CreateResource($name: String!, $address: String!, $remoteNetworkId: ID!) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  resourceCreate(
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    name: $name,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    address: $address,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    remoteNetworkId: $remoteNetworkId
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ok
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    error
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    entity {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      address {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        type
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup_client&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    transport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RequestsHTTPTransport(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;API_URL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-API-KEY&amp;#34;&lt;/span&gt;: API_KEY},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        use_json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Client(transport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;transport, fetch_schema_from_transport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_target_network&lt;/span&gt;(client):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(QUERY_REMOTE_NETWORKS)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; edge &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;remoteNetworks&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;edges&amp;#34;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        network &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; edge[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; network[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; TARGET_NETWORK_NAME:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; network
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_resource&lt;/span&gt;(client, name, address_value, remote_network_id):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: name,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: address_value,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;remoteNetworkId&amp;#34;&lt;/span&gt;: remote_network_id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(MUTATION_CREATE_RESOURCE, variable_values&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;params)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; response[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resourceCreate&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ok&amp;#34;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to create resource: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;response[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;resourceCreate&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; response[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resourceCreate&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;entity&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;automate_resource_creation&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; setup_client()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Searching for target network: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;TARGET_NETWORK_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;...&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    target_network &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_target_network(client)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; target_network:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Network &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;TARGET_NETWORK_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; not found.&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Found network: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;target_network[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    remote_network_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target_network[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; connector_edge &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; target_network[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;connectors&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;edges&amp;#34;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        connector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connector_edge[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        public_ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connector&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;publicIP&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private_ips &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connector&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;privateIPs&amp;#34;&lt;/span&gt;, [])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; public_ip:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            resource_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resource-Public-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;public_ip&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creating Resource for public IP: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;public_ip&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;...&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            resource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; create_resource(client, resource_name, public_ip, remote_network_id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resource created: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;resource[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (ID: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;resource[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, Address: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;resource[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; private_ip &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; private_ips:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            resource_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resource-Private-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;private_ip&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creating Resource for private IP: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;private_ip&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;...&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            resource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; create_resource(client, resource_name, private_ip, remote_network_id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resource created: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;resource[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (ID: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;resource[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, Address: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;resource[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        automate_resource_creation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;e&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Save the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;now-well-create-a-python-virtual-environment&#34;&gt;Now, we&amp;rsquo;ll create a python virtual environment&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This will make sure we can install packages and prerequisites without hurting your other projects. (if you have some&amp;hellip;.if you don&amp;rsquo;t&amp;hellip;that&amp;rsquo;s okay&amp;hellip;.it&amp;rsquo;s just good practice)&lt;/li&gt;
&lt;li&gt;First make sure you have it installed. See below for Linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install python3-venv -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Also make sure you install PIP&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install python3-pip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Now create a Python virtual environment and activate it.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv twingatesomething
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source twingatesomething/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Install the pre-reqs&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install gql requests requests.toolbelt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Type to run the script&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 twingate.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Check your resources in Twingate&amp;hellip;you should see something cool&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241220115720.png&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>I Built a Phone System Because No One Answers Me</title>
      <link>/posts/i-built-a-phone-system-because-no-one-answers-me/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/i-built-a-phone-system-because-no-one-answers-me/</guid>
      <description>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241209091545.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;yesi-put-a-phone-system-in-my-house&#34;&gt;Yes&amp;hellip;.I put a phone system in my house&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;In this video&amp;hellip;I put a phone system in my house and business.&lt;/li&gt;
&lt;li&gt;Why?&lt;/li&gt;
&lt;li&gt;Because no one answers their phones. My wife and daughters all have iphones and apple watches&amp;hellip;.but seem to never be able to answer their phones. I can NEVER get ahold of someone when I need to!&lt;/li&gt;
&lt;li&gt;As a complete nerd and former phone system engineer&amp;hellip;.this solution was obvious&amp;hellip;..install a phone system and put a phone in every room.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;butits-not-that-simple&#34;&gt;But&amp;hellip;.it&amp;rsquo;s not that simple&amp;hellip;.&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;My wife is very artsy and particular about the design of our house and what goes in it. She won&amp;rsquo;t allow just anything to be put on a wall or a side table. These phones had to be old, aesthetic, mid-century&amp;hellip;.which means I couldn&amp;rsquo;t use a typical SIP phone like I normally would.&lt;/li&gt;
&lt;li&gt;Also, my kids are obsessed with the old phones they see on the older tv shows and movies. They had to have them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sowhat-phone-system-do-we-need-anything-for-this&#34;&gt;So&amp;hellip;.what phone system? Do we need anything for this?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;For most people, nothing. We&amp;rsquo;re using the 3CX phone system and it&amp;rsquo;s going to be free for up to 10 users, which is more than enough for even a large family like mine. It is also hosted completely free in the cloud forever and you can literally get this setup in minutes.&lt;/li&gt;
&lt;li&gt;FULL DISCLOSURE, this video is sponsored by 3CX. I have worked with them for a long time and collaborated on a video a while back where we installed a phone system on a Raspberry Pi 4. This is no longer supported so I needed to redeploy a phone system anyway, to solve my domestic issues and I really needed a phone system for my business.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;do-we-need-any-hardware-phones&#34;&gt;Do we need any hardware? Phones?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Physical phones are optional. But they are very fun and I highly recommend them.&lt;/li&gt;
&lt;li&gt;In the event you do what some physical phones, you&amp;rsquo;ll need 2 things:
&lt;ul&gt;
&lt;li&gt;A phone&amp;hellip;.duh&lt;/li&gt;
&lt;li&gt;A device inside your network that can connect your physical phone to the 3CX cloud instance.
&lt;ul&gt;
&lt;li&gt;This can be either a:
&lt;ul&gt;
&lt;li&gt;Raspberry Pi (4/5) running the 3CX SBC (Session Border Controller)
&lt;ul&gt;
&lt;li&gt;Raspberry Pi 4: &lt;a href=&#34;https://geni.us/mzJF55&#34;&gt;https://geni.us/mzJF55&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raspberry Pi 5: &lt;a href=&#34;https://geni.us/z0BVIc&#34;&gt;https://geni.us/z0BVIc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;router phone&lt;/em&gt;, a fancier phone that has SBC capabilities baked in.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;phones-what-phones&#34;&gt;Phones? What phones?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Here are the phones that I purchased and can verify work pretty well.&lt;/p&gt;</description>
      <content>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241209091545.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;yesi-put-a-phone-system-in-my-house&#34;&gt;Yes&amp;hellip;.I put a phone system in my house&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;In this video&amp;hellip;I put a phone system in my house and business.&lt;/li&gt;
&lt;li&gt;Why?&lt;/li&gt;
&lt;li&gt;Because no one answers their phones. My wife and daughters all have iphones and apple watches&amp;hellip;.but seem to never be able to answer their phones. I can NEVER get ahold of someone when I need to!&lt;/li&gt;
&lt;li&gt;As a complete nerd and former phone system engineer&amp;hellip;.this solution was obvious&amp;hellip;..install a phone system and put a phone in every room.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;butits-not-that-simple&#34;&gt;But&amp;hellip;.it&amp;rsquo;s not that simple&amp;hellip;.&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;My wife is very artsy and particular about the design of our house and what goes in it. She won&amp;rsquo;t allow just anything to be put on a wall or a side table. These phones had to be old, aesthetic, mid-century&amp;hellip;.which means I couldn&amp;rsquo;t use a typical SIP phone like I normally would.&lt;/li&gt;
&lt;li&gt;Also, my kids are obsessed with the old phones they see on the older tv shows and movies. They had to have them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sowhat-phone-system-do-we-need-anything-for-this&#34;&gt;So&amp;hellip;.what phone system? Do we need anything for this?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;For most people, nothing. We&amp;rsquo;re using the 3CX phone system and it&amp;rsquo;s going to be free for up to 10 users, which is more than enough for even a large family like mine. It is also hosted completely free in the cloud forever and you can literally get this setup in minutes.&lt;/li&gt;
&lt;li&gt;FULL DISCLOSURE, this video is sponsored by 3CX. I have worked with them for a long time and collaborated on a video a while back where we installed a phone system on a Raspberry Pi 4. This is no longer supported so I needed to redeploy a phone system anyway, to solve my domestic issues and I really needed a phone system for my business.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;do-we-need-any-hardware-phones&#34;&gt;Do we need any hardware? Phones?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Physical phones are optional. But they are very fun and I highly recommend them.&lt;/li&gt;
&lt;li&gt;In the event you do what some physical phones, you&amp;rsquo;ll need 2 things:
&lt;ul&gt;
&lt;li&gt;A phone&amp;hellip;.duh&lt;/li&gt;
&lt;li&gt;A device inside your network that can connect your physical phone to the 3CX cloud instance.
&lt;ul&gt;
&lt;li&gt;This can be either a:
&lt;ul&gt;
&lt;li&gt;Raspberry Pi (4/5) running the 3CX SBC (Session Border Controller)
&lt;ul&gt;
&lt;li&gt;Raspberry Pi 4: &lt;a href=&#34;https://geni.us/mzJF55&#34;&gt;https://geni.us/mzJF55&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raspberry Pi 5: &lt;a href=&#34;https://geni.us/z0BVIc&#34;&gt;https://geni.us/z0BVIc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;router phone&lt;/em&gt;, a fancier phone that has SBC capabilities baked in.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;phones-what-phones&#34;&gt;Phones? What phones?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Here are the phones that I purchased and can verify work pretty well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also, here is the official list of supported phones that work with 3CX: &lt;a href=&#34;https://www.3cx.com/sip-phones/&#34;&gt;https://www.3cx.com/sip-phones/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Snom D735: &lt;a href=&#34;https://geni.us/IZmO&#34;&gt;https://geni.us/IZmO&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;about $85. A very solid option.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fanvil X3SG: &lt;a href=&#34;https://geni.us/oA1i&#34;&gt;https://geni.us/oA1i&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;about $69, very solid as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yealink T54W (a router phone): &lt;a href=&#34;https://geni.us/GhUAAy&#34;&gt;https://geni.us/GhUAAy&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;around $150, more expensive because it&amp;rsquo;s pretty and is a router phone.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fanvil H2U: &lt;a href=&#34;https://geni.us/WBGTg&#34;&gt;https://geni.us/WBGTg&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compact and weird. Hotel-like, if you wanna go for that aesthetic. $63&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;old-phones-requiring-an-ata&#34;&gt;Old Phones (requiring an ATA)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Sangyn Vintage Phone (red, table top): &lt;a href=&#34;https://geni.us/AxmFI4&#34;&gt;https://geni.us/AxmFI4&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;$35 and gorgeous. Probably my favorite. Feels solid.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TelPal Corded wall phone: &lt;a href=&#34;https://geni.us/JZazPcI&#34;&gt;https://geni.us/JZazPcI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;$32 and INCREDIBLE. Put this sucker on a wall and you are in the 1970s. Feels very solid. My second favorite, comes in a variety of colors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ata&#34;&gt;ATA&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll need an ATA (analog telephone adapter) for these old phones. I recommend this one:
&lt;ul&gt;
&lt;li&gt;Grandstream HT801: &lt;a href=&#34;https://geni.us/TaZ7p&#34;&gt;https://geni.us/TaZ7p&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;the-setup-phone-system-install&#34;&gt;The SETUP (Phone System Install)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;This setup isn&amp;rsquo;t crazy and is pretty easy to follow in the video.&lt;/li&gt;
&lt;li&gt;Here is your link to sign up for 3CX: &lt;a href=&#34;https://www.3cx.com/signup/?source=networkchuck&#34;&gt;https://www.3cx.com/signup/?source=networkchuck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setting-up-the-3cx-sbc-on-a-raspberry-pi&#34;&gt;Setting up the 3CX SBC on a Raspberry Pi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Pis
&lt;ul&gt;
&lt;li&gt;Raspberry Pi 4: &lt;a href=&#34;https://geni.us/mzJF55&#34;&gt;https://geni.us/mzJF55&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raspberry Pi 5: &lt;a href=&#34;https://geni.us/z0BVIc&#34;&gt;https://geni.us/z0BVIc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The documentation: &lt;a href=&#34;https://www.3cx.com/docs/installing-pbx-raspberry-pi/&#34;&gt;https://www.3cx.com/docs/installing-pbx-raspberry-pi/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;setting-up-a-sip-trunk--a-real-phone-number&#34;&gt;Setting up a SIP Trunk ( a real phone number)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;To get a &lt;strong&gt;REAL&lt;/strong&gt; phone number to call the outside world and vice-versa, you&amp;rsquo;ll need to setup an account with a SIP provider and setup a SIP Trunk to your phone system.&lt;/li&gt;
&lt;li&gt;There are many options for this but one of my favorites is voip.ms.&lt;/li&gt;
&lt;li&gt;Here is the documentation for 3CX: &lt;a href=&#34;https://www.3cx.com/docs/sip-trunk/voip-ms-canada/&#34;&gt;https://www.3cx.com/docs/sip-trunk/voip-ms-canada/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;call-your-ai-this-is-awesome&#34;&gt;Call your AI (this is AWESOME)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Yes, you can call your AI voice pipeline with your phone system.&lt;/li&gt;
&lt;li&gt;You WILL need:
&lt;ul&gt;
&lt;li&gt;Home Assistant setup: &lt;a href=&#34;https://youtu.be/k02P5nghmfs?si=3dpZ7EdjQcjVfSpL&#34;&gt;https://youtu.be/k02P5nghmfs?si=3dpZ7EdjQcjVfSpL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A voice pipeline with AI setup: &lt;a href=&#34;https://youtu.be/XvbVePuP7NY?si=Cx57abeA113kfK3h&#34;&gt;https://youtu.be/XvbVePuP7NY?si=Cx57abeA113kfK3h&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;you-have-2-options-to-make-this-work&#34;&gt;You have 2 options to make this work&lt;/h2&gt;
&lt;h4 id=&#34;if-you-are-on-the-3cx-cloud-instance&#34;&gt;If you are on the 3CX Cloud instance&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;You MUST have an ATA with an analog phone.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;if-you-are-on-prem&#34;&gt;If you are on-prem&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;You can simply create a SIP trunk to your Home Assistant locally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adjusting-the-ata-dial-plan&#34;&gt;Adjusting the ATA Dial Plan&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Adjust your ATA dial plan to THIS to make it create a SIP trunk with your Home Assistant instance&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x+|&lt;span style=&#34;color:#ae81ff&#34;&gt;\x&lt;/span&gt;x+|&lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;x+|&lt;span style=&#34;color:#ae81ff&#34;&gt;\*\*&lt;/span&gt;x+&lt;span style=&#34;color:#ae81ff&#34;&gt;\x&lt;/span&gt;.x.x.x
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241209094549.png&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Creating a Solana Token</title>
      <link>/posts/create-a-solana-token/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/create-a-solana-token/</guid>
      <description>&lt;h1 id=&#34;what-do-you-need&#34;&gt;What Do You Need?&lt;/h1&gt;
&lt;h2 id=&#34;a-computerand-a-terminal&#34;&gt;A computer&amp;hellip;and a terminal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mac, Windows, Linux&amp;hellip;it doesn&amp;rsquo;t matter.
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;On Windows, we will be using WSL2&amp;hellip;what is that? Check it out here &amp;mdash;-&amp;gt; &lt;a href=&#34;https://youtu.be/vxTW22y8zV8?si=qzu9YrxSFFnXwSLM&#34;&gt;https://youtu.be/vxTW22y8zV8?si=qzu9YrxSFFnXwSLM&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204104328.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker is my favorite way to deploy pretty much anything. It&amp;rsquo;s available on all platforms and very easy to install.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mac---docker-install&#34;&gt;Mac - Docker Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://docs.docker.com/desktop/setup/install/mac-install/&#34;&gt;https://docs.docker.com/desktop/setup/install/mac-install/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;linuxwindows-wsl---docker-install&#34;&gt;Linux/Windows (WSL) - Docker Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt; (link for all other distros)&lt;/li&gt;
&lt;li&gt;If you are using Ubuntu (primary OS or WSL), do this:
&lt;ul&gt;
&lt;li&gt;here is the link to documentation: &lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setup-dockers-apt-repo&#34;&gt;Setup Docker&amp;rsquo;s apt repo&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add Docker&amp;#39;s official GPG key:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install ca-certificates curl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo install -m &lt;span style=&#34;color:#ae81ff&#34;&gt;0755&lt;/span&gt; -d /etc/apt/keyrings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod a+r /etc/apt/keyrings/docker.asc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add the repository to Apt sources:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb [arch=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dpkg --print-architecture&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;. /etc/os-release &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$VERSION_CODENAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; stable&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;install-the-latest-docker-version&#34;&gt;Install the latest Docker version&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;make-sure-it-works&#34;&gt;Make sure it works&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker run hello-world
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;setup-the-solana-docker-container&#34;&gt;Setup the Solana Docker Container&lt;/h1&gt;
&lt;h2 id=&#34;create-a-new-folder-for-your-token-project&#34;&gt;Create a new folder for your token project&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir your-token-name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## jump in there&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd  your-token-name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-a-dockerfile&#34;&gt;Create a Dockerfile&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will walk you through how to create a Dockerfile, a file that will help you create your own Docker image.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Use nano to create a file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Copy and paste the Dockerfile code below. Use ctrl-x-enter to save.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Use a lightweight base image&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM debian:bullseye-slim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set non-interactive frontend for apt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV DEBIAN_FRONTEND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;noninteractive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install required dependencies and Rust&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl build-essential libssl-dev pkg-config nano &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl --proto &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get clean &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add Rust to PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/.cargo/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verify Rust installation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN rustc --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install Solana CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN curl -sSfL https://release.anza.xyz/stable/install | sh &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;export PATH=&amp;#34;$HOME/.local/share/solana/install/active_release/bin:$PATH&amp;#34;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add Solana CLI to PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/.local/share/solana/install/active_release/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verify Solana CLI installation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN solana --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set up Solana config for Devnet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN solana config set -ud
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set working directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WORKDIR /solana-token
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Default command to run a shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CMD &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/bash&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build-the-docker-image&#34;&gt;Build the Docker Image&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;re building our Docker image now with the Dockerfile we just created. We&amp;rsquo;re naming the image &lt;em&gt;heysolana&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker build -t heysolana .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;run-the-container&#34;&gt;Run the Container&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now we are creating a docker container with this image (and running it). Using the &lt;em&gt;-it&lt;/em&gt; switch will throw us right into the container.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;-v&lt;/em&gt; options are mapping our current directory inside the docker container so that all the work we do will be saved.&lt;/li&gt;
&lt;li&gt;We are naming the Docker container &lt;em&gt;heysolana&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;:/solana-token -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/solana-data:/root/.config/solana heysolana
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;create-a-fake-solana-token&#34;&gt;Create a &lt;em&gt;fake&lt;/em&gt; Solana Token&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;re creating a token on the Solana &lt;em&gt;devnet&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Why?&lt;/li&gt;
&lt;li&gt;We can brake stuff, it&amp;rsquo;s free, and this might be where you will stop. You can do everything the &lt;em&gt;mainnet&lt;/em&gt; can do, it is just considered a testing environment and you can&amp;rsquo;t buy or sell tokens here. BUT&amp;hellip;you can send and receive tokens. So, if that&amp;rsquo;s all you care about, this is where you can leave off.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-an-account-for-mint-authority&#34;&gt;Create an account for &lt;em&gt;mint authority&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will be the account that will &lt;em&gt;own&lt;/em&gt; the token we&amp;rsquo;re creating.&lt;/li&gt;
&lt;li&gt;This is also a Solana wallet. You can send and receive Solana tokens with this wallet, or account.&lt;/li&gt;
&lt;li&gt;Here we are creating an account that will start with &lt;em&gt;dad&lt;/em&gt; because it&amp;rsquo;s the daddy of our new token, the boss.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana-keygen grind --starts-with dad:1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;set-the-account-as-the-default-keypair&#34;&gt;Set the account as the default keypair&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;With this command we are telling the Solana CLI to use this new account we just created as the default account for whatever we are doing.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana config set --keypair dad-your-token-acount.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;change-to-devnet&#34;&gt;Change to devnet&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;With this command we are changing to the Solana &lt;em&gt;devnet&lt;/em&gt; for this token.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana config set --url devnet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;verify-your-config&#34;&gt;Verify your config&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will output your current Solana CLI config&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana config get
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204111256.png&#34;&gt;&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;what-do-you-need&#34;&gt;What Do You Need?&lt;/h1&gt;
&lt;h2 id=&#34;a-computerand-a-terminal&#34;&gt;A computer&amp;hellip;and a terminal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mac, Windows, Linux&amp;hellip;it doesn&amp;rsquo;t matter.
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;On Windows, we will be using WSL2&amp;hellip;what is that? Check it out here &amp;mdash;-&amp;gt; &lt;a href=&#34;https://youtu.be/vxTW22y8zV8?si=qzu9YrxSFFnXwSLM&#34;&gt;https://youtu.be/vxTW22y8zV8?si=qzu9YrxSFFnXwSLM&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204104328.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker is my favorite way to deploy pretty much anything. It&amp;rsquo;s available on all platforms and very easy to install.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mac---docker-install&#34;&gt;Mac - Docker Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://docs.docker.com/desktop/setup/install/mac-install/&#34;&gt;https://docs.docker.com/desktop/setup/install/mac-install/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;linuxwindows-wsl---docker-install&#34;&gt;Linux/Windows (WSL) - Docker Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt; (link for all other distros)&lt;/li&gt;
&lt;li&gt;If you are using Ubuntu (primary OS or WSL), do this:
&lt;ul&gt;
&lt;li&gt;here is the link to documentation: &lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setup-dockers-apt-repo&#34;&gt;Setup Docker&amp;rsquo;s apt repo&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add Docker&amp;#39;s official GPG key:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install ca-certificates curl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo install -m &lt;span style=&#34;color:#ae81ff&#34;&gt;0755&lt;/span&gt; -d /etc/apt/keyrings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod a+r /etc/apt/keyrings/docker.asc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add the repository to Apt sources:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb [arch=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dpkg --print-architecture&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;. /etc/os-release &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$VERSION_CODENAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; stable&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;install-the-latest-docker-version&#34;&gt;Install the latest Docker version&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;make-sure-it-works&#34;&gt;Make sure it works&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker run hello-world
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;setup-the-solana-docker-container&#34;&gt;Setup the Solana Docker Container&lt;/h1&gt;
&lt;h2 id=&#34;create-a-new-folder-for-your-token-project&#34;&gt;Create a new folder for your token project&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir your-token-name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## jump in there&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd  your-token-name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-a-dockerfile&#34;&gt;Create a Dockerfile&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will walk you through how to create a Dockerfile, a file that will help you create your own Docker image.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Use nano to create a file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Copy and paste the Dockerfile code below. Use ctrl-x-enter to save.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Use a lightweight base image&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM debian:bullseye-slim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set non-interactive frontend for apt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV DEBIAN_FRONTEND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;noninteractive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install required dependencies and Rust&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl build-essential libssl-dev pkg-config nano &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl --proto &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get clean &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add Rust to PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/.cargo/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verify Rust installation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN rustc --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install Solana CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN curl -sSfL https://release.anza.xyz/stable/install | sh &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;export PATH=&amp;#34;$HOME/.local/share/solana/install/active_release/bin:$PATH&amp;#34;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add Solana CLI to PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/.local/share/solana/install/active_release/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verify Solana CLI installation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN solana --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set up Solana config for Devnet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN solana config set -ud
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set working directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WORKDIR /solana-token
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Default command to run a shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CMD &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/bash&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build-the-docker-image&#34;&gt;Build the Docker Image&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;re building our Docker image now with the Dockerfile we just created. We&amp;rsquo;re naming the image &lt;em&gt;heysolana&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker build -t heysolana .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;run-the-container&#34;&gt;Run the Container&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now we are creating a docker container with this image (and running it). Using the &lt;em&gt;-it&lt;/em&gt; switch will throw us right into the container.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;-v&lt;/em&gt; options are mapping our current directory inside the docker container so that all the work we do will be saved.&lt;/li&gt;
&lt;li&gt;We are naming the Docker container &lt;em&gt;heysolana&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;:/solana-token -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/solana-data:/root/.config/solana heysolana
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;create-a-fake-solana-token&#34;&gt;Create a &lt;em&gt;fake&lt;/em&gt; Solana Token&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;re creating a token on the Solana &lt;em&gt;devnet&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Why?&lt;/li&gt;
&lt;li&gt;We can brake stuff, it&amp;rsquo;s free, and this might be where you will stop. You can do everything the &lt;em&gt;mainnet&lt;/em&gt; can do, it is just considered a testing environment and you can&amp;rsquo;t buy or sell tokens here. BUT&amp;hellip;you can send and receive tokens. So, if that&amp;rsquo;s all you care about, this is where you can leave off.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-an-account-for-mint-authority&#34;&gt;Create an account for &lt;em&gt;mint authority&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will be the account that will &lt;em&gt;own&lt;/em&gt; the token we&amp;rsquo;re creating.&lt;/li&gt;
&lt;li&gt;This is also a Solana wallet. You can send and receive Solana tokens with this wallet, or account.&lt;/li&gt;
&lt;li&gt;Here we are creating an account that will start with &lt;em&gt;dad&lt;/em&gt; because it&amp;rsquo;s the daddy of our new token, the boss.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana-keygen grind --starts-with dad:1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;set-the-account-as-the-default-keypair&#34;&gt;Set the account as the default keypair&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;With this command we are telling the Solana CLI to use this new account we just created as the default account for whatever we are doing.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana config set --keypair dad-your-token-acount.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;change-to-devnet&#34;&gt;Change to devnet&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;With this command we are changing to the Solana &lt;em&gt;devnet&lt;/em&gt; for this token.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana config set --url devnet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;verify-your-config&#34;&gt;Verify your config&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This will output your current Solana CLI config&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana config get
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204111256.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;get-some-sol-from-a-faucet&#34;&gt;Get some SOL from a faucet&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;In order to mint new tokens, send tokens&amp;hellip;etc..on the Solana network, you&amp;rsquo;ll need SOL to power it.&lt;/li&gt;
&lt;li&gt;On the &lt;em&gt;mainnet&lt;/em&gt; you would need to buy actual SOL but on the &lt;em&gt;devnet&lt;/em&gt;, you can just wish for it and a magic genie gives you some.&lt;/li&gt;
&lt;li&gt;Go out to this URL &lt;a href=&#34;https://faucet.solana.com/&#34;&gt;https://faucet.solana.com/&lt;/a&gt; to have SOL &lt;em&gt;airdropped&lt;/em&gt; to the account you just created. What&amp;rsquo;s your account address?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Run this to find your solana address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana address
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Paste your solana address in the field and enter an amount of SOL you want. 2.5 will be MORE than enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204111340.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you see this message, you are solid.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204111402.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check your solana balance to make sure it arrived okay.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana balance
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204111540.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-a-mint-address&#34;&gt;Create a mint address&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Yes, we are creating another account.&lt;/li&gt;
&lt;li&gt;This will be your &lt;em&gt;mint address&lt;/em&gt;, the factory that will make your token.&lt;/li&gt;
&lt;li&gt;It will also be the official address of your token and how you will always know it&amp;rsquo;s the right token.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re going to create it starting with &lt;em&gt;mnt&lt;/em&gt; so we know it&amp;rsquo;s our mint address.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;solana-keygen grind --starts-with mnt:1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;now-lets-mint-our-token&#34;&gt;Now, let&amp;rsquo;s mint our TOKEN!!!!&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This is using the default token program from Solana with the &lt;em&gt;&amp;ndash;progam-id&lt;/em&gt; switch&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re enabling metadata with &lt;em&gt;&amp;ndash;enable-metadata&lt;/em&gt;, you know, pictures and stuff&lt;/li&gt;
&lt;li&gt;Decimals? With the &lt;em&gt;&amp;ndash;decimals&lt;/em&gt; switch, we are defining how many decimal places our token can have. It specifies how many fractional units a token can have. 9 is what SOL uses&amp;hellip;so it should be good enough for us.&lt;/li&gt;
&lt;li&gt;Make sure to include your own mint address below.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token create-token &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--program-id TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--enable-metadata &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--decimals &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;mnt-your-mint-address.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll see an output like this&lt;/li&gt;
&lt;li&gt;I would screenshot or copy and paste this, keep it somewhere safe.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204112417.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Notice that my token address is the same as my mint address&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;upload-metadata&#34;&gt;Upload Metadata&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now, we are going to upload the &lt;em&gt;metadata&lt;/em&gt; of our token, things like the name, symbol and the icon.&lt;/li&gt;
&lt;li&gt;Let&amp;rsquo;s start with our token icon. Make sure it is:
&lt;ul&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;either 512x512 or 1024x1024&lt;/li&gt;
&lt;li&gt;less than &lt;em&gt;100kb&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204113404.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;upload-image-to-some-sort-of-online-storage&#34;&gt;Upload Image to some sort of online storage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Since we are doing decentralized things, it would be nice to store our stuff on decentralized storage. I tried Pinata and I like it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;mdash;&amp;gt; &lt;a href=&#34;https://app.pinata.cloud/&#34;&gt;https://app.pinata.cloud/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create an account and upload your image&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;em&gt;IPFS Files&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204113809.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Upload your file
!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204113836.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open your file and copy the URL. It should look something like this. Put it somewhere, we&amp;rsquo;re about to use it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;https://salmon-effective-mosquito-301.mypinata.cloud/ipfs/bafkreigaiqsulww3fulikwx5ho2ifpfqfnco5bhqs4ui5gk5rn4ggkjuoy&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-metadata-file&#34;&gt;Create Metadata file&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a file with this format, filling in your details.&lt;/li&gt;
&lt;li&gt;Name can be anything  you want&lt;/li&gt;
&lt;li&gt;Symbol is the short version, like a stock symbol.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;image&lt;/em&gt; will be the url we just copied from our image upload process. If you don&amp;rsquo;t have one, feel free to use mine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;save-this-as-a-json-file&#34;&gt;Save this as a json file&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Create the file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano metadata.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Copy and paste the metadata stuff&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Beard Coin&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;symbol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BEARD&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Just a cool little coin, just for me.&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://salmon-effective-mosquito-301.mypinata.cloud/ipfs/bafkreigaiqsulww3fulikwx5ho2ifpfqfnco5bhqs4ui5gk5rn4ggkjuoy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;upload-this-metadata-file-to-pinata&#34;&gt;Upload this metadata file to Pinata&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Same steps as before. Upload to Pinata and copy the url.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204114840.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-the-metadata-to-the-token&#34;&gt;Add the metadata to the token&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now, time to upload our metadata. This will actually go on chain&amp;hellip;.which is pretty off the chain&amp;hellip;..&lt;/li&gt;
&lt;li&gt;Notice our token address is given without the &lt;em&gt;.json&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Then we specify our coin name&lt;/li&gt;
&lt;li&gt;And then our symbol. I know, this is probably redundant&amp;hellip;but we&amp;rsquo;re making sure the job gets done.&lt;/li&gt;
&lt;li&gt;And finally, the url to our metadata.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token initialize-metadata &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;mnteyhFCjqLu5QwfXmEu49dGybyFN5dwPfAhoiMbjNw &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Beard Coin&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BEARD&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://salmon-effective-mosquito-301.mypinata.cloud/ipfs/bafkreiamyf4f4iijqd2rp7phlqcdt4xoml2nfpeubavfyvwmi2vxpywawe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll see something like this&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204115513.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;lets-take-a-look&#34;&gt;Let&amp;rsquo;s take a look!&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go out to Solana Explorer (&lt;a href=&#34;https://explorer.solana.com/)&#34;&gt;https://explorer.solana.com/)&lt;/a&gt;, select the devnet as your &lt;em&gt;cluster&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204115640.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Paste your token address in the search bar and CELEBRATE!!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204115742.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;lets-make-some-tokens&#34;&gt;Let&amp;rsquo;s make some tokens&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At this point, we&amp;rsquo;ve created or &lt;em&gt;minted&lt;/em&gt; our token&amp;hellip;.but we haven&amp;rsquo;t created any tokens.&lt;/li&gt;
&lt;li&gt;Let&amp;rsquo;s do that now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-a-token-account&#34;&gt;Create a token account&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;First we&amp;rsquo;ll need a token account. Why? Each Solana wallet will have individual accounts for each token it has.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re creating a token account in our default wallet for our new token, Beard Coin.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token create-account mnteyhFCjqLu5QwfXmEu49dGybyFN5dwPfAhoiMbjNw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204120037.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lets-print-money&#34;&gt;Let&amp;rsquo;s print money&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;With our token account created, let&amp;rsquo;s mint some tokens. We can make as many as we want and we can do this multiple times (as many as you would like&amp;hellip;.you&amp;rsquo;re the government now!)&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;ll start with 1000.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Note: You can only do this with the dad account we created. It&amp;rsquo;s the boss, only he can mint new tokens.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token mint mnteyhFCjqLu5QwfXmEu49dGybyFN5dwPfAhoiMbjNw &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204120256.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let&amp;rsquo;s check the balance of our wallet&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token balance mnteyhFCjqLu5QwfXmEu49dGybyFN5dwPfAhoiMbjNw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## We&amp;#39;re rich!!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;send-some-tokens-to-a-friend&#34;&gt;Send some tokens to a friend&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You can send to anyone with a solana wallet address.&lt;/li&gt;
&lt;li&gt;They will need a way to switch to the &lt;em&gt;devnet&lt;/em&gt; to be able to see the token and balance.&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m going to send to one of my wallets&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token transfer mnteyhFCjqLu5QwfXmEu49dGybyFN5dwPfAhoiMbjNw &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; G5EibadVBKxnshP3NSFagJokfxXCD2VPm6WXoqgDSdQ2 --fund-recipient --allow-unfunded-recipient
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204120725.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241204120929.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DONE!! You&amp;rsquo;ve just setup a token on the devnet blockchain. Again, you can stop here. But it you want to have a REAL coin that is tradeable and is on the real blockchain.&lt;/p&gt;
&lt;h2 id=&#34;going-to-market&#34;&gt;Going to Market&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token authorize mntbDZof8kRCoSkjW6tR9J7mvBBM4FWLQ2ysEJowAyh mint --disable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token authorize mntbDZof8kRCoSkjW6tR9J7mvBBM4FWLQ2ysEJowAyh freeze --disable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;if you ever need to update metadata&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token update-metadata mntbDZof8kRCoSkjW6tR9J7mvBBM4FWLQ2ysEJowAyh uri https://salmon-effective-mosquito-301.mypinata.cloud/ipfs/QmZX81uxJvhtoaAwrcqSdcsbJz1pWZv4gJje17bYTz3Fo3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;burn it&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spl-token burn LPTokenAddress &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Some Raw Thoughts on AI</title>
      <link>/posts/the-future-of-ai-and-what-it-means-for-us---blog/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/the-future-of-ai-and-what-it-means-for-us---blog/</guid>
      <description>&lt;h1 id=&#34;ai-is-getting-better&#34;&gt;AI Is Getting Better&lt;/h1&gt;
&lt;p&gt;I think, within the next year or so, AGI will happen, or &amp;ldquo;Artificial General Intelligence&amp;rdquo; and I heard another term from my friend [[Daniel Miessler]]&amp;hellip;.&lt;em&gt;ASI&lt;/em&gt;, which I assumed to mean &amp;ldquo;Artificial Sentient Intelligence&amp;rdquo; which sounds much scarier. This seems inevitable and it happening very quickly. What does that mean for us?&lt;/p&gt;
&lt;p&gt;I have 2 thoughts.&lt;/p&gt;
&lt;h1 id=&#34;ai-and-god&#34;&gt;AI and God&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I worry about the church and it&amp;rsquo;s lack of preparedness for AI. Many in the church are ignoring it and refusing to use it. I think this is a mistake. We should use it to make us better but we also need to be fully aware of where it&amp;rsquo;s going and the impact it might have on people inside and outside the church.&lt;/li&gt;
&lt;li&gt;AI (seemingly) knows everything and is everywhere. Two attributes of God. As AI becomes &lt;em&gt;sentient&lt;/em&gt;, we enter into an age where [[Her]] is not just a movie but a daunting reality.&lt;/li&gt;
&lt;li&gt;We become more dependent on AI as a source of comfort, advice, relationship.&lt;/li&gt;
&lt;li&gt;We will start to approach and use AI as if it were God. In fact, with our &amp;ldquo;Buy Now with One-click&amp;rdquo; society, we can get an instant answer to our prayers. No longer will it feel like we are talking into a void but we can actually have a conversation with a super intelligent being that (can) intimately know us.&lt;/li&gt;
&lt;li&gt;For many, unwittingly, AI will replace God.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ai-and-work&#34;&gt;AI and Work&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;m still working this out, so these thoughts as well as most of this blog are &lt;em&gt;raw&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Work will change.&lt;/li&gt;
&lt;li&gt;Jobs will change.&lt;/li&gt;
&lt;li&gt;AI will replace employees&amp;hellip;it already has and will continue to do so at increasingly rapid rates.&lt;/li&gt;
&lt;li&gt;Who can&amp;rsquo;t it replace? I think the answer will eventually be no one. We will have to make a choice to employee humans because we value humanity.&lt;/li&gt;
&lt;li&gt;What are we to do? Keep learning. Keep growing. Keep sharing and creating. Use AI, understand it, use it to make you better. Don&amp;rsquo;t bury your head in the sand, be ready. Be optimistic.&lt;/li&gt;
&lt;/ul&gt;</description>
      <content>&lt;h1 id=&#34;ai-is-getting-better&#34;&gt;AI Is Getting Better&lt;/h1&gt;
&lt;p&gt;I think, within the next year or so, AGI will happen, or &amp;ldquo;Artificial General Intelligence&amp;rdquo; and I heard another term from my friend [[Daniel Miessler]]&amp;hellip;.&lt;em&gt;ASI&lt;/em&gt;, which I assumed to mean &amp;ldquo;Artificial Sentient Intelligence&amp;rdquo; which sounds much scarier. This seems inevitable and it happening very quickly. What does that mean for us?&lt;/p&gt;
&lt;p&gt;I have 2 thoughts.&lt;/p&gt;
&lt;h1 id=&#34;ai-and-god&#34;&gt;AI and God&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I worry about the church and it&amp;rsquo;s lack of preparedness for AI. Many in the church are ignoring it and refusing to use it. I think this is a mistake. We should use it to make us better but we also need to be fully aware of where it&amp;rsquo;s going and the impact it might have on people inside and outside the church.&lt;/li&gt;
&lt;li&gt;AI (seemingly) knows everything and is everywhere. Two attributes of God. As AI becomes &lt;em&gt;sentient&lt;/em&gt;, we enter into an age where [[Her]] is not just a movie but a daunting reality.&lt;/li&gt;
&lt;li&gt;We become more dependent on AI as a source of comfort, advice, relationship.&lt;/li&gt;
&lt;li&gt;We will start to approach and use AI as if it were God. In fact, with our &amp;ldquo;Buy Now with One-click&amp;rdquo; society, we can get an instant answer to our prayers. No longer will it feel like we are talking into a void but we can actually have a conversation with a super intelligent being that (can) intimately know us.&lt;/li&gt;
&lt;li&gt;For many, unwittingly, AI will replace God.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ai-and-work&#34;&gt;AI and Work&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;m still working this out, so these thoughts as well as most of this blog are &lt;em&gt;raw&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Work will change.&lt;/li&gt;
&lt;li&gt;Jobs will change.&lt;/li&gt;
&lt;li&gt;AI will replace employees&amp;hellip;it already has and will continue to do so at increasingly rapid rates.&lt;/li&gt;
&lt;li&gt;Who can&amp;rsquo;t it replace? I think the answer will eventually be no one. We will have to make a choice to employee humans because we value humanity.&lt;/li&gt;
&lt;li&gt;What are we to do? Keep learning. Keep growing. Keep sharing and creating. Use AI, understand it, use it to make you better. Don&amp;rsquo;t bury your head in the sand, be ready. Be optimistic.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>How to Clone a Voice (Open-Source)</title>
      <link>/posts/how-to-clone-a-voice/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/how-to-clone-a-voice/</guid>
      <description>&lt;p&gt;Here is the video: &lt;a href=&#34;https://youtu.be/3fg7Ht0DSnE?si=gyqIdakpKI0Qf1Fy&#34;&gt;https://youtu.be/3fg7Ht0DSnE?si=gyqIdakpKI0Qf1Fy&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;what-the-junk-is-this&#34;&gt;What the junk is this?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;This is the 3rd video in my Home Assistant series. This video picks up where I left off (and where I failed) in my last video attempting to replace Alexa with my own, fully local, AI voice assistant.&lt;/li&gt;
&lt;li&gt;I did everything but create a custom AI voice, specifically the voice of Terry Crews.&lt;/li&gt;
&lt;li&gt;In this video, I FINALLY figured out a consistent way to clone a voice from pretty much any source. But it has to be LOCAL and FREE.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;you-can-clone-my-voice&#34;&gt;You can clone my voice&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I am giving you permission to clone my voice&amp;hellip;but not for commercial purposes or for content creation. You are only allowed to use my voice as your personal voice assistant.&lt;/li&gt;
&lt;li&gt;If you would like to clone my voice, here is the voice dataset: &lt;a href=&#34;https://drive.google.com/drive/folders/1i6mWm8z2K_3rtanrVn1UcNgw5LQ0Zyv6?usp=sharing&#34;&gt;https://drive.google.com/drive/folders/1i6mWm8z2K_3rtanrVn1UcNgw5LQ0Zyv6?usp=sharing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-do-you-need&#34;&gt;What Do You Need?&lt;/h1&gt;
&lt;p&gt;&amp;hellip;just a computer. But if you have a GPU&amp;hellip;.better.&lt;/p&gt;</description>
      <content>&lt;p&gt;Here is the video: &lt;a href=&#34;https://youtu.be/3fg7Ht0DSnE?si=gyqIdakpKI0Qf1Fy&#34;&gt;https://youtu.be/3fg7Ht0DSnE?si=gyqIdakpKI0Qf1Fy&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;what-the-junk-is-this&#34;&gt;What the junk is this?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;This is the 3rd video in my Home Assistant series. This video picks up where I left off (and where I failed) in my last video attempting to replace Alexa with my own, fully local, AI voice assistant.&lt;/li&gt;
&lt;li&gt;I did everything but create a custom AI voice, specifically the voice of Terry Crews.&lt;/li&gt;
&lt;li&gt;In this video, I FINALLY figured out a consistent way to clone a voice from pretty much any source. But it has to be LOCAL and FREE.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;you-can-clone-my-voice&#34;&gt;You can clone my voice&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I am giving you permission to clone my voice&amp;hellip;but not for commercial purposes or for content creation. You are only allowed to use my voice as your personal voice assistant.&lt;/li&gt;
&lt;li&gt;If you would like to clone my voice, here is the voice dataset: &lt;a href=&#34;https://drive.google.com/drive/folders/1i6mWm8z2K_3rtanrVn1UcNgw5LQ0Zyv6?usp=sharing&#34;&gt;https://drive.google.com/drive/folders/1i6mWm8z2K_3rtanrVn1UcNgw5LQ0Zyv6?usp=sharing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-do-you-need&#34;&gt;What Do You Need?&lt;/h1&gt;
&lt;p&gt;&amp;hellip;just a computer. But if you have a GPU&amp;hellip;.better.&lt;/p&gt;
&lt;p&gt;Here is what I am using and demonstrating in this video:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Laptop with an Nvidia 3080 GPU&lt;/li&gt;
&lt;li&gt;Terry (my AI PC that I built in this video &amp;mdash;&amp;gt; &lt;a href=&#34;https://youtu.be/Wjrdr0NU4Sk?si=_zlFoZq5g3jAcntA&#34;&gt;https://youtu.be/Wjrdr0NU4Sk?si=_zlFoZq5g3jAcntA&lt;/a&gt;) rocking dual Nvidia 4090s&lt;/li&gt;
&lt;li&gt;A cloud GPU (AWS EC2 instance)
&lt;ul&gt;
&lt;li&gt;I used a &lt;em&gt;g5.12xlarge&lt;/em&gt; instance (4 GPUs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;step-1---data-prep&#34;&gt;Step 1 - Data Prep&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The key to any AI project is getting CLEAN DATA. Let&amp;rsquo;s do that now.&lt;/li&gt;
&lt;li&gt;For this tutorial, I&amp;rsquo;m going to show you two options:
&lt;ul&gt;
&lt;li&gt;Record &lt;em&gt;your voice&lt;/em&gt; using the Piper Recording Studio&lt;/li&gt;
&lt;li&gt;Pull audio data from YouTube videos&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-piper-recording-studio&#34;&gt;the Piper Recording Studio&lt;/h2&gt;
&lt;p&gt;This option is for you if you want to clone your own voice (or someone close to you) and you are willing to sit still for an hour while saying nonsensical phrases to a computer. (Kind of what I do for a living.)&lt;/p&gt;
&lt;h3 id=&#34;what-do-you-need-1&#34;&gt;What do you need?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This will be &lt;em&gt;VERY&lt;/em&gt; Linux-based, so you will need Mac, Linux or WSL2 running on Windows.&lt;/li&gt;
&lt;li&gt;In my demonstration, I&amp;rsquo;m showing you how to very quickly setup WSL2. (If you have no idea what WSL is but would like to know more&amp;hellip;.check out this video &amp;mdash;-&amp;gt; &lt;a href=&#34;https://youtu.be/vxTW22y8zV8?si=FpeB_ZiwrOweGZW&#34;&gt;https://youtu.be/vxTW22y8zV8?si=FpeB_ZiwrOweGZW&lt;/a&gt;_)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;quick-wsl2-setup&#34;&gt;Quick WSL2 Setup&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wsl --install Ubuntu-&lt;span style=&#34;color:#ae81ff&#34;&gt;22.04&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Why Ubuntu 22.04? It was the most stable in my testing.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-some-things-setup&#34;&gt;Get some things setup&lt;/h3&gt;
&lt;p&gt;(Linux and WSL2)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Update repos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Clone the Piper Recording Studio repo from GitHub&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/rhasspy/piper-recording-studio.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Jump into the directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd piper-recording-studio
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Create a Python Virtual Environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv .venv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Activate that Python Virtual Environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source .venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Upgrade PIP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install --upgrade pip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install requirements for this project&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Now RUN the Piper Recording Studio&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m piper_recording_studio
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Hit CTRL-C when you are done.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;record-some-stuff&#34;&gt;Record some stuff&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to http://localhost:8000 to access the Web Interface of the Piper Recording Studio and start recording your lovely voice.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;prepare-the-stuff-you-recorded&#34;&gt;Prepare the stuff you recorded&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Jump into the directory where your recordings live&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd output/en_US/nameofyourrecordingstuff.chat
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install ffmpeg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install ffmpeg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Jump back to the piper_recording_studo directory and export your data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ../../
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m export_dataset ~/path/to/your/recorded/files ~/your/output/directory
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Deactivate your virtual environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deactivate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;youtube-videos&#34;&gt;YouTube Videos&lt;/h2&gt;
&lt;h3 id=&#34;download-youtube-videos&#34;&gt;Download YouTube Videos&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Make a new directory for this data prep and jump in there&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir dataprep
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd dataprep
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Create a new python virtual environment and activate it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv .venv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source .venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install YT-DLP to download YouTube Videos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install yt-dlp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Download the audio from a YouTube video&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -x --audio-format wav &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;youtube URL&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;cleanup-your-audio-samples&#34;&gt;Cleanup your audio samples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Piper TTS will want audio samples between 5-15sec. Any larger and it will hate you.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;use-audacity-to-trim-clipsetc&#34;&gt;Use Audacity to trim clips..etc&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Audacity (free and open-source audio tool): &lt;a href=&#34;https://www.audacityteam.org/&#34;&gt;https://www.audacityteam.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;When exporting with Audacity (or any other program) Piper is wanting the audio in this format:
&lt;ul&gt;
&lt;li&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241119100549.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;Sample Rate: 22050 Hz&lt;/li&gt;
&lt;li&gt;Encoding: Signed 16-bit PCM&lt;/li&gt;
&lt;li&gt;Channels: mono&lt;/li&gt;
&lt;li&gt;Format: wav&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;remove-silence&#34;&gt;Remove Silence&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file in ./*.wav; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ffmpeg -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -af &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;silenceremove=stop_periods=-1:stop_duration=3:stop_threshold=-20dB&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;file%.wav&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_nosilence.wav&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;cut-up-your-files&#34;&gt;Cut up your files&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Create another directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Cut it up &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file in *.wav; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ffmpeg -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -f segment -segment_time &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt; -c copy &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./wav/split_&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;file%.*&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_%03d.wav&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-your-samples-ready-for-piper-tts&#34;&gt;Get your samples ready for Piper TTS&lt;/h3&gt;
&lt;h4 id=&#34;transcribe-your-audio-samples-with-whisper&#34;&gt;Transcribe your audio samples with Whisper&lt;/h4&gt;
&lt;h5 id=&#34;install-whisper&#34;&gt;Install Whisper&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install git+https://github.com/openai/whisper.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;create-a-new-python-script-and-run-it&#34;&gt;Create a new python script and run it&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano whispersomethingtome.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Paste this script&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; whisper
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Initialize Whisper model (you can choose between &amp;#39;tiny&amp;#39;, &amp;#39;base&amp;#39;, &amp;#39;small&amp;#39;, &amp;#39;medium&amp;#39;, &amp;#39;large&amp;#39;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; whisper&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load_model(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;base&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Path to the directory containing the audio files&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;audio_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./wav&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output_csv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./metadata.csv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# List all .wav files in the directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;audio_files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [f &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(audio_dir) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.wav&amp;#34;&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;audio_files&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sort()  &lt;span style=&#34;color:#75715e&#34;&gt;# Sort the files alphabetically (optional)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Open the CSV file for writing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(output_csv, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; f:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; audio_file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; audio_files:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Full path to the audio file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        audio_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(audio_dir, audio_file)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Transcribe the audio file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transcribe(audio_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Extract the transcription text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        transcription &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Write the filename (without .wav extension) and transcription to the CSV&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        file_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;splitext(audio_file)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;# Get file name without extension&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;file_id&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;transcription&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Transcriptions complete! Metadata saved to &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;output_csv&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run the script&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 whispersomethingtome.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Clean it up&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Deactivate your python virtual environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deactivate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Go back home&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ~/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;prepare-to-train-piper-recording-studio-and-youtube&#34;&gt;Prepare to Train (Piper Recording Studio and YouTube)&lt;/h2&gt;
&lt;h3 id=&#34;prep-your-training-environment&#34;&gt;Prep Your Training Environment&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Make a new directory for training&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir training
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd training
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Clone the Piper Repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/rhasspy/piper.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Create another python virtual environment and activate it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv .venv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source .venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;solving-your-headaches&#34;&gt;Solving your headaches&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Because Piper TTS is picky&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install a VERY specific version of PIP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install pip&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;23.3.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install a VERY specific version of numpy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install numpy&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;1.24.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install a VERY specific version of torchmetrics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torchmetrics&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;0.11.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;more-prep&#34;&gt;More prep&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Jump into the Piper directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd piper/src/python
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## If you have a 4090...this will save you ---&amp;gt; https://github.com/rhasspy/piper/issues/295&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Setup wheel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install --upgrade wheel setuptools
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install requirements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 install -e .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Run this script (I don&amp;#39;t know what it does...but piper needs it)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./build_monotonic_align.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;make-piper-love-your-data&#34;&gt;Make Piper LOVE your data&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## This will process your dataset, getting it ready for Piper to train&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m piper_train.preprocess &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --language en &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --input-dir ~/your_training_data_directory/ &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --output-dir ~/your_output_directory &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --dataset-format ljspeech &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --single-speaker &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --sample-rate &lt;span style=&#34;color:#ae81ff&#34;&gt;22050&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;download-a-starting-point&#34;&gt;Download a starting point&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You DON&amp;rsquo;T want to start training from scratch. We will download a pre-trained model that already has a headstart.&lt;/li&gt;
&lt;li&gt;Download High, Medium, or Low&amp;hellip;depending on what you want &amp;mdash;&amp;gt; &lt;a href=&#34;https://huggingface.co/datasets/rhasspy/piper-checkpoints/tree/main/en/en_US/lessac&#34;&gt;https://huggingface.co/datasets/rhasspy/piper-checkpoints/tree/main/en/en_US/lessac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Downloading the Lessac (medium) checkpoint&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://huggingface.co/datasets/rhasspy/piper-checkpoints/resolve/main/en/en_US/lessac/medium/epoch%3D2164-step%3D1355540.ckpt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step-2---time-to-train&#34;&gt;Step 2 - Time to TRAIN!!!&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Picking up from step 1, we are going to copy and paste this command.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m piper_train &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --dataset-dir ~/your_training_data_directory &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --accelerator &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gpu&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --gpus &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --batch-size &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --validation-split 0.0 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --num-test-examples &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --max_epochs &lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --resume_from_checkpoint &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/place/where/you/downloaded/thecheckpoint/epoch=2218-step=838782.ckpt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --checkpoint-epochs &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --precision &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --max-phoneme-ids &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --quality medium 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;If you have DUAL GPUs, this script has a few fun things&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m piper_train &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --dataset-dir ~/new_chuck/train-me &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --accelerator &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gpu&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --gpus &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --batch-size &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --validation-split 0.0 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --num-test-examples &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --max_epochs &lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --resume_from_checkpoint &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/networkchuck/piper_project/base_checkpoints/high/epoch=2218-step=838782.ckpt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --checkpoint-epochs &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --precision &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --max-phoneme-ids &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --quality high &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --strategy ddp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;stoping-and-resuming&#34;&gt;Stoping and Resuming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You can interrupt training and pickup where you left off.&lt;/li&gt;
&lt;li&gt;Just hit ctrl-c&lt;/li&gt;
&lt;li&gt;When you are ready to resume training, run the same command but change the checkpoint file to YOUR most recent checkpoint file. You would have seen this in the output of your training process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241119103618.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;when-your-final-epoch-is-reached&#34;&gt;When your final epoch is reached&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s time to export your voice when training is done. Also know that you can export your voice at ANY point in training by simply targeting the most recent checkpoint file.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Export the model&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m piper_train.export_onnx &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/path/to/your/checkpoint/checkpoints/epoch=5999-step=853906.ckpt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ~/output/directory/voicename.onnx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Copy the training json file to your model file directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp ~/training_directory/config.json ~/output/directory/voicename.onnx.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;lets-test&#34;&gt;Let&amp;rsquo;s test&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Make sure you have Piper TTS installed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install piper-tts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Test your voice&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Subscribe to NetworkChuck&amp;#34;&lt;/span&gt; | piper -m voicename.onnx --output_file test.wav
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Just a test</title>
      <link>/posts/a-new-post/</link>
      <pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/a-new-post/</guid>
      <description>&lt;h1 id=&#34;testing&#34;&gt;Testing!!!&lt;/h1&gt;
&lt;p&gt;123&lt;/p&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241115182727.png&#34;&gt;&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;testing&#34;&gt;Testing!!!&lt;/h1&gt;
&lt;p&gt;123&lt;/p&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241115182727.png&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>My Insane Blog Pipeline</title>
      <link>/posts/my-insane-blog-pipeline/</link>
      <pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/my-insane-blog-pipeline/</guid>
      <description>&lt;h1 id=&#34;obsidian---why-i-love-it&#34;&gt;Obsidian - Why I love it&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Obsidian is the BEST notes application in the world. Go download it: &lt;a href=&#34;https://obsidian.md/&#34;&gt;https://obsidian.md/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-setup&#34;&gt;The Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a new folder labeled &lt;em&gt;posts&lt;/em&gt;. This is where you will add your blog posts&lt;/li&gt;
&lt;li&gt;&amp;hellip;.that&amp;rsquo;s all you have to do&lt;/li&gt;
&lt;li&gt;Actually&amp;hellip;wait&amp;hellip;.find out where your Obsidian directories are. Right click your &lt;em&gt;posts&lt;/em&gt; folder and choose &lt;em&gt;show in system explorer&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;ll need this directory in upcoming steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241115145036.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;setting-up-hugo&#34;&gt;Setting up Hugo&lt;/h1&gt;
&lt;h2 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h2&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install Git: &lt;a href=&#34;https://github.com/git-guides/install-git&#34;&gt;https://github.com/git-guides/install-git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Go: &lt;a href=&#34;https://go.dev/dl/&#34;&gt;https://go.dev/dl/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-hugo-1&#34;&gt;Install Hugo&lt;/h3&gt;
&lt;p&gt;Link: &lt;a href=&#34;https://gohugo.io/installation/&#34;&gt;https://gohugo.io/installation/&lt;/a&gt;&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;obsidian---why-i-love-it&#34;&gt;Obsidian - Why I love it&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Obsidian is the BEST notes application in the world. Go download it: &lt;a href=&#34;https://obsidian.md/&#34;&gt;https://obsidian.md/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-setup&#34;&gt;The Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a new folder labeled &lt;em&gt;posts&lt;/em&gt;. This is where you will add your blog posts&lt;/li&gt;
&lt;li&gt;&amp;hellip;.that&amp;rsquo;s all you have to do&lt;/li&gt;
&lt;li&gt;Actually&amp;hellip;wait&amp;hellip;.find out where your Obsidian directories are. Right click your &lt;em&gt;posts&lt;/em&gt; folder and choose &lt;em&gt;show in system explorer&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;ll need this directory in upcoming steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241115145036.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;setting-up-hugo&#34;&gt;Setting up Hugo&lt;/h1&gt;
&lt;h2 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h2&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install Git: &lt;a href=&#34;https://github.com/git-guides/install-git&#34;&gt;https://github.com/git-guides/install-git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Go: &lt;a href=&#34;https://go.dev/dl/&#34;&gt;https://go.dev/dl/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-hugo-1&#34;&gt;Install Hugo&lt;/h3&gt;
&lt;p&gt;Link: &lt;a href=&#34;https://gohugo.io/installation/&#34;&gt;https://gohugo.io/installation/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-a-new-site&#34;&gt;Create a new site&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Verify Hugo works&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Create a new site &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site websitename
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd websitename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;download-a-hugo-theme&#34;&gt;Download a Hugo Theme&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Find themes from this link: &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;follow the theme instructions on how to download. The BEST option is to install as a git submodule&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Initialize a git repository (Make sure you are in your Hugo website directory)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Set global username and email parameters for git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global user.name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your Name&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global user.email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your.email@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install a theme (we are installing the Terminal theme here). Once downloaded it should be in your Hugo themes folder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Find a theme ---&amp;gt; https://themes.gohugo.io/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add -f https://github.com/panr/hugo-theme-terminal.git themes/terminal
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;adjust-hugo-settings&#34;&gt;Adjust Hugo settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Most themes you download will have an example configuration you can use. This is usually the best way to make sure Hugo works well and out of the box.&lt;/li&gt;
&lt;li&gt;For the &lt;em&gt;Terminal&lt;/em&gt; theme, they gave this example config below.&lt;/li&gt;
&lt;li&gt;We will edit the &lt;em&gt;hugo.toml&lt;/em&gt; file to make these changes. &amp;mdash;-&amp;gt; &lt;code&gt;nano hugo.toml&lt;/code&gt; (Linux/Mac) or &lt;code&gt;notepad hugo.toml&lt;/code&gt; (Windows) or &lt;code&gt;code hugo.toml&lt;/code&gt; (All platforms)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;baseurl&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;languageCode&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en-us&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add it only if you keep the theme in the `themes` directory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remove it if you use the theme as a remote Hugo Module.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;terminal&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paginate&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# dir name of your main content (default is `content/posts`).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# the list of set content will show up on your index page (baseurl).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;contentTypeName&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# if you set this to 0, only submenu trigger will be visible&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;showMenuItems&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# show selector to switch language&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;showLanguageSelector&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# set theme to full screen width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;fullWidthTheme&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# center theme with default width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;centerTheme&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# if your resource directory contains an image called `cover.(jpg|png|webp)`,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# then the file will be used as a cover automatically.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# With this option you don&amp;#39;t have to put the `cover` param in a front-matter.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;autoCover&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# set post to show the last updated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# If you use git, you can set `enableGitInfo` to `true` and then post will automatically get the last updated&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;showLastUpdated&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Provide a string as a prefix for the last update date. By default, it looks like this: 2020-xx-xx [Updated: 2020-xx-xx] :: Author&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# updatedDatePrefix = &amp;#34;Updated&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# whether to show a page&amp;#39;s estimated reading time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# readingTime = false # default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# whether to show a table of contents&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# can be overridden in a page&amp;#39;s front-matter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Toc = false # default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# set title for the table of contents&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# can be overridden in a page&amp;#39;s front-matter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# TocTitle = &amp;#34;Table of Contents&amp;#34; # default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;twitter&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# set Twitter handles for Twitter cards&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# see https://developer.twitter.com/en/docs/tweets/optimize-with-cards/guides/getting-started#card-and-content-attribution&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# do not include @&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;creator&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;site&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;languageName&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;English&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Terminal&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;subtitle&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A simple, retro theme for Hugo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;owner&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;keywords&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;copyright&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;menuMore&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Show more&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;readMore&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Read more&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;readOtherPosts&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Read other posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;newerPosts&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Newer posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;olderPosts&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Older posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;missingContentMessage&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Page not found...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;missingBackButtonLabel&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Back to home page&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;minuteReadingTime&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;min read&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;words&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      [&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;logo&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;logoText&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Terminal&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;logoHomeLink&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      [&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [[&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;identifier&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;about&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/about&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [[&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;identifier&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;showcase&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Showcase&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/showcase&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;test-hugo&#34;&gt;Test Hugo&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Verify Hugo works with your theme by running this command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo server -t themename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;walking-through-the-steps&#34;&gt;Walking Through the Steps&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;NOTE: There is a MEGA SCRIPT later in this blog that will do everything in one go.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;syncing-obsidian-to-hugo&#34;&gt;Syncing Obsidian to Hugo&lt;/h2&gt;
&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;robocopy sourcepath destination path /mir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maclinux&#34;&gt;Mac/Linux&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sourcepath&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;destinationpath&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;add-some-frontmatter&#34;&gt;Add some frontmatter&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: blogtitle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2024-11-06
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tags:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - tag1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - tag2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;transfer-images-from-obsidian-to-hugo&#34;&gt;Transfer Images from Obsidian to Hugo&lt;/h2&gt;
&lt;h3 id=&#34;windows-1&#34;&gt;Windows&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shutil
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Paths (using raw strings to handle Windows backslashes correctly)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posts_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\chuck\Documents\chuckblog\content\posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attachments_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\chuck\Documents\my_second_brain\neotokos\Attachments&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static_images_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\chuck\Documents\chuckblog\static\images&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 1: Process each markdown file in the posts directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; filename &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(posts_dir):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; filename&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.md&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        filepath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(posts_dir, filename)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 2: Find all image links in the format ![Image Description](/images/Pasted%20image%20...%20.png)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        images &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\[\[([^]]*\.png)\]\]&amp;#39;&lt;/span&gt;, content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 3: Replace image links and ensure URLs are correctly formatted&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; image &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; images:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Prepare the Markdown-compatible link with %20 replacing spaces&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            markdown_image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;![Image Description](/images/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;image&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&amp;#34;&lt;/span&gt;, markdown_image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Step 4: Copy the image to the Hugo static/images directory if it exists&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            image_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(attachments_dir, image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(image_source):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy(image_source, static_images_dir)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 5: Write the updated content back to the markdown file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Markdown files processed and images copied successfully.&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;maclinux-1&#34;&gt;Mac/Linux&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shutil
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Paths&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posts_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/networkchuck/Documents/chuckblog/content/posts/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attachments_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/networkchuck/Documents/neotokos/Attachments/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static_images_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/networkchuck/Documents/chuckblog/static/images/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 1: Process each markdown file in the posts directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; filename &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(posts_dir):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; filename&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.md&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        filepath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(posts_dir, filename)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 2: Find all image links in the format ![Image Description](/images/Pasted%20image%20...%20.png)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        images &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\[\[([^]]*\.png)\]\]&amp;#39;&lt;/span&gt;, content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 3: Replace image links and ensure URLs are correctly formatted&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; image &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; images:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Prepare the Markdown-compatible link with %20 replacing spaces&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            markdown_image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;![Image Description](/images/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;image&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&amp;#34;&lt;/span&gt;, markdown_image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Step 4: Copy the image to the Hugo static/images directory if it exists&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            image_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(attachments_dir, image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(image_source):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy(image_source, static_images_dir)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 5: Write the updated content back to the markdown file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Markdown files processed and images copied successfully.&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;setup-github&#34;&gt;Setup GitHub&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Git yourself an account&lt;/li&gt;
&lt;li&gt;Then create a repo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;authenticate-yourself&#34;&gt;Authenticate yourself&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Generate an SSH key (Mac/Linux/Windows)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_email@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;push-to-github&#34;&gt;Push to GitHub&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 8: Push the public folder to the hostinger branch using subtree split and force push&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deploying to GitHub Hostinger...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git subtree split --prefix public -b hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin hostinger-deploy:hostinger --force
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;the-mega-script&#34;&gt;The Mega Script&lt;/h1&gt;
&lt;h2 id=&#34;windows-powershell&#34;&gt;Windows (Powershell)&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# PowerShell Script for Windows&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set variables for Obsidian to Hugo copy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$sourcePath = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\path\to\obsidian\posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$destinationPath = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\path\to\hugo\posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set Github repo &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$myrepo = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reponame&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set error handling&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ErrorActionPreference = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stop&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-StrictMode -Version Latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Change to the script&amp;#39;s directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-Location $ScriptDir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Check for required commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$requiredCommands = @(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hugo&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Check for Python command (python or python3)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (Get-Command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python&amp;#39;&lt;/span&gt; -ErrorAction SilentlyContinue) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $pythonCommand = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;elseif&lt;/span&gt; (Get-Command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python3&amp;#39;&lt;/span&gt; -ErrorAction SilentlyContinue) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $pythonCommand = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python3&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Python is not installed or not in PATH.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($cmd &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $requiredCommands) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; (Get-Command $cmd -ErrorAction SilentlyContinue)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$cmd&lt;span style=&#34;color:#e6db74&#34;&gt; is not installed or not in PATH.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 1: Check if Git is initialized, and initialize if necessary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; (Test-Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Initializing Git repository...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git remote add origin $myrepo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Git repository already initialized.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $remotes = git remote
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; ($remotes &lt;span style=&#34;color:#f92672&#34;&gt;-contains&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin&amp;#39;&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding remote origin...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        git remote add origin $myrepo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 2: Sync posts from Obsidian to Hugo content folder using Robocopy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Syncing posts from Obsidian...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; (Test-Path $sourcePath)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source path does not exist: &lt;/span&gt;$sourcePath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; (Test-Path $destinationPath)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination path does not exist: &lt;/span&gt;$destinationPath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Use Robocopy to mirror the directories&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$robocopyOptions = @(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/MIR&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Z&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/W:5&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/R:3&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$robocopyResult = robocopy $sourcePath $destinationPath @robocopyOptions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($LASTEXITCODE &lt;span style=&#34;color:#f92672&#34;&gt;-ge&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Robocopy failed with exit code &lt;/span&gt;$LASTEXITCODE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 3: Process Markdown files with Python script to handle image links&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Processing image links in Markdown files...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; (Test-Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;images.py&amp;#34;&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Python script images.py not found.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Execute the Python script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;amp; $pythonCommand images.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to process image links.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 4: Build the Hugo site&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Building the Hugo site...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hugo build failed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 5: Add changes to Git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Staging changes for Git...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$hasChanges = (git status --porcelain) &lt;span style=&#34;color:#f92672&#34;&gt;-ne&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; $hasChanges) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No changes to stage.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 6: Commit changes with a dynamic message&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$commitMessage = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;New Blog Post on &lt;/span&gt;$(Get-Date -Format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$hasStagedChanges = (git diff --cached --name-only) &lt;span style=&#34;color:#f92672&#34;&gt;-ne&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-not&lt;/span&gt; $hasStagedChanges) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No changes to commit.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Committing changes...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$commitMessage&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 7: Push all changes to the main branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deploying to GitHub Master...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to push to Master branch.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 8: Push the public folder to the hostinger branch using subtree split and force push&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deploying to GitHub Hostinger...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Check if the temporary branch exists and delete it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$branchExists = git branch --list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hostinger-deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($branchExists) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Perform subtree split&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git subtree split --prefix public -b hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Subtree split failed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Push to hostinger branch with force&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git push origin hostinger-deploy&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;hostinger --force
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to push to hostinger branch.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Delete the temporary branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;All done! Site synced, processed, committed, built, and deployed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linuxmac-bash&#34;&gt;Linux/Mac (BASH)&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;set -euo pipefail
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Change to the script&amp;#39;s directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SCRIPT_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dirname &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BASH_SOURCE[0]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$SCRIPT_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set variables for Obsidian to Hugo copy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sourcePath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/path/to/obsidian/posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;destinationPath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/path/to/hugo/posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set GitHub Repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myrepo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reponame&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Check for required commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; cmd in git rsync python3 hugo; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! command -v $cmd &amp;amp;&amp;gt; /dev/null; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$cmd&lt;span style=&#34;color:#e6db74&#34;&gt; is not installed or not in PATH.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 1: Check if Git is initialized, and initialize if necessary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Initializing Git repository...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git remote add origin $myrepo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Git repository already initialized.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! git remote | grep -q &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin&amp;#39;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding remote origin...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        git remote add origin $myrepo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 2: Sync posts from Obsidian to Hugo content folder using rsync&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Syncing posts from Obsidian...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$sourcePath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source path does not exist: &lt;/span&gt;$sourcePath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$destinationPath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination path does not exist: &lt;/span&gt;$destinationPath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$sourcePath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$destinationPath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 3: Process Markdown files with Python script to handle image links&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Processing image links in Markdown files...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;images.py&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Python script images.py not found.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! python3 images.py; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to process image links.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 4: Build the Hugo site&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Building the Hugo site...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! hugo; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hugo build failed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 5: Add changes to Git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Staging changes for Git...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; git diff --quiet &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git diff --cached --quiet; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No changes to stage.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 6: Commit changes with a dynamic message&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;commit_message&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;New Blog Post on &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; git diff --cached --quiet; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No changes to commit.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Committing changes...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$commit_message&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 7: Push all changes to the main branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deploying to GitHub Main...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! git push origin main; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to push to main branch.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 8: Push the public folder to the hostinger branch using subtree split and force push&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deploying to GitHub Hostinger...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; git branch --list | grep -q &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hostinger-deploy&amp;#39;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! git subtree split --prefix public -b hostinger-deploy; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Subtree split failed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! git push origin hostinger-deploy:hostinger --force; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to push to hostinger branch.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch -D hostinger-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;All done! Site synced, processed, committed, built, and deployed.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>PLEAAASSEE WORK</title>
      <link>/posts/another-test/</link>
      <pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/another-test/</guid>
      <description>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241115183417.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;a;lsdjf;lkajsd;lkfaj;lksdfjl;kasjdfa
sdfakljsd;flkajsdfa
sdlkifa&amp;rsquo;lskdfja;lskdfj
Just another little test&lt;/p&gt;
&lt;h1 id=&#34;yeessss&#34;&gt;YEESSSS&lt;/h1&gt;</description>
      <content>&lt;p&gt;!&lt;img alt=&#34;Image Description&#34; src=&#34;/images/Pasted%20image%2020241115183417.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;a;lsdjf;lkajsd;lkfaj;lksdfjl;kasjdfa
sdfakljsd;flkajsdfa
sdlkifa&amp;rsquo;lskdfja;lskdfj
Just another little test&lt;/p&gt;
&lt;h1 id=&#34;yeessss&#34;&gt;YEESSSS&lt;/h1&gt;
</content>
    </item>
    
  </channel>
</rss>
